   1               		.file	"user_template.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               		.section	.text.init,"ax",@progbits
  13               	.global	init
  15               	init:
  16               	.LFB69:
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE69:
  26               		.section	.text.loop,"ax",@progbits
  27               	.global	loop
  29               	loop:
  30               	.LFB66:
  31               		.file 1 "../user_template.c"
   1:../user_template.c **** #include "user_template.h"
   2:../user_template.c **** 
   3:../user_template.c **** /*
   4:../user_template.c ****  * any code in this function will be run once, when the robot starts.
   5:../user_template.c ****  */
   6:../user_template.c **** void init(){
   7:../user_template.c **** 
   8:../user_template.c **** }
   9:../user_template.c **** 
  10:../user_template.c **** /*
  11:../user_template.c ****  * the code in this function will be called repeatedly, as fast as it can execute.
  12:../user_template.c ****  */
  13:../user_template.c **** void loop(){
  32               		.loc 1 13 0
  33               		.cfi_startproc
  34               	/* prologue: function */
  35               	/* frame size = 0 */
  36               	/* stack size = 0 */
  37               	.L__stack_usage = 0
  38 0000 0895      		ret
  39               		.cfi_endproc
  40               	.LFE66:
  42               		.section	.text.handle_msg,"ax",@progbits
  43               	.global	handle_msg
  45               	handle_msg:
  46               	.LFB67:
  14:../user_template.c **** 
  15:../user_template.c **** }
  16:../user_template.c **** 
  17:../user_template.c **** /*
  18:../user_template.c ****  * after each pass through loop(), the robot checks for all messages it has 
  19:../user_template.c ****  * received, and calls this function once for each message.
  20:../user_template.c ****  */
  21:../user_template.c **** void handle_msg(ir_msg* msg_struct){
  47               		.loc 1 21 0
  48               		.cfi_startproc
  49               	.LVL0:
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  54 0000 0895      		ret
  55               		.cfi_endproc
  56               	.LFE67:
  58               		.comm	seedFlag,1,1
  59               		.comm	myPosCovar,12,1
  60               		.comm	myPos,6,1
  61               		.comm	mm_per_kilostep,16,1
  62               		.comm	motor_adjusts,48,1
  63               		.comm	rnbProcessingFlag,1,1
  64               		.comm	rnbCmdSentTime,4,1
  65               		.comm	rnbCmdID,2,1
  66               		.comm	rnb_updated,1,1
  67               		.comm	last_good_rnb,8,1
  68               		.comm	cmd_sender_dir,1,1
  69               		.comm	cmd_arrival_dir,1,1
  70               		.comm	cmd_sender_id,2,1
  71               		.comm	cmd_arrival_time,4,1
  72               		.comm	user_facing_messages_ovf,1,1
  73               		.comm	num_waiting_msgs,1,1
  74               		.comm	hp_ir_block_bm,1,1
  75               		.comm	msg_node,294,1
  76               		.comm	ir_rxtx,342,1
  77               		.comm	obsStart,2,1
  78               		.comm	curr_ir_power,2,1
  79               		.comm	twi,2,1
  80               		.comm	twiMaster,25,1
  81               		.section	.bss.task_storage_arr,"aw",@nobits
  84               	task_storage_arr:
  85 0000 0000 0000 		.zero	140
  85      0000 0000 
  85      0000 0000 
  85      0000 0000 
  85      0000 0000 
  86               		.comm	task_executing,1,1
  87               		.comm	num_tasks,1,1
  88               		.comm	task_list,2,1
  89               		.comm	rtc_epoch,2,1
  90               		.comm	droplet_ID,2,1
  91               		.text
  92               	.Letext0:
  93               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
  94               		.file 3 "c:\\program files (x86)\\atmel\\studio\\7.0\\packs\\atmel\\xmegaa_dfp\\1.1.68\\include\\a
  95               		.file 4 "../include/droplet_base.h"
  96               		.file 5 "../include/scheduler.h"
  97               		.file 6 "../include/i2c.h"
  98               		.file 7 "../include/firefly_sync.h"
  99               		.file 8 "../include/ir_comm.h"
 100               		.file 9 "../include/range_algs.h"
 101               		.file 10 "../include/localization.h"
 102               		.file 11 "../include/droplet_init.h"
 103               		.file 12 "../include/ir_led.h"
 104               		.file 13 "../include/motor.h"
DEFINED SYMBOLS
                            *ABS*:00000000 user_template.c
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:2      *ABS*:0000003e __SP_H__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:3      *ABS*:0000003d __SP_L__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:4      *ABS*:0000003f __SREG__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:6      *ABS*:00000034 __CCP__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:7      *ABS*:00000000 __tmp_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:8      *ABS*:00000001 __zero_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:15     .text.init:00000000 init
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:29     .text.loop:00000000 loop
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:45     .text.handle_msg:00000000 handle_msg
                            *COM*:00000001 seedFlag
                            *COM*:0000000c myPosCovar
                            *COM*:00000006 myPos
                            *COM*:00000010 mm_per_kilostep
                            *COM*:00000030 motor_adjusts
                            *COM*:00000001 rnbProcessingFlag
                            *COM*:00000004 rnbCmdSentTime
                            *COM*:00000002 rnbCmdID
                            *COM*:00000001 rnb_updated
                            *COM*:00000008 last_good_rnb
                            *COM*:00000001 cmd_sender_dir
                            *COM*:00000001 cmd_arrival_dir
                            *COM*:00000002 cmd_sender_id
                            *COM*:00000004 cmd_arrival_time
                            *COM*:00000001 user_facing_messages_ovf
                            *COM*:00000001 num_waiting_msgs
                            *COM*:00000001 hp_ir_block_bm
                            *COM*:00000126 msg_node
                            *COM*:00000156 ir_rxtx
                            *COM*:00000002 obsStart
                            *COM*:00000002 curr_ir_power
                            *COM*:00000002 twi
                            *COM*:00000019 twiMaster
C:\Users\JOHNK~1\AppData\Local\Temp\ccaZrWAZ.s:84     .bss.task_storage_arr:00000000 task_storage_arr
                            *COM*:00000001 task_executing
                            *COM*:00000001 num_tasks
                            *COM*:00000002 task_list
                            *COM*:00000002 rtc_epoch
                            *COM*:00000002 droplet_ID

UNDEFINED SYMBOLS
__do_clear_bss
