   1               		.file	"matrix_utils.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	__addsf3
  13               		.section	.text.vectorAdd,"ax",@progbits
  14               	.global	vectorAdd
  16               	vectorAdd:
  17               	.LFB28:
  18               		.file 1 "../src/matrix_utils.c"
   1:../src/matrix_utils.c **** #include "matrix_utils.h"
   2:../src/matrix_utils.c **** 
   3:../src/matrix_utils.c **** void vectorAdd(Vector* dst, Vector* a, Vector* b){		//dst = a + b
  19               		.loc 1 3 0
  20               		.cfi_startproc
  21               	.LVL0:
  22 0000 EF92      		push r14
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 14, -3
  26 0002 FF92      		push r15
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 5
  29               		.cfi_offset 15, -4
  30 0004 0F93      		push r16
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 6
  33               		.cfi_offset 16, -5
  34 0006 1F93      		push r17
  35               	.LCFI3:
  36               		.cfi_def_cfa_offset 7
  37               		.cfi_offset 17, -6
  38 0008 CF93      		push r28
  39               	.LCFI4:
  40               		.cfi_def_cfa_offset 8
  41               		.cfi_offset 28, -7
  42 000a DF93      		push r29
  43               	.LCFI5:
  44               		.cfi_def_cfa_offset 9
  45               		.cfi_offset 29, -8
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 6 */
  49               	.L__stack_usage = 6
  50 000c EC01      		movw r28,r24
  51 000e 8B01      		movw r16,r22
  52 0010 7A01      		movw r14,r20
   4:../src/matrix_utils.c **** 	(*dst)[0] = (*a)[0] + (*b)[0];
  53               		.loc 1 4 0
  54 0012 FA01      		movw r30,r20
  55 0014 2081      		ld r18,Z
  56 0016 3181      		ldd r19,Z+1
  57 0018 4281      		ldd r20,Z+2
  58 001a 5381      		ldd r21,Z+3
  59 001c FB01      		movw r30,r22
  60 001e 6081      		ld r22,Z
  61 0020 7181      		ldd r23,Z+1
  62 0022 8281      		ldd r24,Z+2
  63 0024 9381      		ldd r25,Z+3
  64               	.LVL1:
  65 0026 0E94 0000 		call __addsf3
  66               	.LVL2:
  67 002a 6883      		st Y,r22
  68 002c 7983      		std Y+1,r23
  69 002e 8A83      		std Y+2,r24
  70 0030 9B83      		std Y+3,r25
   5:../src/matrix_utils.c **** 	(*dst)[1] = (*a)[1] + (*b)[1];
  71               		.loc 1 5 0
  72 0032 F701      		movw r30,r14
  73 0034 2481      		ldd r18,Z+4
  74 0036 3581      		ldd r19,Z+5
  75 0038 4681      		ldd r20,Z+6
  76 003a 5781      		ldd r21,Z+7
  77 003c F801      		movw r30,r16
  78 003e 6481      		ldd r22,Z+4
  79 0040 7581      		ldd r23,Z+5
  80 0042 8681      		ldd r24,Z+6
  81 0044 9781      		ldd r25,Z+7
  82 0046 0E94 0000 		call __addsf3
  83               	.LVL3:
  84 004a 6C83      		std Y+4,r22
  85 004c 7D83      		std Y+5,r23
  86 004e 8E83      		std Y+6,r24
  87 0050 9F83      		std Y+7,r25
   6:../src/matrix_utils.c **** 	(*dst)[2] = (*a)[2] + (*b)[2];
  88               		.loc 1 6 0
  89 0052 F701      		movw r30,r14
  90 0054 2085      		ldd r18,Z+8
  91 0056 3185      		ldd r19,Z+9
  92 0058 4285      		ldd r20,Z+10
  93 005a 5385      		ldd r21,Z+11
  94 005c F801      		movw r30,r16
  95 005e 6085      		ldd r22,Z+8
  96 0060 7185      		ldd r23,Z+9
  97 0062 8285      		ldd r24,Z+10
  98 0064 9385      		ldd r25,Z+11
  99 0066 0E94 0000 		call __addsf3
 100               	.LVL4:
 101 006a 6887      		std Y+8,r22
 102 006c 7987      		std Y+9,r23
 103 006e 8A87      		std Y+10,r24
 104 0070 9B87      		std Y+11,r25
 105               	/* epilogue start */
   7:../src/matrix_utils.c **** }
 106               		.loc 1 7 0
 107 0072 DF91      		pop r29
 108 0074 CF91      		pop r28
 109               	.LVL5:
 110 0076 1F91      		pop r17
 111 0078 0F91      		pop r16
 112               	.LVL6:
 113 007a FF90      		pop r15
 114 007c EF90      		pop r14
 115               	.LVL7:
 116 007e 0895      		ret
 117               		.cfi_endproc
 118               	.LFE28:
 120               	.global	__subsf3
 121               		.section	.text.vectorSubtract,"ax",@progbits
 122               	.global	vectorSubtract
 124               	vectorSubtract:
 125               	.LFB29:
   8:../src/matrix_utils.c **** 
   9:../src/matrix_utils.c **** void vectorSubtract(Vector* dst, Vector* a, Vector* b){	//dst = a - b
 126               		.loc 1 9 0
 127               		.cfi_startproc
 128               	.LVL8:
 129 0000 EF92      		push r14
 130               	.LCFI6:
 131               		.cfi_def_cfa_offset 4
 132               		.cfi_offset 14, -3
 133 0002 FF92      		push r15
 134               	.LCFI7:
 135               		.cfi_def_cfa_offset 5
 136               		.cfi_offset 15, -4
 137 0004 0F93      		push r16
 138               	.LCFI8:
 139               		.cfi_def_cfa_offset 6
 140               		.cfi_offset 16, -5
 141 0006 1F93      		push r17
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 7
 144               		.cfi_offset 17, -6
 145 0008 CF93      		push r28
 146               	.LCFI10:
 147               		.cfi_def_cfa_offset 8
 148               		.cfi_offset 28, -7
 149 000a DF93      		push r29
 150               	.LCFI11:
 151               		.cfi_def_cfa_offset 9
 152               		.cfi_offset 29, -8
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 6 */
 156               	.L__stack_usage = 6
 157 000c EC01      		movw r28,r24
 158 000e 8B01      		movw r16,r22
 159 0010 7A01      		movw r14,r20
  10:../src/matrix_utils.c **** 	(*dst)[0] = (*a)[0] - (*b)[0];
 160               		.loc 1 10 0
 161 0012 FA01      		movw r30,r20
 162 0014 2081      		ld r18,Z
 163 0016 3181      		ldd r19,Z+1
 164 0018 4281      		ldd r20,Z+2
 165 001a 5381      		ldd r21,Z+3
 166 001c FB01      		movw r30,r22
 167 001e 6081      		ld r22,Z
 168 0020 7181      		ldd r23,Z+1
 169 0022 8281      		ldd r24,Z+2
 170 0024 9381      		ldd r25,Z+3
 171               	.LVL9:
 172 0026 0E94 0000 		call __subsf3
 173               	.LVL10:
 174 002a 6883      		st Y,r22
 175 002c 7983      		std Y+1,r23
 176 002e 8A83      		std Y+2,r24
 177 0030 9B83      		std Y+3,r25
  11:../src/matrix_utils.c **** 	(*dst)[1] = (*a)[1] - (*b)[1];
 178               		.loc 1 11 0
 179 0032 F701      		movw r30,r14
 180 0034 2481      		ldd r18,Z+4
 181 0036 3581      		ldd r19,Z+5
 182 0038 4681      		ldd r20,Z+6
 183 003a 5781      		ldd r21,Z+7
 184 003c F801      		movw r30,r16
 185 003e 6481      		ldd r22,Z+4
 186 0040 7581      		ldd r23,Z+5
 187 0042 8681      		ldd r24,Z+6
 188 0044 9781      		ldd r25,Z+7
 189 0046 0E94 0000 		call __subsf3
 190               	.LVL11:
 191 004a 6C83      		std Y+4,r22
 192 004c 7D83      		std Y+5,r23
 193 004e 8E83      		std Y+6,r24
 194 0050 9F83      		std Y+7,r25
  12:../src/matrix_utils.c **** 	(*dst)[2] = (*a)[2] - (*b)[2];
 195               		.loc 1 12 0
 196 0052 F701      		movw r30,r14
 197 0054 2085      		ldd r18,Z+8
 198 0056 3185      		ldd r19,Z+9
 199 0058 4285      		ldd r20,Z+10
 200 005a 5385      		ldd r21,Z+11
 201 005c F801      		movw r30,r16
 202 005e 6085      		ldd r22,Z+8
 203 0060 7185      		ldd r23,Z+9
 204 0062 8285      		ldd r24,Z+10
 205 0064 9385      		ldd r25,Z+11
 206 0066 0E94 0000 		call __subsf3
 207               	.LVL12:
 208 006a 6887      		std Y+8,r22
 209 006c 7987      		std Y+9,r23
 210 006e 8A87      		std Y+10,r24
 211 0070 9B87      		std Y+11,r25
 212               	/* epilogue start */
  13:../src/matrix_utils.c **** }
 213               		.loc 1 13 0
 214 0072 DF91      		pop r29
 215 0074 CF91      		pop r28
 216               	.LVL13:
 217 0076 1F91      		pop r17
 218 0078 0F91      		pop r16
 219               	.LVL14:
 220 007a FF90      		pop r15
 221 007c EF90      		pop r14
 222               	.LVL15:
 223 007e 0895      		ret
 224               		.cfi_endproc
 225               	.LFE29:
 227               	.global	__mulsf3
 228               		.section	.text.vectorSquare,"ax",@progbits
 229               	.global	vectorSquare
 231               	vectorSquare:
 232               	.LFB30:
  14:../src/matrix_utils.c **** 
  15:../src/matrix_utils.c **** void vectorSquare(Matrix* DST, Vector* a){
 233               		.loc 1 15 0
 234               		.cfi_startproc
 235               	.LVL16:
 236 0000 8F92      		push r8
 237               	.LCFI12:
 238               		.cfi_def_cfa_offset 4
 239               		.cfi_offset 8, -3
 240 0002 9F92      		push r9
 241               	.LCFI13:
 242               		.cfi_def_cfa_offset 5
 243               		.cfi_offset 9, -4
 244 0004 AF92      		push r10
 245               	.LCFI14:
 246               		.cfi_def_cfa_offset 6
 247               		.cfi_offset 10, -5
 248 0006 BF92      		push r11
 249               	.LCFI15:
 250               		.cfi_def_cfa_offset 7
 251               		.cfi_offset 11, -6
 252 0008 CF92      		push r12
 253               	.LCFI16:
 254               		.cfi_def_cfa_offset 8
 255               		.cfi_offset 12, -7
 256 000a DF92      		push r13
 257               	.LCFI17:
 258               		.cfi_def_cfa_offset 9
 259               		.cfi_offset 13, -8
 260 000c EF92      		push r14
 261               	.LCFI18:
 262               		.cfi_def_cfa_offset 10
 263               		.cfi_offset 14, -9
 264 000e FF92      		push r15
 265               	.LCFI19:
 266               		.cfi_def_cfa_offset 11
 267               		.cfi_offset 15, -10
 268 0010 0F93      		push r16
 269               	.LCFI20:
 270               		.cfi_def_cfa_offset 12
 271               		.cfi_offset 16, -11
 272 0012 1F93      		push r17
 273               	.LCFI21:
 274               		.cfi_def_cfa_offset 13
 275               		.cfi_offset 17, -12
 276 0014 CF93      		push r28
 277               	.LCFI22:
 278               		.cfi_def_cfa_offset 14
 279               		.cfi_offset 28, -13
 280 0016 DF93      		push r29
 281               	.LCFI23:
 282               		.cfi_def_cfa_offset 15
 283               		.cfi_offset 29, -14
 284               	/* prologue: function */
 285               	/* frame size = 0 */
 286               	/* stack size = 12 */
 287               	.L__stack_usage = 12
 288 0018 4B01      		movw r8,r22
 289               	.LVL17:
 290 001a 5C01      		movw r10,r24
 291 001c 6B01      		movw r12,r22
 292 001e 8CE0      		ldi r24,12
 293 0020 C80E      		add r12,r24
 294 0022 D11C      		adc r13,__zero_reg__
 295               	.LVL18:
 296               		.loc 1 15 0
 297 0024 7B01      		movw r14,r22
 298               	.LVL19:
 299               	.L4:
 300 0026 8501      		movw r16,r10
 301 0028 E401      		movw r28,r8
 302               	.LVL20:
 303               	.L5:
 304               	.LBB58:
 305               	.LBB59:
  16:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  17:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  18:../src/matrix_utils.c **** 			(*DST)[i][j] = (*a)[i] * (*a)[j];
 306               		.loc 1 18 0 discriminator 3
 307 002a 2991      		ld r18,Y+
 308 002c 3991      		ld r19,Y+
 309 002e 4991      		ld r20,Y+
 310 0030 5991      		ld r21,Y+
 311 0032 F701      		movw r30,r14
 312 0034 6081      		ld r22,Z
 313 0036 7181      		ldd r23,Z+1
 314 0038 8281      		ldd r24,Z+2
 315 003a 9381      		ldd r25,Z+3
 316 003c 0E94 0000 		call __mulsf3
 317               	.LVL21:
 318 0040 F801      		movw r30,r16
 319 0042 6193      		st Z+,r22
 320 0044 7193      		st Z+,r23
 321 0046 8193      		st Z+,r24
 322 0048 9193      		st Z+,r25
 323 004a 8F01      		movw r16,r30
  17:../src/matrix_utils.c **** 			(*DST)[i][j] = (*a)[i] * (*a)[j];
 324               		.loc 1 17 0 discriminator 3
 325 004c CC15      		cp r28,r12
 326 004e DD05      		cpc r29,r13
 327 0050 01F4      		brne .L5
 328 0052 FCE0      		ldi r31,12
 329 0054 AF0E      		add r10,r31
 330 0056 B11C      		adc r11,__zero_reg__
 331 0058 84E0      		ldi r24,4
 332 005a E80E      		add r14,r24
 333 005c F11C      		adc r15,__zero_reg__
 334               	.LBE59:
  16:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 335               		.loc 1 16 0 discriminator 2
 336 005e EC16      		cp r14,r28
 337 0060 FD06      		cpc r15,r29
 338 0062 01F4      		brne .L4
 339               	/* epilogue start */
 340               	.LBE58:
  19:../src/matrix_utils.c **** 		}
  20:../src/matrix_utils.c **** 	}
  21:../src/matrix_utils.c **** }
 341               		.loc 1 21 0
 342 0064 DF91      		pop r29
 343 0066 CF91      		pop r28
 344 0068 1F91      		pop r17
 345 006a 0F91      		pop r16
 346 006c FF90      		pop r15
 347 006e EF90      		pop r14
 348 0070 DF90      		pop r13
 349 0072 CF90      		pop r12
 350 0074 BF90      		pop r11
 351 0076 AF90      		pop r10
 352 0078 9F90      		pop r9
 353 007a 8F90      		pop r8
 354               	.LVL22:
 355 007c 0895      		ret
 356               		.cfi_endproc
 357               	.LFE30:
 359               		.section	.text.matrixScale,"ax",@progbits
 360               	.global	matrixScale
 362               	matrixScale:
 363               	.LFB31:
  22:../src/matrix_utils.c **** 
  23:../src/matrix_utils.c **** void matrixScale(Matrix* A, float s){
 364               		.loc 1 23 0
 365               		.cfi_startproc
 366               	.LVL23:
 367 0000 8F92      		push r8
 368               	.LCFI24:
 369               		.cfi_def_cfa_offset 4
 370               		.cfi_offset 8, -3
 371 0002 9F92      		push r9
 372               	.LCFI25:
 373               		.cfi_def_cfa_offset 5
 374               		.cfi_offset 9, -4
 375 0004 AF92      		push r10
 376               	.LCFI26:
 377               		.cfi_def_cfa_offset 6
 378               		.cfi_offset 10, -5
 379 0006 BF92      		push r11
 380               	.LCFI27:
 381               		.cfi_def_cfa_offset 7
 382               		.cfi_offset 11, -6
 383 0008 CF92      		push r12
 384               	.LCFI28:
 385               		.cfi_def_cfa_offset 8
 386               		.cfi_offset 12, -7
 387 000a DF92      		push r13
 388               	.LCFI29:
 389               		.cfi_def_cfa_offset 9
 390               		.cfi_offset 13, -8
 391 000c EF92      		push r14
 392               	.LCFI30:
 393               		.cfi_def_cfa_offset 10
 394               		.cfi_offset 14, -9
 395 000e FF92      		push r15
 396               	.LCFI31:
 397               		.cfi_def_cfa_offset 11
 398               		.cfi_offset 15, -10
 399 0010 0F93      		push r16
 400               	.LCFI32:
 401               		.cfi_def_cfa_offset 12
 402               		.cfi_offset 16, -11
 403 0012 1F93      		push r17
 404               	.LCFI33:
 405               		.cfi_def_cfa_offset 13
 406               		.cfi_offset 17, -12
 407 0014 CF93      		push r28
 408               	.LCFI34:
 409               		.cfi_def_cfa_offset 14
 410               		.cfi_offset 28, -13
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 11 */
 414               	.L__stack_usage = 11
 415 0016 4A01      		movw r8,r20
 416 0018 5B01      		movw r10,r22
 417               	.LVL24:
 418 001a 7C01      		movw r14,r24
 419 001c 6C01      		movw r12,r24
 420 001e 84E2      		ldi r24,36
 421 0020 C80E      		add r12,r24
 422 0022 D11C      		adc r13,__zero_reg__
 423               	.LVL25:
 424               	.L10:
 425               		.loc 1 23 0
 426 0024 8701      		movw r16,r14
 427 0026 C0E0      		ldi r28,0
 428               	.LVL26:
 429               	.L11:
 430               	.LBB60:
 431               	.LBB61:
  24:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  25:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  26:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]*s;
 432               		.loc 1 26 0 discriminator 3
 433 0028 A501      		movw r20,r10
 434 002a 9401      		movw r18,r8
 435 002c F801      		movw r30,r16
 436 002e 6081      		ld r22,Z
 437 0030 7181      		ldd r23,Z+1
 438 0032 8281      		ldd r24,Z+2
 439 0034 9381      		ldd r25,Z+3
 440 0036 0E94 0000 		call __mulsf3
 441               	.LVL27:
 442 003a F801      		movw r30,r16
 443 003c 6193      		st Z+,r22
 444 003e 7193      		st Z+,r23
 445 0040 8193      		st Z+,r24
 446 0042 9193      		st Z+,r25
 447 0044 8F01      		movw r16,r30
  25:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]*s;
 448               		.loc 1 25 0 discriminator 3
 449 0046 CF5F      		subi r28,lo8(-(1))
 450               	.LVL28:
 451 0048 C330      		cpi r28,lo8(3)
 452 004a 01F4      		brne .L11
 453 004c FCE0      		ldi r31,12
 454 004e EF0E      		add r14,r31
 455 0050 F11C      		adc r15,__zero_reg__
 456               	.LBE61:
  24:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 457               		.loc 1 24 0 discriminator 2
 458 0052 EC14      		cp r14,r12
 459 0054 FD04      		cpc r15,r13
 460 0056 01F4      		brne .L10
 461               	/* epilogue start */
 462               	.LBE60:
  27:../src/matrix_utils.c **** 		}
  28:../src/matrix_utils.c **** 	}
  29:../src/matrix_utils.c **** }
 463               		.loc 1 29 0
 464 0058 CF91      		pop r28
 465               	.LVL29:
 466 005a 1F91      		pop r17
 467 005c 0F91      		pop r16
 468 005e FF90      		pop r15
 469 0060 EF90      		pop r14
 470 0062 DF90      		pop r13
 471 0064 CF90      		pop r12
 472               	.LVL30:
 473 0066 BF90      		pop r11
 474 0068 AF90      		pop r10
 475 006a 9F90      		pop r9
 476 006c 8F90      		pop r8
 477               	.LVL31:
 478 006e 0895      		ret
 479               		.cfi_endproc
 480               	.LFE31:
 482               		.section	.text.matrixTimesVector,"ax",@progbits
 483               	.global	matrixTimesVector
 485               	matrixTimesVector:
 486               	.LFB32:
  30:../src/matrix_utils.c **** 
  31:../src/matrix_utils.c **** void matrixTimesVector(Vector* dst, Matrix* A, Vector* b){	//dst = A x b
 487               		.loc 1 31 0
 488               		.cfi_startproc
 489               	.LVL32:
 490 0000 2F92      		push r2
 491               	.LCFI35:
 492               		.cfi_def_cfa_offset 4
 493               		.cfi_offset 2, -3
 494 0002 3F92      		push r3
 495               	.LCFI36:
 496               		.cfi_def_cfa_offset 5
 497               		.cfi_offset 3, -4
 498 0004 4F92      		push r4
 499               	.LCFI37:
 500               		.cfi_def_cfa_offset 6
 501               		.cfi_offset 4, -5
 502 0006 5F92      		push r5
 503               	.LCFI38:
 504               		.cfi_def_cfa_offset 7
 505               		.cfi_offset 5, -6
 506 0008 6F92      		push r6
 507               	.LCFI39:
 508               		.cfi_def_cfa_offset 8
 509               		.cfi_offset 6, -7
 510 000a 7F92      		push r7
 511               	.LCFI40:
 512               		.cfi_def_cfa_offset 9
 513               		.cfi_offset 7, -8
 514 000c 8F92      		push r8
 515               	.LCFI41:
 516               		.cfi_def_cfa_offset 10
 517               		.cfi_offset 8, -9
 518 000e 9F92      		push r9
 519               	.LCFI42:
 520               		.cfi_def_cfa_offset 11
 521               		.cfi_offset 9, -10
 522 0010 AF92      		push r10
 523               	.LCFI43:
 524               		.cfi_def_cfa_offset 12
 525               		.cfi_offset 10, -11
 526 0012 BF92      		push r11
 527               	.LCFI44:
 528               		.cfi_def_cfa_offset 13
 529               		.cfi_offset 11, -12
 530 0014 CF92      		push r12
 531               	.LCFI45:
 532               		.cfi_def_cfa_offset 14
 533               		.cfi_offset 12, -13
 534 0016 DF92      		push r13
 535               	.LCFI46:
 536               		.cfi_def_cfa_offset 15
 537               		.cfi_offset 13, -14
 538 0018 EF92      		push r14
 539               	.LCFI47:
 540               		.cfi_def_cfa_offset 16
 541               		.cfi_offset 14, -15
 542 001a FF92      		push r15
 543               	.LCFI48:
 544               		.cfi_def_cfa_offset 17
 545               		.cfi_offset 15, -16
 546 001c 0F93      		push r16
 547               	.LCFI49:
 548               		.cfi_def_cfa_offset 18
 549               		.cfi_offset 16, -17
 550 001e 1F93      		push r17
 551               	.LCFI50:
 552               		.cfi_def_cfa_offset 19
 553               		.cfi_offset 17, -18
 554 0020 CF93      		push r28
 555               	.LCFI51:
 556               		.cfi_def_cfa_offset 20
 557               		.cfi_offset 28, -19
 558 0022 DF93      		push r29
 559               	.LCFI52:
 560               		.cfi_def_cfa_offset 21
 561               		.cfi_offset 29, -20
 562               	/* prologue: function */
 563               	/* frame size = 0 */
 564               	/* stack size = 18 */
 565               	.L__stack_usage = 18
 566 0024 4A01      		movw r8,r20
 567               	.LVL33:
 568 0026 8C01      		movw r16,r24
 569 0028 6B01      		movw r12,r22
 570 002a 1C01      		movw r2,r24
 571 002c 8CE0      		ldi r24,12
 572 002e 280E      		add r2,r24
 573 0030 311C      		adc r3,__zero_reg__
 574               	.LVL34:
 575 0032 FA01      		movw r30,r20
 576 0034 3C96      		adiw r30,12
 577 0036 5F01      		movw r10,r30
 578               	.LVL35:
 579               	.L16:
 580               	.LBB62:
  32:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  33:../src/matrix_utils.c **** 		(*dst)[i] = 0;
 581               		.loc 1 33 0
 582 0038 F801      		movw r30,r16
 583 003a 1082      		st Z,__zero_reg__
 584 003c 1182      		std Z+1,__zero_reg__
 585 003e 1282      		std Z+2,__zero_reg__
 586 0040 1382      		std Z+3,__zero_reg__
 587               	.LVL36:
 588 0042 E401      		movw r28,r8
 589 0044 7601      		movw r14,r12
 590 0046 412C      		mov r4,__zero_reg__
 591 0048 512C      		mov r5,__zero_reg__
 592 004a 3201      		movw r6,r4
 593               	.LVL37:
 594               	.L15:
 595               	.LBB63:
  34:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  35:../src/matrix_utils.c **** 			(*dst)[i] += (*A)[i][j] * (*b)[j];
 596               		.loc 1 35 0 discriminator 3
 597 004c F701      		movw r30,r14
 598 004e 6191      		ld r22,Z+
 599 0050 7191      		ld r23,Z+
 600 0052 8191      		ld r24,Z+
 601 0054 9191      		ld r25,Z+
 602 0056 7F01      		movw r14,r30
 603 0058 2991      		ld r18,Y+
 604 005a 3991      		ld r19,Y+
 605 005c 4991      		ld r20,Y+
 606 005e 5991      		ld r21,Y+
 607 0060 0E94 0000 		call __mulsf3
 608               	.LVL38:
 609 0064 9B01      		movw r18,r22
 610 0066 AC01      		movw r20,r24
 611 0068 C301      		movw r24,r6
 612 006a B201      		movw r22,r4
 613 006c 0E94 0000 		call __addsf3
 614               	.LVL39:
 615 0070 2B01      		movw r4,r22
 616 0072 3C01      		movw r6,r24
 617 0074 F801      		movw r30,r16
 618 0076 6083      		st Z,r22
 619 0078 7183      		std Z+1,r23
 620 007a 8283      		std Z+2,r24
 621 007c 9383      		std Z+3,r25
  34:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 622               		.loc 1 34 0 discriminator 3
 623 007e CA15      		cp r28,r10
 624 0080 DB05      		cpc r29,r11
 625 0082 01F4      		brne .L15
 626 0084 0C5F      		subi r16,-4
 627 0086 1F4F      		sbci r17,-1
 628 0088 FCE0      		ldi r31,12
 629 008a CF0E      		add r12,r31
 630 008c D11C      		adc r13,__zero_reg__
 631               	.LBE63:
  32:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 632               		.loc 1 32 0 discriminator 2
 633 008e 0215      		cp r16,r2
 634 0090 1305      		cpc r17,r3
 635 0092 01F4      		brne .L16
 636               	/* epilogue start */
 637               	.LBE62:
  36:../src/matrix_utils.c **** 		}
  37:../src/matrix_utils.c **** 	}
  38:../src/matrix_utils.c **** }
 638               		.loc 1 38 0
 639 0094 DF91      		pop r29
 640 0096 CF91      		pop r28
 641 0098 1F91      		pop r17
 642 009a 0F91      		pop r16
 643 009c FF90      		pop r15
 644 009e EF90      		pop r14
 645 00a0 DF90      		pop r13
 646 00a2 CF90      		pop r12
 647 00a4 BF90      		pop r11
 648 00a6 AF90      		pop r10
 649 00a8 9F90      		pop r9
 650 00aa 8F90      		pop r8
 651               	.LVL40:
 652 00ac 7F90      		pop r7
 653 00ae 6F90      		pop r6
 654 00b0 5F90      		pop r5
 655 00b2 4F90      		pop r4
 656 00b4 3F90      		pop r3
 657 00b6 2F90      		pop r2
 658               	.LVL41:
 659 00b8 0895      		ret
 660               		.cfi_endproc
 661               	.LFE32:
 663               		.section	.text.matrixAdd,"ax",@progbits
 664               	.global	matrixAdd
 666               	matrixAdd:
 667               	.LFB33:
  39:../src/matrix_utils.c **** 
  40:../src/matrix_utils.c **** void matrixAdd(Matrix* DST, Matrix* A, Matrix* B){			//DST = A + B
 668               		.loc 1 40 0
 669               		.cfi_startproc
 670               	.LVL42:
 671 0000 5F92      		push r5
 672               	.LCFI53:
 673               		.cfi_def_cfa_offset 4
 674               		.cfi_offset 5, -3
 675 0002 6F92      		push r6
 676               	.LCFI54:
 677               		.cfi_def_cfa_offset 5
 678               		.cfi_offset 6, -4
 679 0004 7F92      		push r7
 680               	.LCFI55:
 681               		.cfi_def_cfa_offset 6
 682               		.cfi_offset 7, -5
 683 0006 8F92      		push r8
 684               	.LCFI56:
 685               		.cfi_def_cfa_offset 7
 686               		.cfi_offset 8, -6
 687 0008 9F92      		push r9
 688               	.LCFI57:
 689               		.cfi_def_cfa_offset 8
 690               		.cfi_offset 9, -7
 691 000a AF92      		push r10
 692               	.LCFI58:
 693               		.cfi_def_cfa_offset 9
 694               		.cfi_offset 10, -8
 695 000c BF92      		push r11
 696               	.LCFI59:
 697               		.cfi_def_cfa_offset 10
 698               		.cfi_offset 11, -9
 699 000e CF92      		push r12
 700               	.LCFI60:
 701               		.cfi_def_cfa_offset 11
 702               		.cfi_offset 12, -10
 703 0010 DF92      		push r13
 704               	.LCFI61:
 705               		.cfi_def_cfa_offset 12
 706               		.cfi_offset 13, -11
 707 0012 EF92      		push r14
 708               	.LCFI62:
 709               		.cfi_def_cfa_offset 13
 710               		.cfi_offset 14, -12
 711 0014 FF92      		push r15
 712               	.LCFI63:
 713               		.cfi_def_cfa_offset 14
 714               		.cfi_offset 15, -13
 715 0016 0F93      		push r16
 716               	.LCFI64:
 717               		.cfi_def_cfa_offset 15
 718               		.cfi_offset 16, -14
 719 0018 1F93      		push r17
 720               	.LCFI65:
 721               		.cfi_def_cfa_offset 16
 722               		.cfi_offset 17, -15
 723 001a CF93      		push r28
 724               	.LCFI66:
 725               		.cfi_def_cfa_offset 17
 726               		.cfi_offset 28, -16
 727 001c DF93      		push r29
 728               	.LCFI67:
 729               		.cfi_def_cfa_offset 18
 730               		.cfi_offset 29, -17
 731               	/* prologue: function */
 732               	/* frame size = 0 */
 733               	/* stack size = 15 */
 734               	.L__stack_usage = 15
 735               	.LVL43:
 736 001e 6B01      		movw r12,r22
 737 0020 5A01      		movw r10,r20
 738 0022 4C01      		movw r8,r24
 739 0024 3B01      		movw r6,r22
 740 0026 84E2      		ldi r24,36
 741 0028 680E      		add r6,r24
 742 002a 711C      		adc r7,__zero_reg__
 743               	.LVL44:
 744               	.L20:
 745               		.loc 1 40 0
 746 002c 7401      		movw r14,r8
 747 002e 8501      		movw r16,r10
 748 0030 E601      		movw r28,r12
 749 0032 512C      		mov r5,__zero_reg__
 750               	.LVL45:
 751               	.L21:
 752               	.LBB64:
 753               	.LBB65:
  41:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  42:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  43:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] + (*B)[i][j];
 754               		.loc 1 43 0 discriminator 3
 755 0034 6991      		ld r22,Y+
 756 0036 7991      		ld r23,Y+
 757 0038 8991      		ld r24,Y+
 758 003a 9991      		ld r25,Y+
 759 003c F801      		movw r30,r16
 760 003e 2191      		ld r18,Z+
 761 0040 3191      		ld r19,Z+
 762 0042 4191      		ld r20,Z+
 763 0044 5191      		ld r21,Z+
 764 0046 8F01      		movw r16,r30
 765 0048 0E94 0000 		call __addsf3
 766               	.LVL46:
 767 004c F701      		movw r30,r14
 768 004e 6193      		st Z+,r22
 769 0050 7193      		st Z+,r23
 770 0052 8193      		st Z+,r24
 771 0054 9193      		st Z+,r25
 772 0056 7F01      		movw r14,r30
  42:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] + (*B)[i][j];
 773               		.loc 1 42 0 discriminator 3
 774 0058 5394      		inc r5
 775               	.LVL47:
 776 005a F3E0      		ldi r31,lo8(3)
 777 005c 5F12      		cpse r5,r31
 778 005e 00C0      		rjmp .L21
 779 0060 8CE0      		ldi r24,12
 780 0062 C80E      		add r12,r24
 781 0064 D11C      		adc r13,__zero_reg__
 782 0066 ECE0      		ldi r30,12
 783 0068 AE0E      		add r10,r30
 784 006a B11C      		adc r11,__zero_reg__
 785 006c FCE0      		ldi r31,12
 786 006e 8F0E      		add r8,r31
 787 0070 911C      		adc r9,__zero_reg__
 788               	.LBE65:
  41:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 789               		.loc 1 41 0 discriminator 2
 790 0072 C614      		cp r12,r6
 791 0074 D704      		cpc r13,r7
 792 0076 01F4      		brne .L20
 793               	/* epilogue start */
 794               	.LBE64:
  44:../src/matrix_utils.c **** 		}
  45:../src/matrix_utils.c **** 	}
  46:../src/matrix_utils.c **** }
 795               		.loc 1 46 0
 796 0078 DF91      		pop r29
 797 007a CF91      		pop r28
 798 007c 1F91      		pop r17
 799 007e 0F91      		pop r16
 800 0080 FF90      		pop r15
 801 0082 EF90      		pop r14
 802 0084 DF90      		pop r13
 803 0086 CF90      		pop r12
 804 0088 BF90      		pop r11
 805 008a AF90      		pop r10
 806 008c 9F90      		pop r9
 807 008e 8F90      		pop r8
 808 0090 7F90      		pop r7
 809 0092 6F90      		pop r6
 810               	.LVL48:
 811 0094 5F90      		pop r5
 812               	.LVL49:
 813 0096 0895      		ret
 814               		.cfi_endproc
 815               	.LFE33:
 817               		.section	.text.matrixSubtract,"ax",@progbits
 818               	.global	matrixSubtract
 820               	matrixSubtract:
 821               	.LFB34:
  47:../src/matrix_utils.c **** 
  48:../src/matrix_utils.c **** void matrixSubtract(Matrix* DST, Matrix* A, Matrix* B){		//DST = A - B
 822               		.loc 1 48 0
 823               		.cfi_startproc
 824               	.LVL50:
 825 0000 5F92      		push r5
 826               	.LCFI68:
 827               		.cfi_def_cfa_offset 4
 828               		.cfi_offset 5, -3
 829 0002 6F92      		push r6
 830               	.LCFI69:
 831               		.cfi_def_cfa_offset 5
 832               		.cfi_offset 6, -4
 833 0004 7F92      		push r7
 834               	.LCFI70:
 835               		.cfi_def_cfa_offset 6
 836               		.cfi_offset 7, -5
 837 0006 8F92      		push r8
 838               	.LCFI71:
 839               		.cfi_def_cfa_offset 7
 840               		.cfi_offset 8, -6
 841 0008 9F92      		push r9
 842               	.LCFI72:
 843               		.cfi_def_cfa_offset 8
 844               		.cfi_offset 9, -7
 845 000a AF92      		push r10
 846               	.LCFI73:
 847               		.cfi_def_cfa_offset 9
 848               		.cfi_offset 10, -8
 849 000c BF92      		push r11
 850               	.LCFI74:
 851               		.cfi_def_cfa_offset 10
 852               		.cfi_offset 11, -9
 853 000e CF92      		push r12
 854               	.LCFI75:
 855               		.cfi_def_cfa_offset 11
 856               		.cfi_offset 12, -10
 857 0010 DF92      		push r13
 858               	.LCFI76:
 859               		.cfi_def_cfa_offset 12
 860               		.cfi_offset 13, -11
 861 0012 EF92      		push r14
 862               	.LCFI77:
 863               		.cfi_def_cfa_offset 13
 864               		.cfi_offset 14, -12
 865 0014 FF92      		push r15
 866               	.LCFI78:
 867               		.cfi_def_cfa_offset 14
 868               		.cfi_offset 15, -13
 869 0016 0F93      		push r16
 870               	.LCFI79:
 871               		.cfi_def_cfa_offset 15
 872               		.cfi_offset 16, -14
 873 0018 1F93      		push r17
 874               	.LCFI80:
 875               		.cfi_def_cfa_offset 16
 876               		.cfi_offset 17, -15
 877 001a CF93      		push r28
 878               	.LCFI81:
 879               		.cfi_def_cfa_offset 17
 880               		.cfi_offset 28, -16
 881 001c DF93      		push r29
 882               	.LCFI82:
 883               		.cfi_def_cfa_offset 18
 884               		.cfi_offset 29, -17
 885               	/* prologue: function */
 886               	/* frame size = 0 */
 887               	/* stack size = 15 */
 888               	.L__stack_usage = 15
 889               	.LVL51:
 890 001e 6B01      		movw r12,r22
 891 0020 5A01      		movw r10,r20
 892 0022 4C01      		movw r8,r24
 893 0024 3B01      		movw r6,r22
 894 0026 84E2      		ldi r24,36
 895 0028 680E      		add r6,r24
 896 002a 711C      		adc r7,__zero_reg__
 897               	.LVL52:
 898               	.L25:
 899               		.loc 1 48 0
 900 002c 7401      		movw r14,r8
 901 002e 8501      		movw r16,r10
 902 0030 E601      		movw r28,r12
 903 0032 512C      		mov r5,__zero_reg__
 904               	.LVL53:
 905               	.L26:
 906               	.LBB66:
 907               	.LBB67:
  49:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  50:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  51:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] - (*B)[i][j];
 908               		.loc 1 51 0 discriminator 3
 909 0034 6991      		ld r22,Y+
 910 0036 7991      		ld r23,Y+
 911 0038 8991      		ld r24,Y+
 912 003a 9991      		ld r25,Y+
 913 003c F801      		movw r30,r16
 914 003e 2191      		ld r18,Z+
 915 0040 3191      		ld r19,Z+
 916 0042 4191      		ld r20,Z+
 917 0044 5191      		ld r21,Z+
 918 0046 8F01      		movw r16,r30
 919 0048 0E94 0000 		call __subsf3
 920               	.LVL54:
 921 004c F701      		movw r30,r14
 922 004e 6193      		st Z+,r22
 923 0050 7193      		st Z+,r23
 924 0052 8193      		st Z+,r24
 925 0054 9193      		st Z+,r25
 926 0056 7F01      		movw r14,r30
  50:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] - (*B)[i][j];
 927               		.loc 1 50 0 discriminator 3
 928 0058 5394      		inc r5
 929               	.LVL55:
 930 005a F3E0      		ldi r31,lo8(3)
 931 005c 5F12      		cpse r5,r31
 932 005e 00C0      		rjmp .L26
 933 0060 8CE0      		ldi r24,12
 934 0062 C80E      		add r12,r24
 935 0064 D11C      		adc r13,__zero_reg__
 936 0066 ECE0      		ldi r30,12
 937 0068 AE0E      		add r10,r30
 938 006a B11C      		adc r11,__zero_reg__
 939 006c FCE0      		ldi r31,12
 940 006e 8F0E      		add r8,r31
 941 0070 911C      		adc r9,__zero_reg__
 942               	.LBE67:
  49:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 943               		.loc 1 49 0 discriminator 2
 944 0072 C614      		cp r12,r6
 945 0074 D704      		cpc r13,r7
 946 0076 01F4      		brne .L25
 947               	/* epilogue start */
 948               	.LBE66:
  52:../src/matrix_utils.c **** 		}
  53:../src/matrix_utils.c **** 	}
  54:../src/matrix_utils.c **** }
 949               		.loc 1 54 0
 950 0078 DF91      		pop r29
 951 007a CF91      		pop r28
 952 007c 1F91      		pop r17
 953 007e 0F91      		pop r16
 954 0080 FF90      		pop r15
 955 0082 EF90      		pop r14
 956 0084 DF90      		pop r13
 957 0086 CF90      		pop r12
 958 0088 BF90      		pop r11
 959 008a AF90      		pop r10
 960 008c 9F90      		pop r9
 961 008e 8F90      		pop r8
 962 0090 7F90      		pop r7
 963 0092 6F90      		pop r6
 964               	.LVL56:
 965 0094 5F90      		pop r5
 966               	.LVL57:
 967 0096 0895      		ret
 968               		.cfi_endproc
 969               	.LFE34:
 971               		.section	.text.matrixMultiply,"ax",@progbits
 972               	.global	matrixMultiply
 974               	matrixMultiply:
 975               	.LFB35:
  55:../src/matrix_utils.c **** 
  56:../src/matrix_utils.c **** void matrixMultiply(Matrix* DST, Matrix* A, Matrix* B){		//DST = A x B
 976               		.loc 1 56 0
 977               		.cfi_startproc
 978               	.LVL58:
 979 0000 2F92      		push r2
 980               	.LCFI83:
 981               		.cfi_def_cfa_offset 4
 982               		.cfi_offset 2, -3
 983 0002 3F92      		push r3
 984               	.LCFI84:
 985               		.cfi_def_cfa_offset 5
 986               		.cfi_offset 3, -4
 987 0004 4F92      		push r4
 988               	.LCFI85:
 989               		.cfi_def_cfa_offset 6
 990               		.cfi_offset 4, -5
 991 0006 5F92      		push r5
 992               	.LCFI86:
 993               		.cfi_def_cfa_offset 7
 994               		.cfi_offset 5, -6
 995 0008 6F92      		push r6
 996               	.LCFI87:
 997               		.cfi_def_cfa_offset 8
 998               		.cfi_offset 6, -7
 999 000a 7F92      		push r7
 1000               	.LCFI88:
 1001               		.cfi_def_cfa_offset 9
 1002               		.cfi_offset 7, -8
 1003 000c 8F92      		push r8
 1004               	.LCFI89:
 1005               		.cfi_def_cfa_offset 10
 1006               		.cfi_offset 8, -9
 1007 000e 9F92      		push r9
 1008               	.LCFI90:
 1009               		.cfi_def_cfa_offset 11
 1010               		.cfi_offset 9, -10
 1011 0010 AF92      		push r10
 1012               	.LCFI91:
 1013               		.cfi_def_cfa_offset 12
 1014               		.cfi_offset 10, -11
 1015 0012 BF92      		push r11
 1016               	.LCFI92:
 1017               		.cfi_def_cfa_offset 13
 1018               		.cfi_offset 11, -12
 1019 0014 CF92      		push r12
 1020               	.LCFI93:
 1021               		.cfi_def_cfa_offset 14
 1022               		.cfi_offset 12, -13
 1023 0016 DF92      		push r13
 1024               	.LCFI94:
 1025               		.cfi_def_cfa_offset 15
 1026               		.cfi_offset 13, -14
 1027 0018 EF92      		push r14
 1028               	.LCFI95:
 1029               		.cfi_def_cfa_offset 16
 1030               		.cfi_offset 14, -15
 1031 001a FF92      		push r15
 1032               	.LCFI96:
 1033               		.cfi_def_cfa_offset 17
 1034               		.cfi_offset 15, -16
 1035 001c 0F93      		push r16
 1036               	.LCFI97:
 1037               		.cfi_def_cfa_offset 18
 1038               		.cfi_offset 16, -17
 1039 001e 1F93      		push r17
 1040               	.LCFI98:
 1041               		.cfi_def_cfa_offset 19
 1042               		.cfi_offset 17, -18
 1043 0020 CF93      		push r28
 1044               	.LCFI99:
 1045               		.cfi_def_cfa_offset 20
 1046               		.cfi_offset 28, -19
 1047 0022 DF93      		push r29
 1048               	.LCFI100:
 1049               		.cfi_def_cfa_offset 21
 1050               		.cfi_offset 29, -20
 1051 0024 CDB7      		in r28,__SP_L__
 1052 0026 DEB7      		in r29,__SP_H__
 1053               	.LCFI101:
 1054               		.cfi_def_cfa_register 28
 1055 0028 2A97      		sbiw r28,10
 1056               	.LCFI102:
 1057               		.cfi_def_cfa_offset 31
 1058 002a CDBF      		out __SP_L__,r28
 1059 002c DEBF      		out __SP_H__,r29
 1060               	/* prologue: function */
 1061               	/* frame size = 10 */
 1062               	/* stack size = 28 */
 1063               	.L__stack_usage = 28
 1064 002e 4B83      		std Y+3,r20
 1065 0030 5C83      		std Y+4,r21
 1066               	.LVL59:
 1067 0032 5B01      		movw r10,r22
 1068 0034 4C01      		movw r8,r24
 1069 0036 CB01      		movw r24,r22
 1070               	.LVL60:
 1071 0038 8496      		adiw r24,36
 1072 003a 8D83      		std Y+5,r24
 1073 003c 9E83      		std Y+6,r25
 1074 003e FA01      		movw r30,r20
 1075 0040 3C96      		adiw r30,12
 1076 0042 EF83      		std Y+7,r30
 1077 0044 F887      		std Y+8,r31
 1078               	.LVL61:
 1079               	.L30:
 1080 0046 CB80      		ldd r12,Y+3
 1081 0048 DC80      		ldd r13,Y+4
 1082               		.loc 1 56 0
 1083 004a 7401      		movw r14,r8
 1084 004c 8982      		std Y+1,r8
 1085 004e 9A82      		std Y+2,r9
 1086 0050 2F80      		ldd r2,Y+7
 1087 0052 3884      		ldd r3,Y+8
 1088               	.LVL62:
 1089               	.L32:
 1090               	.LBB68:
 1091               	.LBB69:
  57:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  58:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  59:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 1092               		.loc 1 59 0
 1093 0054 F701      		movw r30,r14
 1094 0056 1082      		st Z,__zero_reg__
 1095 0058 1182      		std Z+1,__zero_reg__
 1096 005a 1282      		std Z+2,__zero_reg__
 1097 005c 1382      		std Z+3,__zero_reg__
 1098               	.LVL63:
 1099 005e C986      		std Y+9,r12
 1100 0060 DA86      		std Y+10,r13
 1101 0062 8501      		movw r16,r10
 1102 0064 83E0      		ldi r24,lo8(3)
 1103 0066 982E      		mov r9,r24
 1104 0068 412C      		mov r4,__zero_reg__
 1105 006a 512C      		mov r5,__zero_reg__
 1106 006c 3201      		movw r6,r4
 1107               	.LVL64:
 1108               	.L31:
 1109               	.LBB70:
  60:../src/matrix_utils.c **** 			for(uint8_t k=0;k<3;k++){
  61:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 1110               		.loc 1 61 0 discriminator 3
 1111 006e F801      		movw r30,r16
 1112 0070 6191      		ld r22,Z+
 1113 0072 7191      		ld r23,Z+
 1114 0074 8191      		ld r24,Z+
 1115 0076 9191      		ld r25,Z+
 1116 0078 8F01      		movw r16,r30
 1117 007a E985      		ldd r30,Y+9
 1118 007c FA85      		ldd r31,Y+10
 1119 007e 2081      		ld r18,Z
 1120 0080 3181      		ldd r19,Z+1
 1121 0082 4281      		ldd r20,Z+2
 1122 0084 5381      		ldd r21,Z+3
 1123 0086 0E94 0000 		call __mulsf3
 1124               	.LVL65:
 1125 008a 9B01      		movw r18,r22
 1126 008c AC01      		movw r20,r24
 1127 008e C301      		movw r24,r6
 1128 0090 B201      		movw r22,r4
 1129 0092 0E94 0000 		call __addsf3
 1130               	.LVL66:
 1131 0096 2B01      		movw r4,r22
 1132 0098 3C01      		movw r6,r24
 1133 009a F701      		movw r30,r14
 1134 009c 6083      		st Z,r22
 1135 009e 7183      		std Z+1,r23
 1136 00a0 8283      		std Z+2,r24
 1137 00a2 9383      		std Z+3,r25
 1138               	.LVL67:
 1139 00a4 9A94      		dec r9
 1140               	.LVL68:
 1141 00a6 8985      		ldd r24,Y+9
 1142 00a8 9A85      		ldd r25,Y+10
 1143 00aa 0C96      		adiw r24,12
 1144 00ac 8987      		std Y+9,r24
 1145 00ae 9A87      		std Y+10,r25
  60:../src/matrix_utils.c **** 			for(uint8_t k=0;k<3;k++){
 1146               		.loc 1 60 0 discriminator 3
 1147 00b0 9110      		cpse r9,__zero_reg__
 1148 00b2 00C0      		rjmp .L31
 1149 00b4 94E0      		ldi r25,4
 1150 00b6 E90E      		add r14,r25
 1151 00b8 F11C      		adc r15,__zero_reg__
 1152 00ba E4E0      		ldi r30,4
 1153 00bc CE0E      		add r12,r30
 1154 00be D11C      		adc r13,__zero_reg__
 1155               	.LBE70:
  58:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 1156               		.loc 1 58 0 discriminator 2
 1157 00c0 C214      		cp r12,r2
 1158 00c2 D304      		cpc r13,r3
 1159 00c4 01F4      		brne .L32
 1160 00c6 8980      		ldd r8,Y+1
 1161 00c8 9A80      		ldd r9,Y+2
 1162 00ca FCE0      		ldi r31,12
 1163 00cc AF0E      		add r10,r31
 1164 00ce B11C      		adc r11,__zero_reg__
 1165 00d0 8CE0      		ldi r24,12
 1166 00d2 880E      		add r8,r24
 1167 00d4 911C      		adc r9,__zero_reg__
 1168               	.LBE69:
  57:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 1169               		.loc 1 57 0 discriminator 2
 1170 00d6 ED81      		ldd r30,Y+5
 1171 00d8 FE81      		ldd r31,Y+6
 1172 00da AE16      		cp r10,r30
 1173 00dc BF06      		cpc r11,r31
 1174 00de 01F0      		breq .+2
 1175 00e0 00C0      		rjmp .L30
 1176               	/* epilogue start */
 1177               	.LBE68:
  62:../src/matrix_utils.c **** 			}
  63:../src/matrix_utils.c **** 		}
  64:../src/matrix_utils.c **** 	}
  65:../src/matrix_utils.c **** }
 1178               		.loc 1 65 0
 1179 00e2 2A96      		adiw r28,10
 1180 00e4 CDBF      		out __SP_L__,r28
 1181 00e6 DEBF      		out __SP_H__,r29
 1182 00e8 DF91      		pop r29
 1183 00ea CF91      		pop r28
 1184 00ec 1F91      		pop r17
 1185 00ee 0F91      		pop r16
 1186 00f0 FF90      		pop r15
 1187 00f2 EF90      		pop r14
 1188 00f4 DF90      		pop r13
 1189 00f6 CF90      		pop r12
 1190 00f8 BF90      		pop r11
 1191 00fa AF90      		pop r10
 1192 00fc 9F90      		pop r9
 1193               	.LVL69:
 1194 00fe 8F90      		pop r8
 1195 0100 7F90      		pop r7
 1196 0102 6F90      		pop r6
 1197 0104 5F90      		pop r5
 1198 0106 4F90      		pop r4
 1199 0108 3F90      		pop r3
 1200 010a 2F90      		pop r2
 1201 010c 0895      		ret
 1202               		.cfi_endproc
 1203               	.LFE35:
 1205               		.section	.text.matrixInplaceMultiply,"ax",@progbits
 1206               	.global	matrixInplaceMultiply
 1208               	matrixInplaceMultiply:
 1209               	.LFB36:
  66:../src/matrix_utils.c **** 
  67:../src/matrix_utils.c **** void matrixInplaceMultiply(Matrix* DST, Matrix* A, Matrix* B){		//DST = A x B
 1210               		.loc 1 67 0
 1211               		.cfi_startproc
 1212               	.LVL70:
 1213 0000 2F92      		push r2
 1214               	.LCFI103:
 1215               		.cfi_def_cfa_offset 4
 1216               		.cfi_offset 2, -3
 1217 0002 3F92      		push r3
 1218               	.LCFI104:
 1219               		.cfi_def_cfa_offset 5
 1220               		.cfi_offset 3, -4
 1221 0004 4F92      		push r4
 1222               	.LCFI105:
 1223               		.cfi_def_cfa_offset 6
 1224               		.cfi_offset 4, -5
 1225 0006 5F92      		push r5
 1226               	.LCFI106:
 1227               		.cfi_def_cfa_offset 7
 1228               		.cfi_offset 5, -6
 1229 0008 6F92      		push r6
 1230               	.LCFI107:
 1231               		.cfi_def_cfa_offset 8
 1232               		.cfi_offset 6, -7
 1233 000a 7F92      		push r7
 1234               	.LCFI108:
 1235               		.cfi_def_cfa_offset 9
 1236               		.cfi_offset 7, -8
 1237 000c 8F92      		push r8
 1238               	.LCFI109:
 1239               		.cfi_def_cfa_offset 10
 1240               		.cfi_offset 8, -9
 1241 000e 9F92      		push r9
 1242               	.LCFI110:
 1243               		.cfi_def_cfa_offset 11
 1244               		.cfi_offset 9, -10
 1245 0010 AF92      		push r10
 1246               	.LCFI111:
 1247               		.cfi_def_cfa_offset 12
 1248               		.cfi_offset 10, -11
 1249 0012 BF92      		push r11
 1250               	.LCFI112:
 1251               		.cfi_def_cfa_offset 13
 1252               		.cfi_offset 11, -12
 1253 0014 CF92      		push r12
 1254               	.LCFI113:
 1255               		.cfi_def_cfa_offset 14
 1256               		.cfi_offset 12, -13
 1257 0016 DF92      		push r13
 1258               	.LCFI114:
 1259               		.cfi_def_cfa_offset 15
 1260               		.cfi_offset 13, -14
 1261 0018 EF92      		push r14
 1262               	.LCFI115:
 1263               		.cfi_def_cfa_offset 16
 1264               		.cfi_offset 14, -15
 1265 001a FF92      		push r15
 1266               	.LCFI116:
 1267               		.cfi_def_cfa_offset 17
 1268               		.cfi_offset 15, -16
 1269 001c 0F93      		push r16
 1270               	.LCFI117:
 1271               		.cfi_def_cfa_offset 18
 1272               		.cfi_offset 16, -17
 1273 001e 1F93      		push r17
 1274               	.LCFI118:
 1275               		.cfi_def_cfa_offset 19
 1276               		.cfi_offset 17, -18
 1277 0020 CF93      		push r28
 1278               	.LCFI119:
 1279               		.cfi_def_cfa_offset 20
 1280               		.cfi_offset 28, -19
 1281 0022 DF93      		push r29
 1282               	.LCFI120:
 1283               		.cfi_def_cfa_offset 21
 1284               		.cfi_offset 29, -20
 1285 0024 CDB7      		in r28,__SP_L__
 1286 0026 DEB7      		in r29,__SP_H__
 1287               	.LCFI121:
 1288               		.cfi_def_cfa_register 28
 1289 0028 AE97      		sbiw r28,46
 1290               	.LCFI122:
 1291               		.cfi_def_cfa_offset 67
 1292 002a CDBF      		out __SP_L__,r28
 1293 002c DEBF      		out __SP_H__,r29
 1294               	/* prologue: function */
 1295               	/* frame size = 46 */
 1296               	/* stack size = 64 */
 1297               	.L__stack_usage = 64
 1298 002e 9C01      		movw r18,r24
 1299 0030 49A7      		std Y+41,r20
 1300 0032 5AA7      		std Y+42,r21
  68:../src/matrix_utils.c **** 	Matrix tmp;
  69:../src/matrix_utils.c **** 	Matrix* tmpA;
  70:../src/matrix_utils.c **** 	Matrix* tmpB;
  71:../src/matrix_utils.c **** 	if(A==DST){
 1301               		.loc 1 71 0
 1302 0034 6817      		cp r22,r24
 1303 0036 7907      		cpc r23,r25
 1304 0038 01F4      		brne .+2
 1305 003a 00C0      		rjmp .L58
  72:../src/matrix_utils.c **** 		matrixCopy(&tmp, A);
  73:../src/matrix_utils.c **** 		tmpA = &tmp;
  74:../src/matrix_utils.c **** 		tmpB = B;
  75:../src/matrix_utils.c **** 	}else if(B==DST){
 1306               		.loc 1 75 0
 1307 003c E9A5      		ldd r30,Y+41
 1308 003e FAA5      		ldd r31,Y+42
 1309 0040 8E17      		cp r24,r30
 1310 0042 9F07      		cpc r25,r31
 1311 0044 01F4      		brne .+2
 1312 0046 00C0      		rjmp .L59
 1313               	.LVL71:
 1314               	.L41:
 1315 0048 4B01      		movw r8,r22
 1316 004a 2FA3      		std Y+39,r18
 1317 004c 38A7      		std Y+40,r19
 1318 004e FB01      		movw r30,r22
 1319 0050 B496      		adiw r30,36
 1320 0052 EBA7      		std Y+43,r30
 1321 0054 FCA7      		std Y+44,r31
 1322 0056 89A5      		ldd r24,Y+41
 1323 0058 9AA5      		ldd r25,Y+42
 1324 005a 0C96      		adiw r24,12
 1325 005c 8DA7      		std Y+45,r24
 1326 005e 9EA7      		std Y+46,r25
 1327               	.LVL72:
 1328               	.L45:
 1329 0060 C9A4      		ldd r12,Y+41
 1330 0062 DAA4      		ldd r13,Y+42
  76:../src/matrix_utils.c **** 		matrixCopy(&tmp, B);
  77:../src/matrix_utils.c **** 		tmpB = &tmp;
 1331               		.loc 1 77 0
 1332 0064 EFA0      		ldd r14,Y+39
 1333 0066 F8A4      		ldd r15,Y+40
 1334 0068 8DA2      		std Y+37,r8
 1335 006a 9EA2      		std Y+38,r9
 1336 006c 2DA4      		ldd r2,Y+45
 1337 006e 3EA4      		ldd r3,Y+46
 1338               	.LVL73:
 1339               	.L47:
 1340               	.LBB71:
 1341               	.LBB72:
  78:../src/matrix_utils.c **** 		tmpA = A;
  79:../src/matrix_utils.c **** 	}else{
  80:../src/matrix_utils.c **** 		tmpA = A;
  81:../src/matrix_utils.c **** 		tmpB = B;
  82:../src/matrix_utils.c **** 	}
  83:../src/matrix_utils.c **** 
  84:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  85:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  86:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 1342               		.loc 1 86 0
 1343 0070 F701      		movw r30,r14
 1344 0072 1082      		st Z,__zero_reg__
 1345 0074 1182      		std Z+1,__zero_reg__
 1346 0076 1282      		std Z+2,__zero_reg__
 1347 0078 1382      		std Z+3,__zero_reg__
 1348               	.LVL74:
 1349 007a 2601      		movw r4,r12
 1350 007c ADA0      		ldd r10,Y+37
 1351 007e BEA0      		ldd r11,Y+38
 1352 0080 612C      		mov r6,__zero_reg__
 1353 0082 712C      		mov r7,__zero_reg__
 1354 0084 4301      		movw r8,r6
 1355               	.LBB73:
  87:../src/matrix_utils.c **** 			for(uint8_t k=0;k<3;k++){
 1356               		.loc 1 87 0
 1357 0086 10E0      		ldi r17,0
 1358               	.LVL75:
 1359               	.L46:
  88:../src/matrix_utils.c **** 				(*DST)[i][j] += (*tmpA)[i][k] * (*tmpB)[k][j];
 1360               		.loc 1 88 0 discriminator 3
 1361 0088 F501      		movw r30,r10
 1362 008a 6191      		ld r22,Z+
 1363 008c 7191      		ld r23,Z+
 1364 008e 8191      		ld r24,Z+
 1365 0090 9191      		ld r25,Z+
 1366 0092 5F01      		movw r10,r30
 1367 0094 F201      		movw r30,r4
 1368 0096 2081      		ld r18,Z
 1369 0098 3181      		ldd r19,Z+1
 1370 009a 4281      		ldd r20,Z+2
 1371 009c 5381      		ldd r21,Z+3
 1372 009e 0E94 0000 		call __mulsf3
 1373               	.LVL76:
 1374 00a2 9B01      		movw r18,r22
 1375 00a4 AC01      		movw r20,r24
 1376 00a6 C401      		movw r24,r8
 1377 00a8 B301      		movw r22,r6
 1378 00aa 0E94 0000 		call __addsf3
 1379               	.LVL77:
 1380 00ae 3B01      		movw r6,r22
 1381 00b0 4C01      		movw r8,r24
 1382 00b2 F701      		movw r30,r14
 1383 00b4 6083      		st Z,r22
 1384 00b6 7183      		std Z+1,r23
 1385 00b8 8283      		std Z+2,r24
 1386 00ba 9383      		std Z+3,r25
  87:../src/matrix_utils.c **** 			for(uint8_t k=0;k<3;k++){
 1387               		.loc 1 87 0 discriminator 3
 1388 00bc 1F5F      		subi r17,lo8(-(1))
 1389               	.LVL78:
 1390 00be FCE0      		ldi r31,12
 1391 00c0 4F0E      		add r4,r31
 1392 00c2 511C      		adc r5,__zero_reg__
 1393 00c4 1330      		cpi r17,lo8(3)
 1394 00c6 01F4      		brne .L46
 1395 00c8 84E0      		ldi r24,4
 1396 00ca E80E      		add r14,r24
 1397 00cc F11C      		adc r15,__zero_reg__
 1398 00ce 94E0      		ldi r25,4
 1399 00d0 C90E      		add r12,r25
 1400 00d2 D11C      		adc r13,__zero_reg__
 1401               	.LBE73:
  85:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 1402               		.loc 1 85 0 discriminator 2
 1403 00d4 C214      		cp r12,r2
 1404 00d6 D304      		cpc r13,r3
 1405 00d8 01F4      		brne .L47
 1406 00da 8DA0      		ldd r8,Y+37
 1407 00dc 9EA0      		ldd r9,Y+38
 1408 00de ECE0      		ldi r30,12
 1409 00e0 8E0E      		add r8,r30
 1410 00e2 911C      		adc r9,__zero_reg__
 1411 00e4 8FA1      		ldd r24,Y+39
 1412 00e6 98A5      		ldd r25,Y+40
 1413 00e8 0C96      		adiw r24,12
 1414 00ea 8FA3      		std Y+39,r24
 1415 00ec 98A7      		std Y+40,r25
 1416               	.LBE72:
  84:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 1417               		.loc 1 84 0 discriminator 2
 1418 00ee EBA5      		ldd r30,Y+43
 1419 00f0 FCA5      		ldd r31,Y+44
 1420 00f2 E815      		cp r30,r8
 1421 00f4 F905      		cpc r31,r9
 1422 00f6 01F0      		breq .+2
 1423 00f8 00C0      		rjmp .L45
 1424               	/* epilogue start */
 1425               	.LBE71:
  89:../src/matrix_utils.c **** 			}
  90:../src/matrix_utils.c **** 		}
  91:../src/matrix_utils.c **** 	}
  92:../src/matrix_utils.c **** }
 1426               		.loc 1 92 0
 1427 00fa AE96      		adiw r28,46
 1428 00fc CDBF      		out __SP_L__,r28
 1429 00fe DEBF      		out __SP_H__,r29
 1430 0100 DF91      		pop r29
 1431 0102 CF91      		pop r28
 1432 0104 1F91      		pop r17
 1433               	.LVL79:
 1434 0106 0F91      		pop r16
 1435 0108 FF90      		pop r15
 1436 010a EF90      		pop r14
 1437 010c DF90      		pop r13
 1438 010e CF90      		pop r12
 1439 0110 BF90      		pop r11
 1440 0112 AF90      		pop r10
 1441 0114 9F90      		pop r9
 1442 0116 8F90      		pop r8
 1443 0118 7F90      		pop r7
 1444 011a 6F90      		pop r6
 1445 011c 5F90      		pop r5
 1446 011e 4F90      		pop r4
 1447 0120 3F90      		pop r3
 1448 0122 2F90      		pop r2
 1449 0124 0895      		ret
 1450               	.LVL80:
 1451               	.L58:
 1452 0126 BC01      		movw r22,r24
 1453               	.LVL81:
 1454 0128 8E01      		movw r16,r28
 1455 012a 0F5F      		subi r16,-1
 1456 012c 1F4F      		sbci r17,-1
 1457 012e A801      		movw r20,r16
 1458               	.LVL82:
 1459 0130 7E01      		movw r14,r28
 1460 0132 85E2      		ldi r24,37
 1461 0134 E80E      		add r14,r24
 1462 0136 F11C      		adc r15,__zero_reg__
 1463               	.L40:
 1464               	.LVL83:
  67:../src/matrix_utils.c **** 	Matrix tmp;
 1465               		.loc 1 67 0
 1466 0138 DA01      		movw r26,r20
 1467 013a FB01      		movw r30,r22
 1468 013c 83E0      		ldi r24,lo8(3)
 1469               	.LVL84:
 1470               	.L39:
 1471               	.LBB74:
 1472               	.LBB75:
 1473               	.LBB76:
  93:../src/matrix_utils.c **** 
  94:../src/matrix_utils.c **** void matrixTranspose(Matrix* DST, Matrix* A){
  95:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
  96:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
  97:../src/matrix_utils.c **** 			(*DST)[j][i] = (*A)[i][j];
  98:../src/matrix_utils.c **** 		}
  99:../src/matrix_utils.c **** 	}
 100:../src/matrix_utils.c **** }
 101:../src/matrix_utils.c **** 
 102:../src/matrix_utils.c **** void matrixInplaceTranspose(Matrix* A){
 103:../src/matrix_utils.c **** 	float tmp;
 104:../src/matrix_utils.c **** 	for(uint8_t i=0;i<2;i++){
 105:../src/matrix_utils.c **** 		for(uint8_t j=i+1;j<3;j++){
 106:../src/matrix_utils.c **** 			tmp = (*A)[i][j];
 107:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[j][i];
 108:../src/matrix_utils.c **** 			(*A)[j][i] = tmp;
 109:../src/matrix_utils.c **** 		}
 110:../src/matrix_utils.c **** 	}
 111:../src/matrix_utils.c **** }
 112:../src/matrix_utils.c **** 
 113:../src/matrix_utils.c **** uint8_t positiveDefiniteQ(Matrix* A){
 114:../src/matrix_utils.c **** 	Matrix L;
 115:../src/matrix_utils.c **** 	uint8_t flag=0;
 116:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 117:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 118:../src/matrix_utils.c **** 			L[i][j] = 0;
 119:../src/matrix_utils.c **** 		}
 120:../src/matrix_utils.c **** 	}
 121:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 122:../src/matrix_utils.c **** 		for(uint8_t j=0;j<(i+1);j++){
 123:../src/matrix_utils.c **** 			float s = 0;
 124:../src/matrix_utils.c **** 			for(uint8_t k=0; k<j; k++){
 125:../src/matrix_utils.c **** 				s += L[i][k] * L[j][k];
 126:../src/matrix_utils.c **** 			}
 127:../src/matrix_utils.c **** 			if(i==j){
 128:../src/matrix_utils.c **** 				float tmp = (*A)[i][j]-s;
 129:../src/matrix_utils.c **** 				if(tmp<=0 || isnan(tmp)) flag=1;
 130:../src/matrix_utils.c **** 				L[i][j] = sqrtf(tmp);
 131:../src/matrix_utils.c **** 			}else{
 132:../src/matrix_utils.c **** 				L[i][j] = (1.0/ L[j][j] * ( (*A)[i][j] - s ));
 133:../src/matrix_utils.c **** 			}
 134:../src/matrix_utils.c **** 		}
 135:../src/matrix_utils.c **** 	}
 136:../src/matrix_utils.c **** 	if(flag){
 137:../src/matrix_utils.c **** 		printf("Non-Positive Definite Matrix Detected!\r\n");
 138:../src/matrix_utils.c **** 		printMatrixMathematica(A);
 139:../src/matrix_utils.c **** 		printf("Cholesky Decomposition:\r\n");
 140:../src/matrix_utils.c **** 		printMatrixMathematica(&L);
 141:../src/matrix_utils.c **** 		return 0;
 142:../src/matrix_utils.c **** 	}
 143:../src/matrix_utils.c **** 	return 1;
 144:../src/matrix_utils.c **** }
 145:../src/matrix_utils.c **** 
 146:../src/matrix_utils.c **** //returns upper triangular.
 147:../src/matrix_utils.c **** void choleskyDecomposition(Matrix* L, Matrix* A){
 148:../src/matrix_utils.c **** 	(*L)[0][0] = sqrtf((*A)[0][0]);
 149:../src/matrix_utils.c **** 	(*L)[0][1] = (*A)[0][1] / (*L)[0][0];
 150:../src/matrix_utils.c **** 	(*L)[0][2] = (*A)[0][2] / (*L)[0][0];
 151:../src/matrix_utils.c **** 	(*L)[1][0] = 0;
 152:../src/matrix_utils.c **** 	(*L)[1][1] = sqrtf( (*A)[1][1] - powf((*L)[0][1],2));
 153:../src/matrix_utils.c **** 	(*L)[1][2] = ( (*A)[1][2] - (*L)[0][2] * (*L)[0][1] ) / (*L)[1][1];
 154:../src/matrix_utils.c **** 	(*L)[2][0] = 0;
 155:../src/matrix_utils.c **** 	(*L)[2][1] = 0;
 156:../src/matrix_utils.c **** 	(*L)[2][2] = sqrtf( (*A)[2][2] - powf((*L)[0][2],2) - powf((*L)[1][2],2) );
 157:../src/matrix_utils.c **** }
 158:../src/matrix_utils.c **** 
 159:../src/matrix_utils.c **** //This function assumes that the input Matrix, A, is symmetric.
 160:../src/matrix_utils.c **** //Algorithm from "Eigenvalues of a Symmetric 3x3 Matrix", by Oliver K. Smith
 161:../src/matrix_utils.c **** void eigenvalues(Vector* eigVals, Matrix* A){
 162:../src/matrix_utils.c **** 	float p1 = powf((*A)[0][1], 2) + powf((*A)[0][2], 2) + powf((*A)[1][2], 2);
 163:../src/matrix_utils.c **** 	if(p1 == 0){
 164:../src/matrix_utils.c **** 		// A is diagonal.
 165:../src/matrix_utils.c **** 		(*eigVals)[0] = (*A)[0][0];
 166:../src/matrix_utils.c **** 		(*eigVals)[1] = (*A)[1][1];
 167:../src/matrix_utils.c **** 		(*eigVals)[2] = (*A)[2][2];
 168:../src/matrix_utils.c **** 	}else{
 169:../src/matrix_utils.c **** 		float q = matrixTrace(A)/3;
 170:../src/matrix_utils.c **** 		float p2 = powf((*A)[0][0] - q, 2) + powf((*A)[1][1] - q, 2) + powf((*A)[2][2] - q, 2) + 2*p1;
 171:../src/matrix_utils.c **** 		float p = sqrtf(p2/6.0);
 172:../src/matrix_utils.c **** 		Matrix B = {{q, 0, 0}, {0, q, 0}, {0, 0, q}};
 173:../src/matrix_utils.c **** 		matrixSubtract(&B, A, &B);
 174:../src/matrix_utils.c **** 		matrixScale(&B, 1.0/p);
 175:../src/matrix_utils.c **** 		float r = matrixDet(&B)/2;
 176:../src/matrix_utils.c **** 		float phi;
 177:../src/matrix_utils.c **** 		if(r<=-1){
 178:../src/matrix_utils.c **** 			phi = M_PI/3;
 179:../src/matrix_utils.c **** 		}else if(r>=1){
 180:../src/matrix_utils.c **** 			phi = 0;
 181:../src/matrix_utils.c **** 		}else{
 182:../src/matrix_utils.c **** 			phi = acosf(r)/3;
 183:../src/matrix_utils.c **** 		}
 184:../src/matrix_utils.c **** 		(*eigVals)[0] = q + 2*p*cosf(phi);
 185:../src/matrix_utils.c **** 		(*eigVals)[2] = q + 2*p*cosf(phi + (2*M_PI/3));
 186:../src/matrix_utils.c **** 		(*eigVals)[1] = 3*q - (*eigVals)[0] - (*eigVals)[2];
 187:../src/matrix_utils.c **** 	}
 188:../src/matrix_utils.c **** }
 189:../src/matrix_utils.c **** 
 190:../src/matrix_utils.c **** 
 191:../src/matrix_utils.c **** //Helper function for eigenvectors, below.
 192:../src/matrix_utils.c **** //finds a nontrivial column vector in input matrix, A.
 193:../src/matrix_utils.c **** //Then normalizes it and copies it in to dst.
 194:../src/matrix_utils.c **** void getEigenvector(Vector* dst, Matrix* A){
 195:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 196:../src/matrix_utils.c **** 		float denom=0;
 197:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 198:../src/matrix_utils.c **** 			denom += powf((*A)[j][i], 2);
 199:../src/matrix_utils.c **** 		}
 200:../src/matrix_utils.c **** 		if(denom>0){
 201:../src/matrix_utils.c **** 			denom = sqrtf(denom);
 202:../src/matrix_utils.c **** 			for(uint8_t j=0;j<3;j++){
 203:../src/matrix_utils.c **** 				(*dst)[j] = (*A)[j][i]/denom;
 204:../src/matrix_utils.c **** 			}
 205:../src/matrix_utils.c **** 			break;
 206:../src/matrix_utils.c **** 		}
 207:../src/matrix_utils.c **** 	}
 208:../src/matrix_utils.c **** }
 209:../src/matrix_utils.c **** 
 210:../src/matrix_utils.c **** /*
 211:../src/matrix_utils.c ****  * Assumes input Matrix, A, is symmetric.
 212:../src/matrix_utils.c ****  * Based on method described here: 
 213:../src/matrix_utils.c ****  * https://en.wikipedia.org/wiki/Eigenvalue_algorithm
 214:../src/matrix_utils.c ****  */
 215:../src/matrix_utils.c **** void eigensystem(Vector* eigVals, Matrix* eigVecs, Matrix* A){
 216:../src/matrix_utils.c **** 	eigenvalues(eigVals, A);
 217:../src/matrix_utils.c **** 	if( (*eigVals)[0]==(*eigVals)[1] || (*eigVals)[0]==(*eigVals)[2] || (*eigVals)[1]==(*eigVals)[2] )
 218:../src/matrix_utils.c **** 		printf_P("WARNING! Input Matrix A has nondistinct eigenvalues.\r\nI couldn't find a non-trivial e
 219:../src/matrix_utils.c **** 	}
 220:../src/matrix_utils.c **** 	Matrix charEqn[3] = {{{1,0,0},{0,1,0},{0,0,1}}, {{1,0,0},{0,1,0},{0,0,1}}, {{1,0,0},{0,1,0},{0,0,1
 221:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 222:../src/matrix_utils.c **** 		matrixScale(&(charEqn[i]), (*eigVals)[i]);
 223:../src/matrix_utils.c **** 		matrixSubtract(&(charEqn[i]), A, &(charEqn[i]));
 224:../src/matrix_utils.c **** 	}
 225:../src/matrix_utils.c **** 	matrixScale(eigVecs, 0);
 226:../src/matrix_utils.c **** 	Matrix TMP;
 227:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[1]), &(charEqn[2]));
 228:../src/matrix_utils.c **** 	getEigenvector(&((*eigVecs)[0]), &TMP);
 229:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[0]), &(charEqn[2]));
 230:../src/matrix_utils.c **** 	getEigenvector(&((*eigVecs)[1]), &TMP);
 231:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[0]), &(charEqn[1]));
 232:../src/matrix_utils.c **** 	getEigenvector(&((*eigVecs)[2]), &TMP);
 233:../src/matrix_utils.c **** }
 234:../src/matrix_utils.c **** 
 235:../src/matrix_utils.c **** ////returns upper triangular.
 236:../src/matrix_utils.c **** //void ldlDecomposition(Matrix* L, Matrix* D, Matrix* A){
 237:../src/matrix_utils.c **** 	//(*D)[0][0] = (*A)[0][0];
 238:../src/matrix_utils.c **** 	//(*L)[0][0] = 1;
 239:../src/matrix_utils.c **** 	//(*D)[0][1] = 0;
 240:../src/matrix_utils.c **** 	//(*L)[0][1] = (*A)[0][1]/(*D)[0][0];
 241:../src/matrix_utils.c **** 	//(*D)[0][2] = 0;
 242:../src/matrix_utils.c **** 	//(*L)[0][2] = (*A)[0][2]/(*D)[0][0];
 243:../src/matrix_utils.c **** 	//(*D)[1][0] = 0;
 244:../src/matrix_utils.c **** 	//(*L)[1][0] = 0;
 245:../src/matrix_utils.c **** 	//(*D)[1][1] = (*A)[1][1] - ( (*L)[0][1] * (*L)[0][1] * (*D)[0][0] );
 246:../src/matrix_utils.c **** 	//(*L)[1][1] = 1;
 247:../src/matrix_utils.c **** 	//(*D)[1][2] = 0;
 248:../src/matrix_utils.c **** 	//(*L)[1][2] = ( (*A)[1][2] - ( (*L)[0][1] * (*L)[0][2] * (*D)[0][0] ) ) / (*D)[1][1];
 249:../src/matrix_utils.c **** 	//(*D)[2][0] = 0;
 250:../src/matrix_utils.c **** 	//(*L)[2][0] = 0;
 251:../src/matrix_utils.c **** 	//(*D)[2][0] = 0;
 252:../src/matrix_utils.c **** 	//(*L)[2][1] = 0;
 253:../src/matrix_utils.c **** 	//(*D)[2][2] = (*A)[2][2] - ( (*L)[0][2] * (*L)[0][2] * (*D)[0][0] ) - ( (*L)[1][2] * (*L)[1][2] *
 254:../src/matrix_utils.c **** 	//(*L)[2][2] = 1; 
 255:../src/matrix_utils.c **** //}
 256:../src/matrix_utils.c **** 
 257:../src/matrix_utils.c **** void matrixInverse(Matrix* DST, Matrix* A){					//DST = A^(-1)
 258:../src/matrix_utils.c **** 	(*DST)[0][0] = (*A)[1][1]*(*A)[2][2] - (*A)[1][2]*(*A)[2][1];
 259:../src/matrix_utils.c **** 	(*DST)[0][1] = (*A)[0][2]*(*A)[2][1] - (*A)[0][1]*(*A)[2][2];
 260:../src/matrix_utils.c **** 	(*DST)[0][2] = (*A)[0][1]*(*A)[1][2] - (*A)[0][2]*(*A)[1][1];
 261:../src/matrix_utils.c **** 	(*DST)[1][0] = (*A)[1][2]*(*A)[2][0] - (*A)[1][0]*(*A)[2][2];
 262:../src/matrix_utils.c **** 	(*DST)[1][1] = (*A)[0][0]*(*A)[2][2] - (*A)[0][2]*(*A)[2][0];
 263:../src/matrix_utils.c **** 	(*DST)[1][2] = (*A)[0][2]*(*A)[1][0] - (*A)[0][0]*(*A)[1][2];
 264:../src/matrix_utils.c **** 	(*DST)[2][0] = (*A)[1][0]*(*A)[2][1] - (*A)[1][1]*(*A)[2][0];
 265:../src/matrix_utils.c **** 	(*DST)[2][1] = (*A)[0][1]*(*A)[2][0] - (*A)[0][0]*(*A)[2][1];
 266:../src/matrix_utils.c **** 	(*DST)[2][2] = (*A)[0][0]*(*A)[1][1] - (*A)[0][1]*(*A)[1][0];
 267:../src/matrix_utils.c **** 
 268:../src/matrix_utils.c **** 	float determinant = (*A)[0][0]*(*DST)[0][0] + (*A)[0][1]*(*DST)[1][0] + (*A)[0][2]*(*DST)[2][0];
 269:../src/matrix_utils.c **** 
 270:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 271:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 272:../src/matrix_utils.c **** 			(*DST)[i][j] = (*DST)[i][j]/determinant;
 273:../src/matrix_utils.c **** 		}
 274:../src/matrix_utils.c **** 	}
 275:../src/matrix_utils.c **** }
 276:../src/matrix_utils.c **** 
 277:../src/matrix_utils.c **** void matrixInplaceInverse(Matrix* A){					//DST = A^(-1)
 278:../src/matrix_utils.c **** 	Matrix tmp;
 279:../src/matrix_utils.c **** 	matrixCopy(&tmp, A);
 280:../src/matrix_utils.c **** 
 281:../src/matrix_utils.c **** 	(*A)[0][0] = tmp[1][1]*tmp[2][2] - tmp[1][2]*tmp[2][1];
 282:../src/matrix_utils.c **** 	(*A)[0][1] = tmp[0][2]*tmp[2][1] - tmp[0][1]*tmp[2][2];
 283:../src/matrix_utils.c **** 	(*A)[0][2] = tmp[0][1]*tmp[1][2] - tmp[0][2]*tmp[1][1];
 284:../src/matrix_utils.c **** 	(*A)[1][0] = tmp[1][2]*tmp[2][0] - tmp[1][0]*tmp[2][2];
 285:../src/matrix_utils.c **** 	(*A)[1][1] = tmp[0][0]*tmp[2][2] - tmp[0][2]*tmp[2][0];
 286:../src/matrix_utils.c **** 	(*A)[1][2] = tmp[0][2]*tmp[1][0] - tmp[0][0]*tmp[1][2];
 287:../src/matrix_utils.c **** 	(*A)[2][0] = tmp[1][0]*tmp[2][1] - tmp[1][1]*tmp[2][0];
 288:../src/matrix_utils.c **** 	(*A)[2][1] = tmp[0][1]*tmp[2][0] - tmp[0][0]*tmp[2][1];
 289:../src/matrix_utils.c **** 	(*A)[2][2] = tmp[0][0]*tmp[1][1] - tmp[0][1]*tmp[1][0];
 290:../src/matrix_utils.c **** 
 291:../src/matrix_utils.c **** 	float determinant = tmp[0][0]*(*A)[0][0] + tmp[0][1]*(*A)[1][0] + tmp[0][2]*(*A)[2][0];
 292:../src/matrix_utils.c **** 
 293:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 294:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 295:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]/determinant;
 296:../src/matrix_utils.c **** 		}
 297:../src/matrix_utils.c **** 	}
 298:../src/matrix_utils.c **** }
 299:../src/matrix_utils.c **** 
 300:../src/matrix_utils.c **** 
 301:../src/matrix_utils.c **** float matrixDet(Matrix* A){
 302:../src/matrix_utils.c **** 	return ( (*A)[0][0]*((*A)[1][1]*(*A)[2][2] - (*A)[1][2]*(*A)[2][1]) +
 303:../src/matrix_utils.c **** 			 (*A)[0][1]*((*A)[1][2]*(*A)[2][0] - (*A)[1][0]*(*A)[2][2]) +
 304:../src/matrix_utils.c **** 			 (*A)[0][2]*((*A)[1][0]*(*A)[2][1] - (*A)[1][1]*(*A)[2][0]));
 305:../src/matrix_utils.c **** }
 306:../src/matrix_utils.c **** 
 307:../src/matrix_utils.c **** 
 308:../src/matrix_utils.c **** float matrixTrace(Matrix* A){
 309:../src/matrix_utils.c **** 	return ( (*A)[0][0] + (*A)[1][1] + (*A)[2][2] );
 310:../src/matrix_utils.c **** }
 311:../src/matrix_utils.c **** 
 312:../src/matrix_utils.c **** void matrixCopy(Matrix* DST, Matrix* A){					//DST = A
 313:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 314:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 315:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j];
 1474               		.loc 1 315 0
 1475 013e 8190      		ld r8,Z+
 1476 0140 9190      		ld r9,Z+
 1477 0142 A190      		ld r10,Z+
 1478 0144 B190      		ld r11,Z+
 1479 0146 8D92      		st X+,r8
 1480 0148 9D92      		st X+,r9
 1481 014a AD92      		st X+,r10
 1482 014c BD92      		st X+,r11
 1483               	.LVL85:
 1484 014e 8150      		subi r24,lo8(-(-1))
 1485               	.LVL86:
 314:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j];
 1486               		.loc 1 314 0
 1487 0150 01F4      		brne .L39
 1488               	.LVL87:
 1489 0152 645F      		subi r22,-12
 1490 0154 7F4F      		sbci r23,-1
 1491 0156 445F      		subi r20,-12
 1492 0158 5F4F      		sbci r21,-1
 1493               	.LBE76:
 313:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 1494               		.loc 1 313 0
 1495 015a 4E15      		cp r20,r14
 1496 015c 5F05      		cpc r21,r15
 1497 015e 01F4      		brne .L40
 1498               	.LBE75:
 1499               	.LBE74:
  73:../src/matrix_utils.c **** 		tmpB = B;
 1500               		.loc 1 73 0
 1501 0160 B801      		movw r22,r16
 1502 0162 00C0      		rjmp .L41
 1503               	.LVL88:
 1504               	.L59:
 1505 0164 7C01      		movw r14,r24
 1506 0166 8E01      		movw r16,r28
 1507 0168 0F5F      		subi r16,-1
 1508 016a 1F4F      		sbci r17,-1
 1509 016c A801      		movw r20,r16
 1510               	.LVL89:
 1511 016e 6E01      		movw r12,r28
 1512 0170 85E2      		ldi r24,37
 1513 0172 C80E      		add r12,r24
 1514 0174 D11C      		adc r13,__zero_reg__
 1515               	.LVL90:
 1516               	.L44:
  67:../src/matrix_utils.c **** 	Matrix tmp;
 1517               		.loc 1 67 0
 1518 0176 DA01      		movw r26,r20
 1519 0178 F701      		movw r30,r14
 1520 017a 83E0      		ldi r24,lo8(3)
 1521               	.LVL91:
 1522               	.L43:
 1523               	.LBB77:
 1524               	.LBB78:
 1525               	.LBB79:
 1526               		.loc 1 315 0
 1527 017c 8190      		ld r8,Z+
 1528 017e 9190      		ld r9,Z+
 1529 0180 A190      		ld r10,Z+
 1530 0182 B190      		ld r11,Z+
 1531 0184 8D92      		st X+,r8
 1532 0186 9D92      		st X+,r9
 1533 0188 AD92      		st X+,r10
 1534 018a BD92      		st X+,r11
 1535               	.LVL92:
 1536 018c 8150      		subi r24,lo8(-(-1))
 1537               	.LVL93:
 314:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j];
 1538               		.loc 1 314 0
 1539 018e 01F4      		brne .L43
 1540               	.LVL94:
 1541 0190 FCE0      		ldi r31,12
 1542 0192 EF0E      		add r14,r31
 1543 0194 F11C      		adc r15,__zero_reg__
 1544 0196 445F      		subi r20,-12
 1545 0198 5F4F      		sbci r21,-1
 1546               	.LBE79:
 313:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 1547               		.loc 1 313 0
 1548 019a 4C15      		cp r20,r12
 1549 019c 5D05      		cpc r21,r13
 1550 019e 01F4      		brne .L44
 1551               	.LBE78:
 1552               	.LBE77:
  77:../src/matrix_utils.c **** 		tmpA = A;
 1553               		.loc 1 77 0
 1554 01a0 09A7      		std Y+41,r16
 1555 01a2 1AA7      		std Y+42,r17
 1556               	.LVL95:
 1557 01a4 00C0      		rjmp .L41
 1558               		.cfi_endproc
 1559               	.LFE36:
 1561               		.section	.text.matrixTranspose,"ax",@progbits
 1562               	.global	matrixTranspose
 1564               	matrixTranspose:
 1565               	.LFB37:
  94:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 1566               		.loc 1 94 0
 1567               		.cfi_startproc
 1568               	.LVL96:
 1569 0000 0F93      		push r16
 1570               	.LCFI123:
 1571               		.cfi_def_cfa_offset 4
 1572               		.cfi_offset 16, -3
 1573 0002 1F93      		push r17
 1574               	.LCFI124:
 1575               		.cfi_def_cfa_offset 5
 1576               		.cfi_offset 17, -4
 1577 0004 CF93      		push r28
 1578               	.LCFI125:
 1579               		.cfi_def_cfa_offset 6
 1580               		.cfi_offset 28, -5
 1581 0006 DF93      		push r29
 1582               	.LCFI126:
 1583               		.cfi_def_cfa_offset 7
 1584               		.cfi_offset 29, -6
 1585               	/* prologue: function */
 1586               	/* frame size = 0 */
 1587               	/* stack size = 4 */
 1588               	.L__stack_usage = 4
 1589 0008 9B01      		movw r18,r22
 1590               	.LVL97:
 1591 000a EC01      		movw r28,r24
 1592 000c 8B01      		movw r16,r22
 1593 000e 0C5D      		subi r16,-36
 1594 0010 1F4F      		sbci r17,-1
 1595               	.LVL98:
 1596               	.L61:
  94:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 1597               		.loc 1 94 0
 1598 0012 FE01      		movw r30,r28
 1599 0014 D901      		movw r26,r18
 1600 0016 90E0      		ldi r25,0
 1601               	.LVL99:
 1602               	.L62:
 1603               	.LBB80:
 1604               	.LBB81:
  97:../src/matrix_utils.c **** 		}
 1605               		.loc 1 97 0 discriminator 3
 1606 0018 4D91      		ld r20,X+
 1607 001a 5D91      		ld r21,X+
 1608 001c 6D91      		ld r22,X+
 1609 001e 7D91      		ld r23,X+
 1610 0020 4083      		st Z,r20
 1611 0022 5183      		std Z+1,r21
 1612 0024 6283      		std Z+2,r22
 1613 0026 7383      		std Z+3,r23
  96:../src/matrix_utils.c **** 			(*DST)[j][i] = (*A)[i][j];
 1614               		.loc 1 96 0 discriminator 3
 1615 0028 9F5F      		subi r25,lo8(-(1))
 1616               	.LVL100:
 1617 002a 3C96      		adiw r30,12
 1618 002c 9330      		cpi r25,lo8(3)
 1619 002e 01F4      		brne .L62
 1620 0030 245F      		subi r18,-12
 1621 0032 3F4F      		sbci r19,-1
 1622 0034 2496      		adiw r28,4
 1623               	.LBE81:
  95:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 1624               		.loc 1 95 0 discriminator 2
 1625 0036 2017      		cp r18,r16
 1626 0038 3107      		cpc r19,r17
 1627 003a 01F4      		brne .L61
 1628               	/* epilogue start */
 1629               	.LBE80:
 100:../src/matrix_utils.c **** 
 1630               		.loc 1 100 0
 1631 003c DF91      		pop r29
 1632 003e CF91      		pop r28
 1633 0040 1F91      		pop r17
 1634 0042 0F91      		pop r16
 1635 0044 0895      		ret
 1636               		.cfi_endproc
 1637               	.LFE37:
 1639               		.section	.text.matrixInplaceTranspose,"ax",@progbits
 1640               	.global	matrixInplaceTranspose
 1642               	matrixInplaceTranspose:
 1643               	.LFB38:
 102:../src/matrix_utils.c **** 	float tmp;
 1644               		.loc 1 102 0
 1645               		.cfi_startproc
 1646               	.LVL101:
 1647 0000 CF92      		push r12
 1648               	.LCFI127:
 1649               		.cfi_def_cfa_offset 4
 1650               		.cfi_offset 12, -3
 1651 0002 DF92      		push r13
 1652               	.LCFI128:
 1653               		.cfi_def_cfa_offset 5
 1654               		.cfi_offset 13, -4
 1655 0004 EF92      		push r14
 1656               	.LCFI129:
 1657               		.cfi_def_cfa_offset 6
 1658               		.cfi_offset 14, -5
 1659 0006 FF92      		push r15
 1660               	.LCFI130:
 1661               		.cfi_def_cfa_offset 7
 1662               		.cfi_offset 15, -6
 1663 0008 0F93      		push r16
 1664               	.LCFI131:
 1665               		.cfi_def_cfa_offset 8
 1666               		.cfi_offset 16, -7
 1667 000a 1F93      		push r17
 1668               	.LCFI132:
 1669               		.cfi_def_cfa_offset 9
 1670               		.cfi_offset 17, -8
 1671 000c CF93      		push r28
 1672               	.LCFI133:
 1673               		.cfi_def_cfa_offset 10
 1674               		.cfi_offset 28, -9
 1675 000e DF93      		push r29
 1676               	.LCFI134:
 1677               		.cfi_def_cfa_offset 11
 1678               		.cfi_offset 29, -10
 1679               	/* prologue: function */
 1680               	/* frame size = 0 */
 1681               	/* stack size = 8 */
 1682               	.L__stack_usage = 8
 1683 0010 AC01      		movw r20,r24
 1684               	.LVL102:
 102:../src/matrix_utils.c **** 	float tmp;
 1685               		.loc 1 102 0
 1686 0012 60E0      		ldi r22,0
 1687 0014 70E0      		ldi r23,0
 1688               	.LBB82:
 104:../src/matrix_utils.c **** 		for(uint8_t j=i+1;j<3;j++){
 1689               		.loc 1 104 0
 1690 0016 80E0      		ldi r24,0
 1691               	.LVL103:
 1692               	.L67:
 1693               	.LBB83:
 105:../src/matrix_utils.c **** 			tmp = (*A)[i][j];
 1694               		.loc 1 105 0
 1695 0018 8F5F      		subi r24,lo8(-(1))
 1696               	.LVL104:
 1697 001a 982F      		mov r25,r24
 1698 001c EB01      		movw r28,r22
 1699 001e CC0F      		lsl r28
 1700 0020 DD1F      		rol r29
 106:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[j][i];
 1701               		.loc 1 106 0
 1702 0022 C60F      		add r28,r22
 1703 0024 D71F      		adc r29,r23
 1704               	.LVL105:
 1705               	.L66:
 106:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[j][i];
 1706               		.loc 1 106 0 is_stmt 0 discriminator 3
 1707 0026 292F      		mov r18,r25
 1708 0028 30E0      		ldi r19,0
 1709 002a DE01      		movw r26,r28
 1710 002c A20F      		add r26,r18
 1711 002e B31F      		adc r27,r19
 1712 0030 AA0F      		lsl r26
 1713 0032 BB1F      		rol r27
 1714 0034 AA0F      		lsl r26
 1715 0036 BB1F      		rol r27
 1716 0038 A40F      		add r26,r20
 1717 003a B51F      		adc r27,r21
 1718 003c CD90      		ld r12,X+
 1719 003e DD90      		ld r13,X+
 1720 0040 ED90      		ld r14,X+
 1721 0042 FC90      		ld r15,X
 1722 0044 1397      		sbiw r26,3
 1723               	.LVL106:
 107:../src/matrix_utils.c **** 			(*A)[j][i] = tmp;
 1724               		.loc 1 107 0 is_stmt 1 discriminator 3
 1725 0046 F901      		movw r30,r18
 1726 0048 EE0F      		lsl r30
 1727 004a FF1F      		rol r31
 1728 004c E20F      		add r30,r18
 1729 004e F31F      		adc r31,r19
 1730 0050 E60F      		add r30,r22
 1731 0052 F71F      		adc r31,r23
 1732 0054 EE0F      		lsl r30
 1733 0056 FF1F      		rol r31
 1734 0058 EE0F      		lsl r30
 1735 005a FF1F      		rol r31
 1736 005c E40F      		add r30,r20
 1737 005e F51F      		adc r31,r21
 1738 0060 0081      		ld r16,Z
 1739 0062 1181      		ldd r17,Z+1
 1740 0064 2281      		ldd r18,Z+2
 1741 0066 3381      		ldd r19,Z+3
 1742 0068 0D93      		st X+,r16
 1743 006a 1D93      		st X+,r17
 1744 006c 2D93      		st X+,r18
 1745 006e 3C93      		st X,r19
 1746 0070 1397      		sbiw r26,3
 108:../src/matrix_utils.c **** 		}
 1747               		.loc 1 108 0 discriminator 3
 1748 0072 C082      		st Z,r12
 1749 0074 D182      		std Z+1,r13
 1750 0076 E282      		std Z+2,r14
 1751 0078 F382      		std Z+3,r15
 105:../src/matrix_utils.c **** 			tmp = (*A)[i][j];
 1752               		.loc 1 105 0 discriminator 3
 1753 007a 9F5F      		subi r25,lo8(-(1))
 1754               	.LVL107:
 1755 007c 9230      		cpi r25,lo8(2)
 1756 007e 01F0      		breq .L66
 1757               	.LVL108:
 1758 0080 6F5F      		subi r22,-1
 1759 0082 7F4F      		sbci r23,-1
 1760               	.LBE83:
 104:../src/matrix_utils.c **** 		for(uint8_t j=i+1;j<3;j++){
 1761               		.loc 1 104 0 discriminator 1
 1762 0084 8230      		cpi r24,lo8(2)
 1763 0086 01F4      		brne .L67
 1764               	/* epilogue start */
 1765               	.LBE82:
 111:../src/matrix_utils.c **** 
 1766               		.loc 1 111 0
 1767 0088 DF91      		pop r29
 1768 008a CF91      		pop r28
 1769 008c 1F91      		pop r17
 1770 008e 0F91      		pop r16
 1771 0090 FF90      		pop r15
 1772 0092 EF90      		pop r14
 1773 0094 DF90      		pop r13
 1774 0096 CF90      		pop r12
 1775               	.LVL109:
 1776 0098 0895      		ret
 1777               		.cfi_endproc
 1778               	.LFE38:
 1780               	.global	__divsf3
 1781               		.section	.text.choleskyDecomposition,"ax",@progbits
 1782               	.global	choleskyDecomposition
 1784               	choleskyDecomposition:
 1785               	.LFB40:
 147:../src/matrix_utils.c **** 	(*L)[0][0] = sqrtf((*A)[0][0]);
 1786               		.loc 1 147 0
 1787               		.cfi_startproc
 1788               	.LVL110:
 1789 0000 4F92      		push r4
 1790               	.LCFI135:
 1791               		.cfi_def_cfa_offset 4
 1792               		.cfi_offset 4, -3
 1793 0002 5F92      		push r5
 1794               	.LCFI136:
 1795               		.cfi_def_cfa_offset 5
 1796               		.cfi_offset 5, -4
 1797 0004 6F92      		push r6
 1798               	.LCFI137:
 1799               		.cfi_def_cfa_offset 6
 1800               		.cfi_offset 6, -5
 1801 0006 7F92      		push r7
 1802               	.LCFI138:
 1803               		.cfi_def_cfa_offset 7
 1804               		.cfi_offset 7, -6
 1805 0008 8F92      		push r8
 1806               	.LCFI139:
 1807               		.cfi_def_cfa_offset 8
 1808               		.cfi_offset 8, -7
 1809 000a 9F92      		push r9
 1810               	.LCFI140:
 1811               		.cfi_def_cfa_offset 9
 1812               		.cfi_offset 9, -8
 1813 000c AF92      		push r10
 1814               	.LCFI141:
 1815               		.cfi_def_cfa_offset 10
 1816               		.cfi_offset 10, -9
 1817 000e BF92      		push r11
 1818               	.LCFI142:
 1819               		.cfi_def_cfa_offset 11
 1820               		.cfi_offset 11, -10
 1821 0010 CF92      		push r12
 1822               	.LCFI143:
 1823               		.cfi_def_cfa_offset 12
 1824               		.cfi_offset 12, -11
 1825 0012 DF92      		push r13
 1826               	.LCFI144:
 1827               		.cfi_def_cfa_offset 13
 1828               		.cfi_offset 13, -12
 1829 0014 EF92      		push r14
 1830               	.LCFI145:
 1831               		.cfi_def_cfa_offset 14
 1832               		.cfi_offset 14, -13
 1833 0016 FF92      		push r15
 1834               	.LCFI146:
 1835               		.cfi_def_cfa_offset 15
 1836               		.cfi_offset 15, -14
 1837 0018 0F93      		push r16
 1838               	.LCFI147:
 1839               		.cfi_def_cfa_offset 16
 1840               		.cfi_offset 16, -15
 1841 001a 1F93      		push r17
 1842               	.LCFI148:
 1843               		.cfi_def_cfa_offset 17
 1844               		.cfi_offset 17, -16
 1845 001c CF93      		push r28
 1846               	.LCFI149:
 1847               		.cfi_def_cfa_offset 18
 1848               		.cfi_offset 28, -17
 1849 001e DF93      		push r29
 1850               	.LCFI150:
 1851               		.cfi_def_cfa_offset 19
 1852               		.cfi_offset 29, -18
 1853               	/* prologue: function */
 1854               	/* frame size = 0 */
 1855               	/* stack size = 16 */
 1856               	.L__stack_usage = 16
 1857 0020 EC01      		movw r28,r24
 1858 0022 8B01      		movw r16,r22
 148:../src/matrix_utils.c **** 	(*L)[0][1] = (*A)[0][1] / (*L)[0][0];
 1859               		.loc 1 148 0
 1860 0024 FB01      		movw r30,r22
 1861 0026 6081      		ld r22,Z
 1862 0028 7181      		ldd r23,Z+1
 1863 002a 8281      		ldd r24,Z+2
 1864 002c 9381      		ldd r25,Z+3
 1865               	.LVL111:
 1866 002e 0E94 0000 		call sqrtf
 1867               	.LVL112:
 1868 0032 6B01      		movw r12,r22
 1869 0034 7C01      		movw r14,r24
 1870 0036 6883      		st Y,r22
 1871 0038 7983      		std Y+1,r23
 1872 003a 8A83      		std Y+2,r24
 1873 003c 9B83      		std Y+3,r25
 149:../src/matrix_utils.c **** 	(*L)[0][2] = (*A)[0][2] / (*L)[0][0];
 1874               		.loc 1 149 0
 1875 003e 9B01      		movw r18,r22
 1876 0040 AC01      		movw r20,r24
 1877 0042 F801      		movw r30,r16
 1878 0044 6481      		ldd r22,Z+4
 1879 0046 7581      		ldd r23,Z+5
 1880 0048 8681      		ldd r24,Z+6
 1881 004a 9781      		ldd r25,Z+7
 1882 004c 0E94 0000 		call __divsf3
 1883               	.LVL113:
 1884 0050 4B01      		movw r8,r22
 1885 0052 5C01      		movw r10,r24
 1886 0054 6C83      		std Y+4,r22
 1887 0056 7D83      		std Y+5,r23
 1888 0058 8E83      		std Y+6,r24
 1889 005a 9F83      		std Y+7,r25
 150:../src/matrix_utils.c **** 	(*L)[1][0] = 0;
 1890               		.loc 1 150 0
 1891 005c A701      		movw r20,r14
 1892 005e 9601      		movw r18,r12
 1893 0060 F801      		movw r30,r16
 1894 0062 6085      		ldd r22,Z+8
 1895 0064 7185      		ldd r23,Z+9
 1896 0066 8285      		ldd r24,Z+10
 1897 0068 9385      		ldd r25,Z+11
 1898 006a 0E94 0000 		call __divsf3
 1899               	.LVL114:
 1900 006e 6B01      		movw r12,r22
 1901 0070 7C01      		movw r14,r24
 1902 0072 6887      		std Y+8,r22
 1903 0074 7987      		std Y+9,r23
 1904 0076 8A87      		std Y+10,r24
 1905 0078 9B87      		std Y+11,r25
 151:../src/matrix_utils.c **** 	(*L)[1][1] = sqrtf( (*A)[1][1] - powf((*L)[0][1],2));
 1906               		.loc 1 151 0
 1907 007a 1C86      		std Y+12,__zero_reg__
 1908 007c 1D86      		std Y+13,__zero_reg__
 1909 007e 1E86      		std Y+14,__zero_reg__
 1910 0080 1F86      		std Y+15,__zero_reg__
 152:../src/matrix_utils.c **** 	(*L)[1][2] = ( (*A)[1][2] - (*L)[0][2] * (*L)[0][1] ) / (*L)[1][1];
 1911               		.loc 1 152 0
 1912 0082 A501      		movw r20,r10
 1913 0084 9401      		movw r18,r8
 1914 0086 C501      		movw r24,r10
 1915 0088 B401      		movw r22,r8
 1916 008a 0E94 0000 		call __mulsf3
 1917               	.LVL115:
 1918 008e 9B01      		movw r18,r22
 1919 0090 AC01      		movw r20,r24
 1920 0092 F801      		movw r30,r16
 1921 0094 6089      		ldd r22,Z+16
 1922 0096 7189      		ldd r23,Z+17
 1923 0098 8289      		ldd r24,Z+18
 1924 009a 9389      		ldd r25,Z+19
 1925 009c 0E94 0000 		call __subsf3
 1926               	.LVL116:
 1927 00a0 0E94 0000 		call sqrtf
 1928               	.LVL117:
 1929 00a4 2B01      		movw r4,r22
 1930 00a6 3C01      		movw r6,r24
 1931 00a8 688B      		std Y+16,r22
 1932 00aa 798B      		std Y+17,r23
 1933 00ac 8A8B      		std Y+18,r24
 1934 00ae 9B8B      		std Y+19,r25
 153:../src/matrix_utils.c **** 	(*L)[2][0] = 0;
 1935               		.loc 1 153 0
 1936 00b0 A701      		movw r20,r14
 1937 00b2 9601      		movw r18,r12
 1938 00b4 C501      		movw r24,r10
 1939 00b6 B401      		movw r22,r8
 1940 00b8 0E94 0000 		call __mulsf3
 1941               	.LVL118:
 1942 00bc 9B01      		movw r18,r22
 1943 00be AC01      		movw r20,r24
 1944 00c0 F801      		movw r30,r16
 1945 00c2 6489      		ldd r22,Z+20
 1946 00c4 7589      		ldd r23,Z+21
 1947 00c6 8689      		ldd r24,Z+22
 1948 00c8 9789      		ldd r25,Z+23
 1949 00ca 0E94 0000 		call __subsf3
 1950               	.LVL119:
 1951 00ce A301      		movw r20,r6
 1952 00d0 9201      		movw r18,r4
 1953 00d2 0E94 0000 		call __divsf3
 1954               	.LVL120:
 1955 00d6 4B01      		movw r8,r22
 1956 00d8 5C01      		movw r10,r24
 1957 00da 6C8B      		std Y+20,r22
 1958 00dc 7D8B      		std Y+21,r23
 1959 00de 8E8B      		std Y+22,r24
 1960 00e0 9F8B      		std Y+23,r25
 154:../src/matrix_utils.c **** 	(*L)[2][1] = 0;
 1961               		.loc 1 154 0
 1962 00e2 188E      		std Y+24,__zero_reg__
 1963 00e4 198E      		std Y+25,__zero_reg__
 1964 00e6 1A8E      		std Y+26,__zero_reg__
 1965 00e8 1B8E      		std Y+27,__zero_reg__
 155:../src/matrix_utils.c **** 	(*L)[2][2] = sqrtf( (*A)[2][2] - powf((*L)[0][2],2) - powf((*L)[1][2],2) );
 1966               		.loc 1 155 0
 1967 00ea 1C8E      		std Y+28,__zero_reg__
 1968 00ec 1D8E      		std Y+29,__zero_reg__
 1969 00ee 1E8E      		std Y+30,__zero_reg__
 1970 00f0 1F8E      		std Y+31,__zero_reg__
 156:../src/matrix_utils.c **** }
 1971               		.loc 1 156 0
 1972 00f2 A701      		movw r20,r14
 1973 00f4 9601      		movw r18,r12
 1974 00f6 C701      		movw r24,r14
 1975 00f8 B601      		movw r22,r12
 1976 00fa 0E94 0000 		call __mulsf3
 1977               	.LVL121:
 1978 00fe 9B01      		movw r18,r22
 1979 0100 AC01      		movw r20,r24
 1980 0102 F801      		movw r30,r16
 1981 0104 60A1      		ldd r22,Z+32
 1982 0106 71A1      		ldd r23,Z+33
 1983 0108 82A1      		ldd r24,Z+34
 1984 010a 93A1      		ldd r25,Z+35
 1985 010c 0E94 0000 		call __subsf3
 1986               	.LVL122:
 1987 0110 6B01      		movw r12,r22
 1988 0112 7C01      		movw r14,r24
 1989 0114 A501      		movw r20,r10
 1990 0116 9401      		movw r18,r8
 1991 0118 C501      		movw r24,r10
 1992 011a B401      		movw r22,r8
 1993 011c 0E94 0000 		call __mulsf3
 1994               	.LVL123:
 1995 0120 9B01      		movw r18,r22
 1996 0122 AC01      		movw r20,r24
 1997 0124 C701      		movw r24,r14
 1998 0126 B601      		movw r22,r12
 1999 0128 0E94 0000 		call __subsf3
 2000               	.LVL124:
 2001 012c 0E94 0000 		call sqrtf
 2002               	.LVL125:
 2003 0130 68A3      		std Y+32,r22
 2004 0132 79A3      		std Y+33,r23
 2005 0134 8AA3      		std Y+34,r24
 2006 0136 9BA3      		std Y+35,r25
 2007               	/* epilogue start */
 157:../src/matrix_utils.c **** 
 2008               		.loc 1 157 0
 2009 0138 DF91      		pop r29
 2010 013a CF91      		pop r28
 2011               	.LVL126:
 2012 013c 1F91      		pop r17
 2013 013e 0F91      		pop r16
 2014               	.LVL127:
 2015 0140 FF90      		pop r15
 2016 0142 EF90      		pop r14
 2017 0144 DF90      		pop r13
 2018 0146 CF90      		pop r12
 2019 0148 BF90      		pop r11
 2020 014a AF90      		pop r10
 2021 014c 9F90      		pop r9
 2022 014e 8F90      		pop r8
 2023 0150 7F90      		pop r7
 2024 0152 6F90      		pop r6
 2025 0154 5F90      		pop r5
 2026 0156 4F90      		pop r4
 2027 0158 0895      		ret
 2028               		.cfi_endproc
 2029               	.LFE40:
 2031               	.global	__gtsf2
 2032               		.section	.text.getEigenvector,"ax",@progbits
 2033               	.global	getEigenvector
 2035               	getEigenvector:
 2036               	.LFB42:
 194:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 2037               		.loc 1 194 0
 2038               		.cfi_startproc
 2039               	.LVL128:
 2040 0000 4F92      		push r4
 2041               	.LCFI151:
 2042               		.cfi_def_cfa_offset 4
 2043               		.cfi_offset 4, -3
 2044 0002 5F92      		push r5
 2045               	.LCFI152:
 2046               		.cfi_def_cfa_offset 5
 2047               		.cfi_offset 5, -4
 2048 0004 6F92      		push r6
 2049               	.LCFI153:
 2050               		.cfi_def_cfa_offset 6
 2051               		.cfi_offset 6, -5
 2052 0006 7F92      		push r7
 2053               	.LCFI154:
 2054               		.cfi_def_cfa_offset 7
 2055               		.cfi_offset 7, -6
 2056 0008 9F92      		push r9
 2057               	.LCFI155:
 2058               		.cfi_def_cfa_offset 8
 2059               		.cfi_offset 9, -7
 2060 000a AF92      		push r10
 2061               	.LCFI156:
 2062               		.cfi_def_cfa_offset 9
 2063               		.cfi_offset 10, -8
 2064 000c BF92      		push r11
 2065               	.LCFI157:
 2066               		.cfi_def_cfa_offset 10
 2067               		.cfi_offset 11, -9
 2068 000e CF92      		push r12
 2069               	.LCFI158:
 2070               		.cfi_def_cfa_offset 11
 2071               		.cfi_offset 12, -10
 2072 0010 DF92      		push r13
 2073               	.LCFI159:
 2074               		.cfi_def_cfa_offset 12
 2075               		.cfi_offset 13, -11
 2076 0012 EF92      		push r14
 2077               	.LCFI160:
 2078               		.cfi_def_cfa_offset 13
 2079               		.cfi_offset 14, -12
 2080 0014 FF92      		push r15
 2081               	.LCFI161:
 2082               		.cfi_def_cfa_offset 14
 2083               		.cfi_offset 15, -13
 2084 0016 0F93      		push r16
 2085               	.LCFI162:
 2086               		.cfi_def_cfa_offset 15
 2087               		.cfi_offset 16, -14
 2088 0018 1F93      		push r17
 2089               	.LCFI163:
 2090               		.cfi_def_cfa_offset 16
 2091               		.cfi_offset 17, -15
 2092 001a CF93      		push r28
 2093               	.LCFI164:
 2094               		.cfi_def_cfa_offset 17
 2095               		.cfi_offset 28, -16
 2096 001c DF93      		push r29
 2097               	.LCFI165:
 2098               		.cfi_def_cfa_offset 18
 2099               		.cfi_offset 29, -17
 2100               	/* prologue: function */
 2101               	/* frame size = 0 */
 2102               	/* stack size = 15 */
 2103               	.L__stack_usage = 15
 2104 001e 982E      		mov r9,r24
 2105 0020 D92F      		mov r29,r25
 2106 0022 5B01      		movw r10,r22
 2107               	.LVL129:
 2108 0024 6B01      		movw r12,r22
 194:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 2109               		.loc 1 194 0
 2110 0026 E12C      		mov r14,__zero_reg__
 2111 0028 F12C      		mov r15,__zero_reg__
 2112               	.LVL130:
 2113               	.L73:
 2114 002a 8601      		movw r16,r12
 2115 002c C0E0      		ldi r28,0
 2116 002e 412C      		mov r4,__zero_reg__
 2117 0030 512C      		mov r5,__zero_reg__
 2118 0032 3201      		movw r6,r4
 2119               	.LVL131:
 2120               	.L74:
 2121               	.LBB84:
 2122               	.LBB85:
 2123               	.LBB86:
 198:../src/matrix_utils.c **** 		}
 2124               		.loc 1 198 0 discriminator 3
 2125 0034 F801      		movw r30,r16
 2126 0036 6081      		ld r22,Z
 2127 0038 7181      		ldd r23,Z+1
 2128 003a 8281      		ldd r24,Z+2
 2129 003c 9381      		ldd r25,Z+3
 2130 003e 9B01      		movw r18,r22
 2131 0040 AC01      		movw r20,r24
 2132 0042 0E94 0000 		call __mulsf3
 2133               	.LVL132:
 2134 0046 9B01      		movw r18,r22
 2135 0048 AC01      		movw r20,r24
 2136 004a C301      		movw r24,r6
 2137 004c B201      		movw r22,r4
 2138 004e 0E94 0000 		call __addsf3
 2139               	.LVL133:
 2140 0052 2B01      		movw r4,r22
 2141 0054 3C01      		movw r6,r24
 2142               	.LVL134:
 197:../src/matrix_utils.c **** 			denom += powf((*A)[j][i], 2);
 2143               		.loc 1 197 0 discriminator 3
 2144 0056 CF5F      		subi r28,lo8(-(1))
 2145               	.LVL135:
 2146 0058 045F      		subi r16,-12
 2147 005a 1F4F      		sbci r17,-1
 2148 005c C330      		cpi r28,lo8(3)
 2149 005e 01F4      		brne .L74
 2150               	.LBE86:
 200:../src/matrix_utils.c **** 			denom = sqrtf(denom);
 2151               		.loc 1 200 0
 2152 0060 20E0      		ldi r18,0
 2153 0062 30E0      		ldi r19,0
 2154 0064 A901      		movw r20,r18
 2155 0066 0E94 0000 		call __gtsf2
 2156               	.LVL136:
 2157 006a 1816      		cp __zero_reg__,r24
 2158 006c 04F0      		brlt .L86
 2159               	.LVL137:
 2160 006e 8FEF      		ldi r24,-1
 2161 0070 E81A      		sub r14,r24
 2162 0072 F80A      		sbc r15,r24
 2163               	.LVL138:
 2164 0074 E4E0      		ldi r30,4
 2165 0076 CE0E      		add r12,r30
 2166 0078 D11C      		adc r13,__zero_reg__
 2167               	.LBE85:
 195:../src/matrix_utils.c **** 		float denom=0;
 2168               		.loc 1 195 0 discriminator 2
 2169 007a F3E0      		ldi r31,3
 2170 007c EF16      		cp r14,r31
 2171 007e F104      		cpc r15,__zero_reg__
 2172 0080 01F4      		brne .L73
 2173               	.LVL139:
 2174               	.L72:
 2175               	/* epilogue start */
 2176               	.LBE84:
 208:../src/matrix_utils.c **** 
 2177               		.loc 1 208 0
 2178 0082 DF91      		pop r29
 2179 0084 CF91      		pop r28
 2180 0086 1F91      		pop r17
 2181 0088 0F91      		pop r16
 2182 008a FF90      		pop r15
 2183 008c EF90      		pop r14
 2184 008e DF90      		pop r13
 2185 0090 CF90      		pop r12
 2186 0092 BF90      		pop r11
 2187 0094 AF90      		pop r10
 2188 0096 9F90      		pop r9
 2189 0098 7F90      		pop r7
 2190 009a 6F90      		pop r6
 2191 009c 5F90      		pop r5
 2192 009e 4F90      		pop r4
 2193               	.LVL140:
 2194 00a0 0895      		ret
 2195               	.LVL141:
 2196               	.L86:
 2197               	.LBB89:
 2198               	.LBB88:
 201:../src/matrix_utils.c **** 			for(uint8_t j=0;j<3;j++){
 2199               		.loc 1 201 0
 2200 00a2 C301      		movw r24,r6
 2201 00a4 B201      		movw r22,r4
 2202 00a6 0E94 0000 		call sqrtf
 2203               	.LVL142:
 2204 00aa 2B01      		movw r4,r22
 2205 00ac 3C01      		movw r6,r24
 2206               	.LVL143:
 2207 00ae EE0C      		lsl r14
 2208 00b0 FF1C      		rol r15
 2209 00b2 EE0C      		lsl r14
 2210 00b4 FF1C      		rol r15
 2211               	.LVL144:
 2212 00b6 AE0C      		add r10,r14
 2213 00b8 BF1C      		adc r11,r15
 2214               	.LVL145:
 2215 00ba 092D      		mov r16,r9
 2216 00bc 1D2F      		mov r17,r29
 2217 00be E801      		movw r28,r16
 2218               	.LVL146:
 2219 00c0 2C96      		adiw r28,12
 2220               	.LVL147:
 2221               	.L77:
 2222               	.LBB87:
 203:../src/matrix_utils.c **** 			}
 2223               		.loc 1 203 0 discriminator 3
 2224 00c2 A301      		movw r20,r6
 2225 00c4 9201      		movw r18,r4
 2226 00c6 F501      		movw r30,r10
 2227 00c8 6081      		ld r22,Z
 2228 00ca 7181      		ldd r23,Z+1
 2229 00cc 8281      		ldd r24,Z+2
 2230 00ce 9381      		ldd r25,Z+3
 2231 00d0 0E94 0000 		call __divsf3
 2232               	.LVL148:
 2233 00d4 F801      		movw r30,r16
 2234 00d6 6193      		st Z+,r22
 2235 00d8 7193      		st Z+,r23
 2236 00da 8193      		st Z+,r24
 2237 00dc 9193      		st Z+,r25
 2238 00de 8F01      		movw r16,r30
 2239 00e0 FCE0      		ldi r31,12
 2240 00e2 AF0E      		add r10,r31
 2241 00e4 B11C      		adc r11,__zero_reg__
 202:../src/matrix_utils.c **** 				(*dst)[j] = (*A)[j][i]/denom;
 2242               		.loc 1 202 0 discriminator 3
 2243 00e6 0C17      		cp r16,r28
 2244 00e8 1D07      		cpc r17,r29
 2245 00ea 01F4      		brne .L77
 2246 00ec 00C0      		rjmp .L72
 2247               	.LBE87:
 2248               	.LBE88:
 2249               	.LBE89:
 2250               		.cfi_endproc
 2251               	.LFE42:
 2253               		.section	.text.matrixInverse,"ax",@progbits
 2254               	.global	matrixInverse
 2256               	matrixInverse:
 2257               	.LFB44:
 257:../src/matrix_utils.c **** 	(*DST)[0][0] = (*A)[1][1]*(*A)[2][2] - (*A)[1][2]*(*A)[2][1];
 2258               		.loc 1 257 0
 2259               		.cfi_startproc
 2260               	.LVL149:
 2261 0000 4F92      		push r4
 2262               	.LCFI166:
 2263               		.cfi_def_cfa_offset 4
 2264               		.cfi_offset 4, -3
 2265 0002 5F92      		push r5
 2266               	.LCFI167:
 2267               		.cfi_def_cfa_offset 5
 2268               		.cfi_offset 5, -4
 2269 0004 6F92      		push r6
 2270               	.LCFI168:
 2271               		.cfi_def_cfa_offset 6
 2272               		.cfi_offset 6, -5
 2273 0006 7F92      		push r7
 2274               	.LCFI169:
 2275               		.cfi_def_cfa_offset 7
 2276               		.cfi_offset 7, -6
 2277 0008 8F92      		push r8
 2278               	.LCFI170:
 2279               		.cfi_def_cfa_offset 8
 2280               		.cfi_offset 8, -7
 2281 000a 9F92      		push r9
 2282               	.LCFI171:
 2283               		.cfi_def_cfa_offset 9
 2284               		.cfi_offset 9, -8
 2285 000c AF92      		push r10
 2286               	.LCFI172:
 2287               		.cfi_def_cfa_offset 10
 2288               		.cfi_offset 10, -9
 2289 000e BF92      		push r11
 2290               	.LCFI173:
 2291               		.cfi_def_cfa_offset 11
 2292               		.cfi_offset 11, -10
 2293 0010 CF92      		push r12
 2294               	.LCFI174:
 2295               		.cfi_def_cfa_offset 12
 2296               		.cfi_offset 12, -11
 2297 0012 DF92      		push r13
 2298               	.LCFI175:
 2299               		.cfi_def_cfa_offset 13
 2300               		.cfi_offset 13, -12
 2301 0014 EF92      		push r14
 2302               	.LCFI176:
 2303               		.cfi_def_cfa_offset 14
 2304               		.cfi_offset 14, -13
 2305 0016 FF92      		push r15
 2306               	.LCFI177:
 2307               		.cfi_def_cfa_offset 15
 2308               		.cfi_offset 15, -14
 2309 0018 0F93      		push r16
 2310               	.LCFI178:
 2311               		.cfi_def_cfa_offset 16
 2312               		.cfi_offset 16, -15
 2313 001a 1F93      		push r17
 2314               	.LCFI179:
 2315               		.cfi_def_cfa_offset 17
 2316               		.cfi_offset 17, -16
 2317 001c CF93      		push r28
 2318               	.LCFI180:
 2319               		.cfi_def_cfa_offset 18
 2320               		.cfi_offset 28, -17
 2321 001e DF93      		push r29
 2322               	.LCFI181:
 2323               		.cfi_def_cfa_offset 19
 2324               		.cfi_offset 29, -18
 2325 0020 CDB7      		in r28,__SP_L__
 2326 0022 DEB7      		in r29,__SP_H__
 2327               	.LCFI182:
 2328               		.cfi_def_cfa_register 28
 2329 0024 6E97      		sbiw r28,30
 2330               	.LCFI183:
 2331               		.cfi_def_cfa_offset 49
 2332 0026 CDBF      		out __SP_L__,r28
 2333 0028 DEBF      		out __SP_H__,r29
 2334               	/* prologue: function */
 2335               	/* frame size = 30 */
 2336               	/* stack size = 46 */
 2337               	.L__stack_usage = 46
 2338 002a 8C01      		movw r16,r24
 2339 002c 6D8F      		std Y+29,r22
 2340 002e 7E8F      		std Y+30,r23
 258:../src/matrix_utils.c **** 	(*DST)[0][1] = (*A)[0][2]*(*A)[2][1] - (*A)[0][1]*(*A)[2][2];
 2341               		.loc 1 258 0
 2342 0030 DB01      		movw r26,r22
 2343 0032 5096      		adiw r26,16
 2344 0034 8D91      		ld r24,X+
 2345 0036 9D91      		ld r25,X+
 2346 0038 0D90      		ld __tmp_reg__,X+
 2347 003a BC91      		ld r27,X
 2348 003c A02D      		mov r26,__tmp_reg__
 2349               	.LVL150:
 2350 003e 8987      		std Y+9,r24
 2351 0040 9A87      		std Y+10,r25
 2352 0042 AB87      		std Y+11,r26
 2353 0044 BC87      		std Y+12,r27
 2354 0046 DB01      		movw r26,r22
 2355 0048 9096      		adiw r26,32
 2356 004a 8D91      		ld r24,X+
 2357 004c 9D91      		ld r25,X+
 2358 004e 0D90      		ld __tmp_reg__,X+
 2359 0050 BC91      		ld r27,X
 2360 0052 A02D      		mov r26,__tmp_reg__
 2361 0054 8D83      		std Y+5,r24
 2362 0056 9E83      		std Y+6,r25
 2363 0058 AF83      		std Y+7,r26
 2364 005a B887      		std Y+8,r27
 2365 005c DB01      		movw r26,r22
 2366 005e 5496      		adiw r26,20
 2367 0060 8D91      		ld r24,X+
 2368 0062 9D91      		ld r25,X+
 2369 0064 0D90      		ld __tmp_reg__,X+
 2370 0066 BC91      		ld r27,X
 2371 0068 A02D      		mov r26,__tmp_reg__
 2372 006a 8983      		std Y+1,r24
 2373 006c 9A83      		std Y+2,r25
 2374 006e AB83      		std Y+3,r26
 2375 0070 BC83      		std Y+4,r27
 2376 0072 DB01      		movw r26,r22
 2377 0074 5C96      		adiw r26,28
 2378 0076 8D91      		ld r24,X+
 2379 0078 9D91      		ld r25,X+
 2380 007a 0D90      		ld __tmp_reg__,X+
 2381 007c BC91      		ld r27,X
 2382 007e A02D      		mov r26,__tmp_reg__
 2383 0080 8D87      		std Y+13,r24
 2384 0082 9E87      		std Y+14,r25
 2385 0084 AF87      		std Y+15,r26
 2386 0086 B88B      		std Y+16,r27
 2387 0088 2D81      		ldd r18,Y+5
 2388 008a 3E81      		ldd r19,Y+6
 2389 008c 4F81      		ldd r20,Y+7
 2390 008e 5885      		ldd r21,Y+8
 2391 0090 6985      		ldd r22,Y+9
 2392 0092 7A85      		ldd r23,Y+10
 2393 0094 8B85      		ldd r24,Y+11
 2394 0096 9C85      		ldd r25,Y+12
 2395               	.LVL151:
 2396 0098 0E94 0000 		call __mulsf3
 2397               	.LVL152:
 2398 009c 6B01      		movw r12,r22
 2399 009e 7C01      		movw r14,r24
 2400 00a0 2D85      		ldd r18,Y+13
 2401 00a2 3E85      		ldd r19,Y+14
 2402 00a4 4F85      		ldd r20,Y+15
 2403 00a6 5889      		ldd r21,Y+16
 2404 00a8 6981      		ldd r22,Y+1
 2405 00aa 7A81      		ldd r23,Y+2
 2406 00ac 8B81      		ldd r24,Y+3
 2407 00ae 9C81      		ldd r25,Y+4
 2408 00b0 0E94 0000 		call __mulsf3
 2409               	.LVL153:
 2410 00b4 9B01      		movw r18,r22
 2411 00b6 AC01      		movw r20,r24
 2412 00b8 C701      		movw r24,r14
 2413 00ba B601      		movw r22,r12
 2414 00bc 0E94 0000 		call __subsf3
 2415               	.LVL154:
 2416 00c0 2B01      		movw r4,r22
 2417 00c2 3C01      		movw r6,r24
 2418 00c4 F801      		movw r30,r16
 2419 00c6 6083      		st Z,r22
 2420 00c8 7183      		std Z+1,r23
 2421 00ca 8283      		std Z+2,r24
 2422 00cc 9383      		std Z+3,r25
 259:../src/matrix_utils.c **** 	(*DST)[0][2] = (*A)[0][1]*(*A)[1][2] - (*A)[0][2]*(*A)[1][1];
 2423               		.loc 1 259 0
 2424 00ce AD8D      		ldd r26,Y+29
 2425 00d0 BE8D      		ldd r27,Y+30
 2426 00d2 1896      		adiw r26,8
 2427 00d4 CD90      		ld r12,X+
 2428 00d6 DD90      		ld r13,X+
 2429 00d8 ED90      		ld r14,X+
 2430 00da FC90      		ld r15,X
 2431 00dc 1B97      		sbiw r26,8+3
 2432 00de A701      		movw r20,r14
 2433 00e0 9601      		movw r18,r12
 2434 00e2 6D85      		ldd r22,Y+13
 2435 00e4 7E85      		ldd r23,Y+14
 2436 00e6 8F85      		ldd r24,Y+15
 2437 00e8 9889      		ldd r25,Y+16
 2438 00ea 0E94 0000 		call __mulsf3
 2439               	.LVL155:
 2440 00ee 4B01      		movw r8,r22
 2441 00f0 5C01      		movw r10,r24
 2442 00f2 ED8D      		ldd r30,Y+29
 2443 00f4 FE8D      		ldd r31,Y+30
 2444 00f6 2481      		ldd r18,Z+4
 2445 00f8 3581      		ldd r19,Z+5
 2446 00fa 4681      		ldd r20,Z+6
 2447 00fc 5781      		ldd r21,Z+7
 2448 00fe 6D81      		ldd r22,Y+5
 2449 0100 7E81      		ldd r23,Y+6
 2450 0102 8F81      		ldd r24,Y+7
 2451 0104 9885      		ldd r25,Y+8
 2452 0106 0E94 0000 		call __mulsf3
 2453               	.LVL156:
 2454 010a 9B01      		movw r18,r22
 2455 010c AC01      		movw r20,r24
 2456 010e C501      		movw r24,r10
 2457 0110 B401      		movw r22,r8
 2458 0112 0E94 0000 		call __subsf3
 2459               	.LVL157:
 2460 0116 D801      		movw r26,r16
 2461 0118 1496      		adiw r26,4
 2462 011a 6D93      		st X+,r22
 2463 011c 7D93      		st X+,r23
 2464 011e 8D93      		st X+,r24
 2465 0120 9C93      		st X,r25
 2466 0122 1797      		sbiw r26,4+3
 260:../src/matrix_utils.c **** 	(*DST)[1][0] = (*A)[1][2]*(*A)[2][0] - (*A)[1][0]*(*A)[2][2];
 2467               		.loc 1 260 0
 2468 0124 AD8D      		ldd r26,Y+29
 2469 0126 BE8D      		ldd r27,Y+30
 2470 0128 1496      		adiw r26,4
 2471 012a 8D91      		ld r24,X+
 2472 012c 9D91      		ld r25,X+
 2473 012e 0D90      		ld __tmp_reg__,X+
 2474 0130 BC91      		ld r27,X
 2475 0132 A02D      		mov r26,__tmp_reg__
 2476 0134 898B      		std Y+17,r24
 2477 0136 9A8B      		std Y+18,r25
 2478 0138 AB8B      		std Y+19,r26
 2479 013a BC8B      		std Y+20,r27
 2480 013c 9C01      		movw r18,r24
 2481 013e AD01      		movw r20,r26
 2482 0140 6981      		ldd r22,Y+1
 2483 0142 7A81      		ldd r23,Y+2
 2484 0144 8B81      		ldd r24,Y+3
 2485 0146 9C81      		ldd r25,Y+4
 2486 0148 0E94 0000 		call __mulsf3
 2487               	.LVL158:
 2488 014c 4B01      		movw r8,r22
 2489 014e 5C01      		movw r10,r24
 2490 0150 A701      		movw r20,r14
 2491 0152 9601      		movw r18,r12
 2492 0154 6985      		ldd r22,Y+9
 2493 0156 7A85      		ldd r23,Y+10
 2494 0158 8B85      		ldd r24,Y+11
 2495 015a 9C85      		ldd r25,Y+12
 2496 015c 0E94 0000 		call __mulsf3
 2497               	.LVL159:
 2498 0160 9B01      		movw r18,r22
 2499 0162 AC01      		movw r20,r24
 2500 0164 C501      		movw r24,r10
 2501 0166 B401      		movw r22,r8
 2502 0168 0E94 0000 		call __subsf3
 2503               	.LVL160:
 2504 016c F801      		movw r30,r16
 2505 016e 6087      		std Z+8,r22
 2506 0170 7187      		std Z+9,r23
 2507 0172 8287      		std Z+10,r24
 2508 0174 9387      		std Z+11,r25
 261:../src/matrix_utils.c **** 	(*DST)[1][1] = (*A)[0][0]*(*A)[2][2] - (*A)[0][2]*(*A)[2][0];
 2509               		.loc 1 261 0
 2510 0176 AD8D      		ldd r26,Y+29
 2511 0178 BE8D      		ldd r27,Y+30
 2512 017a 5896      		adiw r26,24
 2513 017c 8D91      		ld r24,X+
 2514 017e 9D91      		ld r25,X+
 2515 0180 0D90      		ld __tmp_reg__,X+
 2516 0182 BC91      		ld r27,X
 2517 0184 A02D      		mov r26,__tmp_reg__
 2518 0186 8987      		std Y+9,r24
 2519 0188 9A87      		std Y+10,r25
 2520 018a AB87      		std Y+11,r26
 2521 018c BC87      		std Y+12,r27
 2522 018e 9C01      		movw r18,r24
 2523 0190 AD01      		movw r20,r26
 2524 0192 6981      		ldd r22,Y+1
 2525 0194 7A81      		ldd r23,Y+2
 2526 0196 8B81      		ldd r24,Y+3
 2527 0198 9C81      		ldd r25,Y+4
 2528 019a 0E94 0000 		call __mulsf3
 2529               	.LVL161:
 2530 019e 6B01      		movw r12,r22
 2531 01a0 7C01      		movw r14,r24
 2532 01a2 ED8D      		ldd r30,Y+29
 2533 01a4 FE8D      		ldd r31,Y+30
 2534 01a6 2485      		ldd r18,Z+12
 2535 01a8 3585      		ldd r19,Z+13
 2536 01aa 4685      		ldd r20,Z+14
 2537 01ac 5785      		ldd r21,Z+15
 2538 01ae 6D81      		ldd r22,Y+5
 2539 01b0 7E81      		ldd r23,Y+6
 2540 01b2 8F81      		ldd r24,Y+7
 2541 01b4 9885      		ldd r25,Y+8
 2542 01b6 0E94 0000 		call __mulsf3
 2543               	.LVL162:
 2544 01ba 9B01      		movw r18,r22
 2545 01bc AC01      		movw r20,r24
 2546 01be C701      		movw r24,r14
 2547 01c0 B601      		movw r22,r12
 2548 01c2 0E94 0000 		call __subsf3
 2549               	.LVL163:
 2550 01c6 698F      		std Y+25,r22
 2551 01c8 7A8F      		std Y+26,r23
 2552 01ca 8B8F      		std Y+27,r24
 2553 01cc 9C8F      		std Y+28,r25
 2554 01ce D801      		movw r26,r16
 2555 01d0 1C96      		adiw r26,12
 2556 01d2 6D93      		st X+,r22
 2557 01d4 7D93      		st X+,r23
 2558 01d6 8D93      		st X+,r24
 2559 01d8 9C93      		st X,r25
 2560 01da 1F97      		sbiw r26,12+3
 262:../src/matrix_utils.c **** 	(*DST)[1][2] = (*A)[0][2]*(*A)[1][0] - (*A)[0][0]*(*A)[1][2];
 2561               		.loc 1 262 0
 2562 01dc ED8D      		ldd r30,Y+29
 2563 01de FE8D      		ldd r31,Y+30
 2564 01e0 8080      		ld r8,Z
 2565 01e2 9180      		ldd r9,Z+1
 2566 01e4 A280      		ldd r10,Z+2
 2567 01e6 B380      		ldd r11,Z+3
 2568 01e8 8085      		ldd r24,Z+8
 2569 01ea 9185      		ldd r25,Z+9
 2570 01ec A285      		ldd r26,Z+10
 2571 01ee B385      		ldd r27,Z+11
 2572 01f0 8D8B      		std Y+21,r24
 2573 01f2 9E8B      		std Y+22,r25
 2574 01f4 AF8B      		std Y+23,r26
 2575 01f6 B88F      		std Y+24,r27
 2576 01f8 A501      		movw r20,r10
 2577 01fa 9401      		movw r18,r8
 2578 01fc 6D81      		ldd r22,Y+5
 2579 01fe 7E81      		ldd r23,Y+6
 2580 0200 8F81      		ldd r24,Y+7
 2581 0202 9885      		ldd r25,Y+8
 2582 0204 0E94 0000 		call __mulsf3
 2583               	.LVL164:
 2584 0208 6B01      		movw r12,r22
 2585 020a 7C01      		movw r14,r24
 2586 020c 2D89      		ldd r18,Y+21
 2587 020e 3E89      		ldd r19,Y+22
 2588 0210 4F89      		ldd r20,Y+23
 2589 0212 588D      		ldd r21,Y+24
 2590 0214 6985      		ldd r22,Y+9
 2591 0216 7A85      		ldd r23,Y+10
 2592 0218 8B85      		ldd r24,Y+11
 2593 021a 9C85      		ldd r25,Y+12
 2594 021c 0E94 0000 		call __mulsf3
 2595               	.LVL165:
 2596 0220 9B01      		movw r18,r22
 2597 0222 AC01      		movw r20,r24
 2598 0224 C701      		movw r24,r14
 2599 0226 B601      		movw r22,r12
 2600 0228 0E94 0000 		call __subsf3
 2601               	.LVL166:
 2602 022c F801      		movw r30,r16
 2603 022e 608B      		std Z+16,r22
 2604 0230 718B      		std Z+17,r23
 2605 0232 828B      		std Z+18,r24
 2606 0234 938B      		std Z+19,r25
 263:../src/matrix_utils.c **** 	(*DST)[2][0] = (*A)[1][0]*(*A)[2][1] - (*A)[1][1]*(*A)[2][0];
 2607               		.loc 1 263 0
 2608 0236 AD8D      		ldd r26,Y+29
 2609 0238 BE8D      		ldd r27,Y+30
 2610 023a 1C96      		adiw r26,12
 2611 023c 8D91      		ld r24,X+
 2612 023e 9D91      		ld r25,X+
 2613 0240 0D90      		ld __tmp_reg__,X+
 2614 0242 BC91      		ld r27,X
 2615 0244 A02D      		mov r26,__tmp_reg__
 2616 0246 8D83      		std Y+5,r24
 2617 0248 9E83      		std Y+6,r25
 2618 024a AF83      		std Y+7,r26
 2619 024c B887      		std Y+8,r27
 2620 024e 9C01      		movw r18,r24
 2621 0250 AD01      		movw r20,r26
 2622 0252 6D89      		ldd r22,Y+21
 2623 0254 7E89      		ldd r23,Y+22
 2624 0256 8F89      		ldd r24,Y+23
 2625 0258 988D      		ldd r25,Y+24
 2626 025a 0E94 0000 		call __mulsf3
 2627               	.LVL167:
 2628 025e 6B01      		movw r12,r22
 2629 0260 7C01      		movw r14,r24
 2630 0262 A501      		movw r20,r10
 2631 0264 9401      		movw r18,r8
 2632 0266 6981      		ldd r22,Y+1
 2633 0268 7A81      		ldd r23,Y+2
 2634 026a 8B81      		ldd r24,Y+3
 2635 026c 9C81      		ldd r25,Y+4
 2636 026e 0E94 0000 		call __mulsf3
 2637               	.LVL168:
 2638 0272 9B01      		movw r18,r22
 2639 0274 AC01      		movw r20,r24
 2640 0276 C701      		movw r24,r14
 2641 0278 B601      		movw r22,r12
 2642 027a 0E94 0000 		call __subsf3
 2643               	.LVL169:
 2644 027e F801      		movw r30,r16
 2645 0280 648B      		std Z+20,r22
 2646 0282 758B      		std Z+21,r23
 2647 0284 868B      		std Z+22,r24
 2648 0286 978B      		std Z+23,r25
 264:../src/matrix_utils.c **** 	(*DST)[2][1] = (*A)[0][1]*(*A)[2][0] - (*A)[0][0]*(*A)[2][1];
 2649               		.loc 1 264 0
 2650 0288 AD8D      		ldd r26,Y+29
 2651 028a BE8D      		ldd r27,Y+30
 2652 028c 5096      		adiw r26,16
 2653 028e CD90      		ld r12,X+
 2654 0290 DD90      		ld r13,X+
 2655 0292 ED90      		ld r14,X+
 2656 0294 FC90      		ld r15,X
 2657 0296 5397      		sbiw r26,16+3
 2658 0298 2D81      		ldd r18,Y+5
 2659 029a 3E81      		ldd r19,Y+6
 2660 029c 4F81      		ldd r20,Y+7
 2661 029e 5885      		ldd r21,Y+8
 2662 02a0 6D85      		ldd r22,Y+13
 2663 02a2 7E85      		ldd r23,Y+14
 2664 02a4 8F85      		ldd r24,Y+15
 2665 02a6 9889      		ldd r25,Y+16
 2666 02a8 0E94 0000 		call __mulsf3
 2667               	.LVL170:
 2668 02ac 6983      		std Y+1,r22
 2669 02ae 7A83      		std Y+2,r23
 2670 02b0 8B83      		std Y+3,r24
 2671 02b2 9C83      		std Y+4,r25
 2672 02b4 A701      		movw r20,r14
 2673 02b6 9601      		movw r18,r12
 2674 02b8 6985      		ldd r22,Y+9
 2675 02ba 7A85      		ldd r23,Y+10
 2676 02bc 8B85      		ldd r24,Y+11
 2677 02be 9C85      		ldd r25,Y+12
 2678 02c0 0E94 0000 		call __mulsf3
 2679               	.LVL171:
 2680 02c4 9B01      		movw r18,r22
 2681 02c6 AC01      		movw r20,r24
 2682 02c8 6981      		ldd r22,Y+1
 2683 02ca 7A81      		ldd r23,Y+2
 2684 02cc 8B81      		ldd r24,Y+3
 2685 02ce 9C81      		ldd r25,Y+4
 2686 02d0 0E94 0000 		call __subsf3
 2687               	.LVL172:
 2688 02d4 6983      		std Y+1,r22
 2689 02d6 7A83      		std Y+2,r23
 2690 02d8 8B83      		std Y+3,r24
 2691 02da 9C83      		std Y+4,r25
 2692 02dc F801      		movw r30,r16
 2693 02de 608F      		std Z+24,r22
 2694 02e0 718F      		std Z+25,r23
 2695 02e2 828F      		std Z+26,r24
 2696 02e4 938F      		std Z+27,r25
 265:../src/matrix_utils.c **** 	(*DST)[2][2] = (*A)[0][0]*(*A)[1][1] - (*A)[0][1]*(*A)[1][0];
 2697               		.loc 1 265 0
 2698 02e6 AD8D      		ldd r26,Y+29
 2699 02e8 BE8D      		ldd r27,Y+30
 2700 02ea 5896      		adiw r26,24
 2701 02ec 2D91      		ld r18,X+
 2702 02ee 3D91      		ld r19,X+
 2703 02f0 4D91      		ld r20,X+
 2704 02f2 5C91      		ld r21,X
 2705 02f4 5B97      		sbiw r26,24+3
 2706 02f6 6989      		ldd r22,Y+17
 2707 02f8 7A89      		ldd r23,Y+18
 2708 02fa 8B89      		ldd r24,Y+19
 2709 02fc 9C89      		ldd r25,Y+20
 2710 02fe 0E94 0000 		call __mulsf3
 2711               	.LVL173:
 2712 0302 6987      		std Y+9,r22
 2713 0304 7A87      		std Y+10,r23
 2714 0306 8B87      		std Y+11,r24
 2715 0308 9C87      		std Y+12,r25
 2716 030a A501      		movw r20,r10
 2717 030c 9401      		movw r18,r8
 2718 030e 6D85      		ldd r22,Y+13
 2719 0310 7E85      		ldd r23,Y+14
 2720 0312 8F85      		ldd r24,Y+15
 2721 0314 9889      		ldd r25,Y+16
 2722 0316 0E94 0000 		call __mulsf3
 2723               	.LVL174:
 2724 031a 9B01      		movw r18,r22
 2725 031c AC01      		movw r20,r24
 2726 031e 6985      		ldd r22,Y+9
 2727 0320 7A85      		ldd r23,Y+10
 2728 0322 8B85      		ldd r24,Y+11
 2729 0324 9C85      		ldd r25,Y+12
 2730 0326 0E94 0000 		call __subsf3
 2731               	.LVL175:
 2732 032a F801      		movw r30,r16
 2733 032c 648F      		std Z+28,r22
 2734 032e 758F      		std Z+29,r23
 2735 0330 868F      		std Z+30,r24
 2736 0332 978F      		std Z+31,r25
 266:../src/matrix_utils.c **** 
 2737               		.loc 1 266 0
 2738 0334 A701      		movw r20,r14
 2739 0336 9601      		movw r18,r12
 2740 0338 C501      		movw r24,r10
 2741 033a B401      		movw r22,r8
 2742 033c 0E94 0000 		call __mulsf3
 2743               	.LVL176:
 2744 0340 6B01      		movw r12,r22
 2745 0342 7C01      		movw r14,r24
 2746 0344 2D81      		ldd r18,Y+5
 2747 0346 3E81      		ldd r19,Y+6
 2748 0348 4F81      		ldd r20,Y+7
 2749 034a 5885      		ldd r21,Y+8
 2750 034c 6989      		ldd r22,Y+17
 2751 034e 7A89      		ldd r23,Y+18
 2752 0350 8B89      		ldd r24,Y+19
 2753 0352 9C89      		ldd r25,Y+20
 2754 0354 0E94 0000 		call __mulsf3
 2755               	.LVL177:
 2756 0358 9B01      		movw r18,r22
 2757 035a AC01      		movw r20,r24
 2758 035c C701      		movw r24,r14
 2759 035e B601      		movw r22,r12
 2760 0360 0E94 0000 		call __subsf3
 2761               	.LVL178:
 2762 0364 D801      		movw r26,r16
 2763 0366 9096      		adiw r26,32
 2764 0368 6D93      		st X+,r22
 2765 036a 7D93      		st X+,r23
 2766 036c 8D93      		st X+,r24
 2767 036e 9C93      		st X,r25
 2768 0370 9397      		sbiw r26,32+3
 268:../src/matrix_utils.c **** 
 2769               		.loc 1 268 0
 2770 0372 A501      		movw r20,r10
 2771 0374 9401      		movw r18,r8
 2772 0376 C301      		movw r24,r6
 2773 0378 B201      		movw r22,r4
 2774 037a 0E94 0000 		call __mulsf3
 2775               	.LVL179:
 2776 037e 6B01      		movw r12,r22
 2777 0380 7C01      		movw r14,r24
 2778 0382 298D      		ldd r18,Y+25
 2779 0384 3A8D      		ldd r19,Y+26
 2780 0386 4B8D      		ldd r20,Y+27
 2781 0388 5C8D      		ldd r21,Y+28
 2782 038a 6989      		ldd r22,Y+17
 2783 038c 7A89      		ldd r23,Y+18
 2784 038e 8B89      		ldd r24,Y+19
 2785 0390 9C89      		ldd r25,Y+20
 2786 0392 0E94 0000 		call __mulsf3
 2787               	.LVL180:
 2788 0396 9B01      		movw r18,r22
 2789 0398 AC01      		movw r20,r24
 2790 039a C701      		movw r24,r14
 2791 039c B601      		movw r22,r12
 2792 039e 0E94 0000 		call __addsf3
 2793               	.LVL181:
 2794 03a2 6B01      		movw r12,r22
 2795 03a4 7C01      		movw r14,r24
 2796 03a6 2981      		ldd r18,Y+1
 2797 03a8 3A81      		ldd r19,Y+2
 2798 03aa 4B81      		ldd r20,Y+3
 2799 03ac 5C81      		ldd r21,Y+4
 2800 03ae 6D89      		ldd r22,Y+21
 2801 03b0 7E89      		ldd r23,Y+22
 2802 03b2 8F89      		ldd r24,Y+23
 2803 03b4 988D      		ldd r25,Y+24
 2804 03b6 0E94 0000 		call __mulsf3
 2805               	.LVL182:
 2806 03ba 9B01      		movw r18,r22
 2807 03bc AC01      		movw r20,r24
 2808 03be C701      		movw r24,r14
 2809 03c0 B601      		movw r22,r12
 2810 03c2 0E94 0000 		call __addsf3
 2811               	.LVL183:
 2812 03c6 6B01      		movw r12,r22
 2813 03c8 7C01      		movw r14,r24
 2814               	.LVL184:
 2815 03ca 5801      		movw r10,r16
 2816 03cc B4E2      		ldi r27,36
 2817 03ce AB0E      		add r10,r27
 2818 03d0 B11C      		adc r11,__zero_reg__
 2819               	.LVL185:
 2820               	.L88:
 257:../src/matrix_utils.c **** 	(*DST)[0][0] = (*A)[1][1]*(*A)[2][2] - (*A)[1][2]*(*A)[2][1];
 2821               		.loc 1 257 0
 2822 03d2 4801      		movw r8,r16
 2823 03d4 1982      		std Y+1,__zero_reg__
 2824               	.LVL186:
 2825               	.L91:
 2826               	.LBB90:
 2827               	.LBB91:
 272:../src/matrix_utils.c **** 		}
 2828               		.loc 1 272 0 discriminator 3
 2829 03d6 A701      		movw r20,r14
 2830 03d8 9601      		movw r18,r12
 2831 03da C301      		movw r24,r6
 2832 03dc B201      		movw r22,r4
 2833 03de 0E94 0000 		call __divsf3
 2834               	.LVL187:
 2835 03e2 D401      		movw r26,r8
 2836 03e4 6D93      		st X+,r22
 2837 03e6 7D93      		st X+,r23
 2838 03e8 8D93      		st X+,r24
 2839 03ea 9D93      		st X+,r25
 2840 03ec 4D01      		movw r8,r26
 271:../src/matrix_utils.c **** 			(*DST)[i][j] = (*DST)[i][j]/determinant;
 2841               		.loc 1 271 0 discriminator 3
 2842 03ee B981      		ldd r27,Y+1
 2843 03f0 BF5F      		subi r27,lo8(-(1))
 2844 03f2 B983      		std Y+1,r27
 2845               	.LVL188:
 2846 03f4 B330      		cpi r27,lo8(3)
 2847 03f6 01F0      		breq .L92
 2848 03f8 F401      		movw r30,r8
 2849 03fa 4080      		ld r4,Z
 2850 03fc 5180      		ldd r5,Z+1
 2851 03fe 6280      		ldd r6,Z+2
 2852 0400 7380      		ldd r7,Z+3
 2853 0402 00C0      		rjmp .L91
 2854               	.L92:
 2855 0404 045F      		subi r16,-12
 2856 0406 1F4F      		sbci r17,-1
 2857               	.LBE91:
 270:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 2858               		.loc 1 270 0 discriminator 2
 2859 0408 0A15      		cp r16,r10
 2860 040a 1B05      		cpc r17,r11
 2861 040c 01F0      		breq .L87
 2862 040e F801      		movw r30,r16
 2863 0410 4080      		ld r4,Z
 2864 0412 5180      		ldd r5,Z+1
 2865 0414 6280      		ldd r6,Z+2
 2866 0416 7380      		ldd r7,Z+3
 2867 0418 00C0      		rjmp .L88
 2868               	.L87:
 2869               	/* epilogue start */
 2870               	.LBE90:
 275:../src/matrix_utils.c **** 
 2871               		.loc 1 275 0
 2872 041a 6E96      		adiw r28,30
 2873 041c CDBF      		out __SP_L__,r28
 2874 041e DEBF      		out __SP_H__,r29
 2875 0420 DF91      		pop r29
 2876 0422 CF91      		pop r28
 2877 0424 1F91      		pop r17
 2878 0426 0F91      		pop r16
 2879 0428 FF90      		pop r15
 2880 042a EF90      		pop r14
 2881 042c DF90      		pop r13
 2882 042e CF90      		pop r12
 2883               	.LVL189:
 2884 0430 BF90      		pop r11
 2885 0432 AF90      		pop r10
 2886               	.LVL190:
 2887 0434 9F90      		pop r9
 2888 0436 8F90      		pop r8
 2889 0438 7F90      		pop r7
 2890 043a 6F90      		pop r6
 2891 043c 5F90      		pop r5
 2892 043e 4F90      		pop r4
 2893 0440 0895      		ret
 2894               		.cfi_endproc
 2895               	.LFE44:
 2897               		.section	.text.matrixInplaceInverse,"ax",@progbits
 2898               	.global	matrixInplaceInverse
 2900               	matrixInplaceInverse:
 2901               	.LFB45:
 277:../src/matrix_utils.c **** 	Matrix tmp;
 2902               		.loc 1 277 0
 2903               		.cfi_startproc
 2904               	.LVL191:
 2905 0000 2F92      		push r2
 2906               	.LCFI184:
 2907               		.cfi_def_cfa_offset 4
 2908               		.cfi_offset 2, -3
 2909 0002 3F92      		push r3
 2910               	.LCFI185:
 2911               		.cfi_def_cfa_offset 5
 2912               		.cfi_offset 3, -4
 2913 0004 4F92      		push r4
 2914               	.LCFI186:
 2915               		.cfi_def_cfa_offset 6
 2916               		.cfi_offset 4, -5
 2917 0006 5F92      		push r5
 2918               	.LCFI187:
 2919               		.cfi_def_cfa_offset 7
 2920               		.cfi_offset 5, -6
 2921 0008 6F92      		push r6
 2922               	.LCFI188:
 2923               		.cfi_def_cfa_offset 8
 2924               		.cfi_offset 6, -7
 2925 000a 7F92      		push r7
 2926               	.LCFI189:
 2927               		.cfi_def_cfa_offset 9
 2928               		.cfi_offset 7, -8
 2929 000c 8F92      		push r8
 2930               	.LCFI190:
 2931               		.cfi_def_cfa_offset 10
 2932               		.cfi_offset 8, -9
 2933 000e 9F92      		push r9
 2934               	.LCFI191:
 2935               		.cfi_def_cfa_offset 11
 2936               		.cfi_offset 9, -10
 2937 0010 AF92      		push r10
 2938               	.LCFI192:
 2939               		.cfi_def_cfa_offset 12
 2940               		.cfi_offset 10, -11
 2941 0012 BF92      		push r11
 2942               	.LCFI193:
 2943               		.cfi_def_cfa_offset 13
 2944               		.cfi_offset 11, -12
 2945 0014 CF92      		push r12
 2946               	.LCFI194:
 2947               		.cfi_def_cfa_offset 14
 2948               		.cfi_offset 12, -13
 2949 0016 DF92      		push r13
 2950               	.LCFI195:
 2951               		.cfi_def_cfa_offset 15
 2952               		.cfi_offset 13, -14
 2953 0018 EF92      		push r14
 2954               	.LCFI196:
 2955               		.cfi_def_cfa_offset 16
 2956               		.cfi_offset 14, -15
 2957 001a FF92      		push r15
 2958               	.LCFI197:
 2959               		.cfi_def_cfa_offset 17
 2960               		.cfi_offset 15, -16
 2961 001c 0F93      		push r16
 2962               	.LCFI198:
 2963               		.cfi_def_cfa_offset 18
 2964               		.cfi_offset 16, -17
 2965 001e 1F93      		push r17
 2966               	.LCFI199:
 2967               		.cfi_def_cfa_offset 19
 2968               		.cfi_offset 17, -18
 2969 0020 CF93      		push r28
 2970               	.LCFI200:
 2971               		.cfi_def_cfa_offset 20
 2972               		.cfi_offset 28, -19
 2973 0022 DF93      		push r29
 2974               	.LCFI201:
 2975               		.cfi_def_cfa_offset 21
 2976               		.cfi_offset 29, -20
 2977 0024 CDB7      		in r28,__SP_L__
 2978 0026 DEB7      		in r29,__SP_H__
 2979               	.LCFI202:
 2980               		.cfi_def_cfa_register 28
 2981 0028 C454      		subi r28,68
 2982 002a D109      		sbc r29,__zero_reg__
 2983               	.LCFI203:
 2984               		.cfi_def_cfa_offset 89
 2985 002c CDBF      		out __SP_L__,r28
 2986 002e DEBF      		out __SP_H__,r29
 2987               	/* prologue: function */
 2988               	/* frame size = 68 */
 2989               	/* stack size = 86 */
 2990               	.L__stack_usage = 86
 2991 0030 1C01      		movw r2,r24
 2992               	.LVL192:
 2993 0032 8C01      		movw r16,r24
 2994 0034 9E01      		movw r18,r28
 2995 0036 2F5F      		subi r18,-1
 2996 0038 3F4F      		sbci r19,-1
 2997 003a BE01      		movw r22,r28
 2998 003c 6B5D      		subi r22,-37
 2999 003e 7F4F      		sbci r23,-1
 277:../src/matrix_utils.c **** 	Matrix tmp;
 3000               		.loc 1 277 0
 3001 0040 AC01      		movw r20,r24
 3002               	.LVL193:
 3003               	.L94:
 3004 0042 D901      		movw r26,r18
 3005 0044 FA01      		movw r30,r20
 3006 0046 83E0      		ldi r24,lo8(3)
 3007               	.LVL194:
 3008               	.L95:
 3009               	.LBB92:
 3010               	.LBB93:
 3011               	.LBB94:
 3012               		.loc 1 315 0
 3013 0048 C190      		ld r12,Z+
 3014 004a D190      		ld r13,Z+
 3015 004c E190      		ld r14,Z+
 3016 004e F190      		ld r15,Z+
 3017 0050 CD92      		st X+,r12
 3018 0052 DD92      		st X+,r13
 3019 0054 ED92      		st X+,r14
 3020 0056 FD92      		st X+,r15
 3021               	.LVL195:
 3022 0058 8150      		subi r24,lo8(-(-1))
 3023               	.LVL196:
 314:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j];
 3024               		.loc 1 314 0
 3025 005a 01F4      		brne .L95
 3026 005c 445F      		subi r20,-12
 3027 005e 5F4F      		sbci r21,-1
 3028 0060 245F      		subi r18,-12
 3029 0062 3F4F      		sbci r19,-1
 3030               	.LBE94:
 313:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 3031               		.loc 1 313 0
 3032 0064 2617      		cp r18,r22
 3033 0066 3707      		cpc r19,r23
 3034 0068 01F4      		brne .L94
 3035               	.LVL197:
 3036               	.LBE93:
 3037               	.LBE92:
 281:../src/matrix_utils.c **** 	(*A)[0][1] = tmp[0][2]*tmp[2][1] - tmp[0][1]*tmp[2][2];
 3038               		.loc 1 281 0
 3039 006a 8989      		ldd r24,Y+17
 3040 006c 9A89      		ldd r25,Y+18
 3041 006e AB89      		ldd r26,Y+19
 3042 0070 BC89      		ldd r27,Y+20
 3043 0072 89AB      		std Y+49,r24
 3044 0074 9AAB      		std Y+50,r25
 3045 0076 ABAB      		std Y+51,r26
 3046 0078 BCAB      		std Y+52,r27
 3047 007a 49A0      		ldd r4,Y+33
 3048 007c 5AA0      		ldd r5,Y+34
 3049 007e 6BA0      		ldd r6,Y+35
 3050 0080 7CA0      		ldd r7,Y+36
 3051 0082 8D89      		ldd r24,Y+21
 3052 0084 9E89      		ldd r25,Y+22
 3053 0086 AF89      		ldd r26,Y+23
 3054 0088 B88D      		ldd r27,Y+24
 3055 008a 8DA3      		std Y+37,r24
 3056 008c 9EA3      		std Y+38,r25
 3057 008e AFA3      		std Y+39,r26
 3058 0090 B8A7      		std Y+40,r27
 3059 0092 8D8D      		ldd r24,Y+29
 3060 0094 9E8D      		ldd r25,Y+30
 3061 0096 AF8D      		ldd r26,Y+31
 3062 0098 B8A1      		ldd r27,Y+32
 3063 009a 8DAB      		std Y+53,r24
 3064 009c 9EAB      		std Y+54,r25
 3065 009e AFAB      		std Y+55,r26
 3066 00a0 B8AF      		std Y+56,r27
 3067 00a2 A301      		movw r20,r6
 3068 00a4 9201      		movw r18,r4
 3069 00a6 69A9      		ldd r22,Y+49
 3070 00a8 7AA9      		ldd r23,Y+50
 3071 00aa 8BA9      		ldd r24,Y+51
 3072 00ac 9CA9      		ldd r25,Y+52
 3073 00ae 0E94 0000 		call __mulsf3
 3074               	.LVL198:
 3075 00b2 6B01      		movw r12,r22
 3076 00b4 7C01      		movw r14,r24
 3077 00b6 2DA9      		ldd r18,Y+53
 3078 00b8 3EA9      		ldd r19,Y+54
 3079 00ba 4FA9      		ldd r20,Y+55
 3080 00bc 58AD      		ldd r21,Y+56
 3081 00be 6DA1      		ldd r22,Y+37
 3082 00c0 7EA1      		ldd r23,Y+38
 3083 00c2 8FA1      		ldd r24,Y+39
 3084 00c4 98A5      		ldd r25,Y+40
 3085 00c6 0E94 0000 		call __mulsf3
 3086               	.LVL199:
 3087 00ca 9B01      		movw r18,r22
 3088 00cc AC01      		movw r20,r24
 3089 00ce C701      		movw r24,r14
 3090 00d0 B601      		movw r22,r12
 3091 00d2 0E94 0000 		call __subsf3
 3092               	.LVL200:
 3093 00d6 6B01      		movw r12,r22
 3094 00d8 7C01      		movw r14,r24
 3095 00da D101      		movw r26,r2
 3096 00dc 6D93      		st X+,r22
 3097 00de 7D93      		st X+,r23
 3098 00e0 8D93      		st X+,r24
 3099 00e2 9C93      		st X,r25
 3100 00e4 1397      		sbiw r26,3
 282:../src/matrix_utils.c **** 	(*A)[0][2] = tmp[0][1]*tmp[1][2] - tmp[0][2]*tmp[1][1];
 3101               		.loc 1 282 0
 3102 00e6 8985      		ldd r24,Y+9
 3103 00e8 9A85      		ldd r25,Y+10
 3104 00ea AB85      		ldd r26,Y+11
 3105 00ec BC85      		ldd r27,Y+12
 3106 00ee 89A7      		std Y+41,r24
 3107 00f0 9AA7      		std Y+42,r25
 3108 00f2 ABA7      		std Y+43,r26
 3109 00f4 BCA7      		std Y+44,r27
 3110 00f6 8D81      		ldd r24,Y+5
 3111 00f8 9E81      		ldd r25,Y+6
 3112 00fa AF81      		ldd r26,Y+7
 3113 00fc B885      		ldd r27,Y+8
 3114 00fe 8DA7      		std Y+45,r24
 3115 0100 9EA7      		std Y+46,r25
 3116 0102 AFA7      		std Y+47,r26
 3117 0104 B8AB      		std Y+48,r27
 3118 0106 29A5      		ldd r18,Y+41
 3119 0108 3AA5      		ldd r19,Y+42
 3120 010a 4BA5      		ldd r20,Y+43
 3121 010c 5CA5      		ldd r21,Y+44
 3122 010e 6DA9      		ldd r22,Y+53
 3123 0110 7EA9      		ldd r23,Y+54
 3124 0112 8FA9      		ldd r24,Y+55
 3125 0114 98AD      		ldd r25,Y+56
 3126 0116 0E94 0000 		call __mulsf3
 3127               	.LVL201:
 3128 011a 4B01      		movw r8,r22
 3129 011c 5C01      		movw r10,r24
 3130 011e 2DA5      		ldd r18,Y+45
 3131 0120 3EA5      		ldd r19,Y+46
 3132 0122 4FA5      		ldd r20,Y+47
 3133 0124 58A9      		ldd r21,Y+48
 3134 0126 C301      		movw r24,r6
 3135 0128 B201      		movw r22,r4
 3136 012a 0E94 0000 		call __mulsf3
 3137               	.LVL202:
 3138 012e 9B01      		movw r18,r22
 3139 0130 AC01      		movw r20,r24
 3140 0132 C501      		movw r24,r10
 3141 0134 B401      		movw r22,r8
 3142 0136 0E94 0000 		call __subsf3
 3143               	.LVL203:
 3144 013a D101      		movw r26,r2
 3145 013c 1496      		adiw r26,4
 3146 013e 6D93      		st X+,r22
 3147 0140 7D93      		st X+,r23
 3148 0142 8D93      		st X+,r24
 3149 0144 9C93      		st X,r25
 3150 0146 1797      		sbiw r26,4+3
 283:../src/matrix_utils.c **** 	(*A)[1][0] = tmp[1][2]*tmp[2][0] - tmp[1][0]*tmp[2][2];
 3151               		.loc 1 283 0
 3152 0148 2DA5      		ldd r18,Y+45
 3153 014a 3EA5      		ldd r19,Y+46
 3154 014c 4FA5      		ldd r20,Y+47
 3155 014e 58A9      		ldd r21,Y+48
 3156 0150 6DA1      		ldd r22,Y+37
 3157 0152 7EA1      		ldd r23,Y+38
 3158 0154 8FA1      		ldd r24,Y+39
 3159 0156 98A5      		ldd r25,Y+40
 3160 0158 0E94 0000 		call __mulsf3
 3161               	.LVL204:
 3162 015c 4B01      		movw r8,r22
 3163 015e 5C01      		movw r10,r24
 3164 0160 29A5      		ldd r18,Y+41
 3165 0162 3AA5      		ldd r19,Y+42
 3166 0164 4BA5      		ldd r20,Y+43
 3167 0166 5CA5      		ldd r21,Y+44
 3168 0168 69A9      		ldd r22,Y+49
 3169 016a 7AA9      		ldd r23,Y+50
 3170 016c 8BA9      		ldd r24,Y+51
 3171 016e 9CA9      		ldd r25,Y+52
 3172 0170 0E94 0000 		call __mulsf3
 3173               	.LVL205:
 3174 0174 9B01      		movw r18,r22
 3175 0176 AC01      		movw r20,r24
 3176 0178 C501      		movw r24,r10
 3177 017a B401      		movw r22,r8
 3178 017c 0E94 0000 		call __subsf3
 3179               	.LVL206:
 3180 0180 F101      		movw r30,r2
 3181 0182 6087      		std Z+8,r22
 3182 0184 7187      		std Z+9,r23
 3183 0186 8287      		std Z+10,r24
 3184 0188 9387      		std Z+11,r25
 284:../src/matrix_utils.c **** 	(*A)[1][1] = tmp[0][0]*tmp[2][2] - tmp[0][2]*tmp[2][0];
 3185               		.loc 1 284 0
 3186 018a 898D      		ldd r24,Y+25
 3187 018c 9A8D      		ldd r25,Y+26
 3188 018e AB8D      		ldd r26,Y+27
 3189 0190 BC8D      		ldd r27,Y+28
 3190 0192 89AF      		std Y+57,r24
 3191 0194 9AAF      		std Y+58,r25
 3192 0196 ABAF      		std Y+59,r26
 3193 0198 BCAF      		std Y+60,r27
 3194 019a 8D85      		ldd r24,Y+13
 3195 019c 9E85      		ldd r25,Y+14
 3196 019e AF85      		ldd r26,Y+15
 3197 01a0 B889      		ldd r27,Y+16
 3198 01a2 2196      		adiw r28,61-60
 3199 01a4 8CAF      		std Y+60,r24
 3200 01a6 9DAF      		std Y+61,r25
 3201 01a8 AEAF      		std Y+62,r26
 3202 01aa BFAF      		std Y+63,r27
 3203 01ac 2197      		sbiw r28,61-60
 3204 01ae 29AD      		ldd r18,Y+57
 3205 01b0 3AAD      		ldd r19,Y+58
 3206 01b2 4BAD      		ldd r20,Y+59
 3207 01b4 5CAD      		ldd r21,Y+60
 3208 01b6 6DA1      		ldd r22,Y+37
 3209 01b8 7EA1      		ldd r23,Y+38
 3210 01ba 8FA1      		ldd r24,Y+39
 3211 01bc 98A5      		ldd r25,Y+40
 3212 01be 0E94 0000 		call __mulsf3
 3213               	.LVL207:
 3214 01c2 4B01      		movw r8,r22
 3215 01c4 5C01      		movw r10,r24
 3216 01c6 2196      		adiw r28,61-60
 3217 01c8 2CAD      		ldd r18,Y+60
 3218 01ca 3DAD      		ldd r19,Y+61
 3219 01cc 4EAD      		ldd r20,Y+62
 3220 01ce 5FAD      		ldd r21,Y+63
 3221 01d0 2197      		sbiw r28,61-60
 3222 01d2 C301      		movw r24,r6
 3223 01d4 B201      		movw r22,r4
 3224 01d6 0E94 0000 		call __mulsf3
 3225               	.LVL208:
 3226 01da 9B01      		movw r18,r22
 3227 01dc AC01      		movw r20,r24
 3228 01de C501      		movw r24,r10
 3229 01e0 B401      		movw r22,r8
 3230 01e2 0E94 0000 		call __subsf3
 3231               	.LVL209:
 3232 01e6 2596      		adiw r28,65-60
 3233 01e8 6CAF      		std Y+60,r22
 3234 01ea 7DAF      		std Y+61,r23
 3235 01ec 8EAF      		std Y+62,r24
 3236 01ee 9FAF      		std Y+63,r25
 3237 01f0 2597      		sbiw r28,65-60
 3238 01f2 D101      		movw r26,r2
 3239 01f4 1C96      		adiw r26,12
 3240 01f6 6D93      		st X+,r22
 3241 01f8 7D93      		st X+,r23
 3242 01fa 8D93      		st X+,r24
 3243 01fc 9C93      		st X,r25
 3244 01fe 1F97      		sbiw r26,12+3
 285:../src/matrix_utils.c **** 	(*A)[1][2] = tmp[0][2]*tmp[1][0] - tmp[0][0]*tmp[1][2];
 3245               		.loc 1 285 0
 3246 0200 8980      		ldd r8,Y+1
 3247 0202 9A80      		ldd r9,Y+2
 3248 0204 AB80      		ldd r10,Y+3
 3249 0206 BC80      		ldd r11,Y+4
 3250 0208 A501      		movw r20,r10
 3251 020a 9401      		movw r18,r8
 3252 020c C301      		movw r24,r6
 3253 020e B201      		movw r22,r4
 3254 0210 0E94 0000 		call __mulsf3
 3255               	.LVL210:
 3256 0214 2B01      		movw r4,r22
 3257 0216 3C01      		movw r6,r24
 3258 0218 29AD      		ldd r18,Y+57
 3259 021a 3AAD      		ldd r19,Y+58
 3260 021c 4BAD      		ldd r20,Y+59
 3261 021e 5CAD      		ldd r21,Y+60
 3262 0220 69A5      		ldd r22,Y+41
 3263 0222 7AA5      		ldd r23,Y+42
 3264 0224 8BA5      		ldd r24,Y+43
 3265 0226 9CA5      		ldd r25,Y+44
 3266 0228 0E94 0000 		call __mulsf3
 3267               	.LVL211:
 3268 022c 9B01      		movw r18,r22
 3269 022e AC01      		movw r20,r24
 3270 0230 C301      		movw r24,r6
 3271 0232 B201      		movw r22,r4
 3272 0234 0E94 0000 		call __subsf3
 3273               	.LVL212:
 3274 0238 F101      		movw r30,r2
 3275 023a 608B      		std Z+16,r22
 3276 023c 718B      		std Z+17,r23
 3277 023e 828B      		std Z+18,r24
 3278 0240 938B      		std Z+19,r25
 286:../src/matrix_utils.c **** 	(*A)[2][0] = tmp[1][0]*tmp[2][1] - tmp[1][1]*tmp[2][0];
 3279               		.loc 1 286 0
 3280 0242 2196      		adiw r28,61-60
 3281 0244 2CAD      		ldd r18,Y+60
 3282 0246 3DAD      		ldd r19,Y+61
 3283 0248 4EAD      		ldd r20,Y+62
 3284 024a 5FAD      		ldd r21,Y+63
 3285 024c 2197      		sbiw r28,61-60
 3286 024e 69A5      		ldd r22,Y+41
 3287 0250 7AA5      		ldd r23,Y+42
 3288 0252 8BA5      		ldd r24,Y+43
 3289 0254 9CA5      		ldd r25,Y+44
 3290 0256 0E94 0000 		call __mulsf3
 3291               	.LVL213:
 3292 025a 2B01      		movw r4,r22
 3293 025c 3C01      		movw r6,r24
 3294 025e A501      		movw r20,r10
 3295 0260 9401      		movw r18,r8
 3296 0262 6DA1      		ldd r22,Y+37
 3297 0264 7EA1      		ldd r23,Y+38
 3298 0266 8FA1      		ldd r24,Y+39
 3299 0268 98A5      		ldd r25,Y+40
 3300 026a 0E94 0000 		call __mulsf3
 3301               	.LVL214:
 3302 026e 9B01      		movw r18,r22
 3303 0270 AC01      		movw r20,r24
 3304 0272 C301      		movw r24,r6
 3305 0274 B201      		movw r22,r4
 3306 0276 0E94 0000 		call __subsf3
 3307               	.LVL215:
 3308 027a D101      		movw r26,r2
 3309 027c 5496      		adiw r26,20
 3310 027e 6D93      		st X+,r22
 3311 0280 7D93      		st X+,r23
 3312 0282 8D93      		st X+,r24
 3313 0284 9C93      		st X,r25
 3314 0286 5797      		sbiw r26,20+3
 287:../src/matrix_utils.c **** 	(*A)[2][1] = tmp[0][1]*tmp[2][0] - tmp[0][0]*tmp[2][1];
 3315               		.loc 1 287 0
 3316 0288 2196      		adiw r28,61-60
 3317 028a 2CAD      		ldd r18,Y+60
 3318 028c 3DAD      		ldd r19,Y+61
 3319 028e 4EAD      		ldd r20,Y+62
 3320 0290 5FAD      		ldd r21,Y+63
 3321 0292 2197      		sbiw r28,61-60
 3322 0294 6DA9      		ldd r22,Y+53
 3323 0296 7EA9      		ldd r23,Y+54
 3324 0298 8FA9      		ldd r24,Y+55
 3325 029a 98AD      		ldd r25,Y+56
 3326 029c 0E94 0000 		call __mulsf3
 3327               	.LVL216:
 3328 02a0 2B01      		movw r4,r22
 3329 02a2 3C01      		movw r6,r24
 3330 02a4 29AD      		ldd r18,Y+57
 3331 02a6 3AAD      		ldd r19,Y+58
 3332 02a8 4BAD      		ldd r20,Y+59
 3333 02aa 5CAD      		ldd r21,Y+60
 3334 02ac 69A9      		ldd r22,Y+49
 3335 02ae 7AA9      		ldd r23,Y+50
 3336 02b0 8BA9      		ldd r24,Y+51
 3337 02b2 9CA9      		ldd r25,Y+52
 3338 02b4 0E94 0000 		call __mulsf3
 3339               	.LVL217:
 3340 02b8 9B01      		movw r18,r22
 3341 02ba AC01      		movw r20,r24
 3342 02bc C301      		movw r24,r6
 3343 02be B201      		movw r22,r4
 3344 02c0 0E94 0000 		call __subsf3
 3345               	.LVL218:
 3346 02c4 6DA3      		std Y+37,r22
 3347 02c6 7EA3      		std Y+38,r23
 3348 02c8 8FA3      		std Y+39,r24
 3349 02ca 98A7      		std Y+40,r25
 3350 02cc F101      		movw r30,r2
 3351 02ce 608F      		std Z+24,r22
 3352 02d0 718F      		std Z+25,r23
 3353 02d2 828F      		std Z+26,r24
 3354 02d4 938F      		std Z+27,r25
 288:../src/matrix_utils.c **** 	(*A)[2][2] = tmp[0][0]*tmp[1][1] - tmp[0][1]*tmp[1][0];
 3355               		.loc 1 288 0
 3356 02d6 29AD      		ldd r18,Y+57
 3357 02d8 3AAD      		ldd r19,Y+58
 3358 02da 4BAD      		ldd r20,Y+59
 3359 02dc 5CAD      		ldd r21,Y+60
 3360 02de 6DA5      		ldd r22,Y+45
 3361 02e0 7EA5      		ldd r23,Y+46
 3362 02e2 8FA5      		ldd r24,Y+47
 3363 02e4 98A9      		ldd r25,Y+48
 3364 02e6 0E94 0000 		call __mulsf3
 3365               	.LVL219:
 3366 02ea 2B01      		movw r4,r22
 3367 02ec 3C01      		movw r6,r24
 3368 02ee A501      		movw r20,r10
 3369 02f0 9401      		movw r18,r8
 3370 02f2 6DA9      		ldd r22,Y+53
 3371 02f4 7EA9      		ldd r23,Y+54
 3372 02f6 8FA9      		ldd r24,Y+55
 3373 02f8 98AD      		ldd r25,Y+56
 3374 02fa 0E94 0000 		call __mulsf3
 3375               	.LVL220:
 3376 02fe 9B01      		movw r18,r22
 3377 0300 AC01      		movw r20,r24
 3378 0302 C301      		movw r24,r6
 3379 0304 B201      		movw r22,r4
 3380 0306 0E94 0000 		call __subsf3
 3381               	.LVL221:
 3382 030a D101      		movw r26,r2
 3383 030c 5C96      		adiw r26,28
 3384 030e 6D93      		st X+,r22
 3385 0310 7D93      		st X+,r23
 3386 0312 8D93      		st X+,r24
 3387 0314 9C93      		st X,r25
 3388 0316 5F97      		sbiw r26,28+3
 289:../src/matrix_utils.c **** 
 3389               		.loc 1 289 0
 3390 0318 A501      		movw r20,r10
 3391 031a 9401      		movw r18,r8
 3392 031c 69A9      		ldd r22,Y+49
 3393 031e 7AA9      		ldd r23,Y+50
 3394 0320 8BA9      		ldd r24,Y+51
 3395 0322 9CA9      		ldd r25,Y+52
 3396 0324 0E94 0000 		call __mulsf3
 3397               	.LVL222:
 3398 0328 2B01      		movw r4,r22
 3399 032a 3C01      		movw r6,r24
 3400 032c 2196      		adiw r28,61-60
 3401 032e 2CAD      		ldd r18,Y+60
 3402 0330 3DAD      		ldd r19,Y+61
 3403 0332 4EAD      		ldd r20,Y+62
 3404 0334 5FAD      		ldd r21,Y+63
 3405 0336 2197      		sbiw r28,61-60
 3406 0338 6DA5      		ldd r22,Y+45
 3407 033a 7EA5      		ldd r23,Y+46
 3408 033c 8FA5      		ldd r24,Y+47
 3409 033e 98A9      		ldd r25,Y+48
 3410 0340 0E94 0000 		call __mulsf3
 3411               	.LVL223:
 3412 0344 9B01      		movw r18,r22
 3413 0346 AC01      		movw r20,r24
 3414 0348 C301      		movw r24,r6
 3415 034a B201      		movw r22,r4
 3416 034c 0E94 0000 		call __subsf3
 3417               	.LVL224:
 3418 0350 F101      		movw r30,r2
 3419 0352 60A3      		std Z+32,r22
 3420 0354 71A3      		std Z+33,r23
 3421 0356 82A3      		std Z+34,r24
 3422 0358 93A3      		std Z+35,r25
 291:../src/matrix_utils.c **** 
 3423               		.loc 1 291 0
 3424 035a A501      		movw r20,r10
 3425 035c 9401      		movw r18,r8
 3426 035e C701      		movw r24,r14
 3427 0360 B601      		movw r22,r12
 3428 0362 0E94 0000 		call __mulsf3
 3429               	.LVL225:
 3430 0366 4B01      		movw r8,r22
 3431 0368 5C01      		movw r10,r24
 3432 036a 2596      		adiw r28,65-60
 3433 036c 2CAD      		ldd r18,Y+60
 3434 036e 3DAD      		ldd r19,Y+61
 3435 0370 4EAD      		ldd r20,Y+62
 3436 0372 5FAD      		ldd r21,Y+63
 3437 0374 2597      		sbiw r28,65-60
 3438 0376 6DA5      		ldd r22,Y+45
 3439 0378 7EA5      		ldd r23,Y+46
 3440 037a 8FA5      		ldd r24,Y+47
 3441 037c 98A9      		ldd r25,Y+48
 3442 037e 0E94 0000 		call __mulsf3
 3443               	.LVL226:
 3444 0382 9B01      		movw r18,r22
 3445 0384 AC01      		movw r20,r24
 3446 0386 C501      		movw r24,r10
 3447 0388 B401      		movw r22,r8
 3448 038a 0E94 0000 		call __addsf3
 3449               	.LVL227:
 3450 038e 4B01      		movw r8,r22
 3451 0390 5C01      		movw r10,r24
 3452 0392 2DA1      		ldd r18,Y+37
 3453 0394 3EA1      		ldd r19,Y+38
 3454 0396 4FA1      		ldd r20,Y+39
 3455 0398 58A5      		ldd r21,Y+40
 3456 039a 69A5      		ldd r22,Y+41
 3457 039c 7AA5      		ldd r23,Y+42
 3458 039e 8BA5      		ldd r24,Y+43
 3459 03a0 9CA5      		ldd r25,Y+44
 3460 03a2 0E94 0000 		call __mulsf3
 3461               	.LVL228:
 3462 03a6 9B01      		movw r18,r22
 3463 03a8 AC01      		movw r20,r24
 3464 03aa C501      		movw r24,r10
 3465 03ac B401      		movw r22,r8
 3466 03ae 0E94 0000 		call __addsf3
 3467               	.LVL229:
 3468 03b2 2B01      		movw r4,r22
 3469 03b4 3C01      		movw r6,r24
 3470               	.LVL230:
 3471 03b6 4101      		movw r8,r2
 3472 03b8 F4E2      		ldi r31,36
 3473 03ba 8F0E      		add r8,r31
 3474 03bc 911C      		adc r9,__zero_reg__
 3475               	.LVL231:
 3476               	.L97:
 277:../src/matrix_utils.c **** 	Matrix tmp;
 3477               		.loc 1 277 0
 3478 03be 1801      		movw r2,r16
 3479 03c0 B12C      		mov r11,__zero_reg__
 3480               	.LVL232:
 3481               	.L100:
 3482               	.LBB95:
 3483               	.LBB96:
 295:../src/matrix_utils.c **** 		}
 3484               		.loc 1 295 0 discriminator 3
 3485 03c2 A301      		movw r20,r6
 3486 03c4 9201      		movw r18,r4
 3487 03c6 C701      		movw r24,r14
 3488 03c8 B601      		movw r22,r12
 3489 03ca 0E94 0000 		call __divsf3
 3490               	.LVL233:
 3491 03ce F101      		movw r30,r2
 3492 03d0 6193      		st Z+,r22
 3493 03d2 7193      		st Z+,r23
 3494 03d4 8193      		st Z+,r24
 3495 03d6 9193      		st Z+,r25
 3496 03d8 1F01      		movw r2,r30
 294:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]/determinant;
 3497               		.loc 1 294 0 discriminator 3
 3498 03da B394      		inc r11
 3499               	.LVL234:
 3500 03dc F3E0      		ldi r31,lo8(3)
 3501 03de BF16      		cp r11,r31
 3502 03e0 01F0      		breq .L102
 3503 03e2 D101      		movw r26,r2
 3504 03e4 CD90      		ld r12,X+
 3505 03e6 DD90      		ld r13,X+
 3506 03e8 ED90      		ld r14,X+
 3507 03ea FC90      		ld r15,X
 3508 03ec 00C0      		rjmp .L100
 3509               	.L102:
 3510 03ee 045F      		subi r16,-12
 3511 03f0 1F4F      		sbci r17,-1
 3512               	.LBE96:
 293:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 3513               		.loc 1 293 0 discriminator 2
 3514 03f2 0815      		cp r16,r8
 3515 03f4 1905      		cpc r17,r9
 3516 03f6 01F0      		breq .L93
 3517 03f8 D801      		movw r26,r16
 3518 03fa CD90      		ld r12,X+
 3519 03fc DD90      		ld r13,X+
 3520 03fe ED90      		ld r14,X+
 3521 0400 FC90      		ld r15,X
 3522 0402 00C0      		rjmp .L97
 3523               	.L93:
 3524               	/* epilogue start */
 3525               	.LBE95:
 298:../src/matrix_utils.c **** 
 3526               		.loc 1 298 0
 3527 0404 CC5B      		subi r28,-68
 3528 0406 DF4F      		sbci r29,-1
 3529 0408 CDBF      		out __SP_L__,r28
 3530 040a DEBF      		out __SP_H__,r29
 3531 040c DF91      		pop r29
 3532 040e CF91      		pop r28
 3533 0410 1F91      		pop r17
 3534 0412 0F91      		pop r16
 3535 0414 FF90      		pop r15
 3536 0416 EF90      		pop r14
 3537 0418 DF90      		pop r13
 3538 041a CF90      		pop r12
 3539 041c BF90      		pop r11
 3540               	.LVL235:
 3541 041e AF90      		pop r10
 3542 0420 9F90      		pop r9
 3543 0422 8F90      		pop r8
 3544               	.LVL236:
 3545 0424 7F90      		pop r7
 3546 0426 6F90      		pop r6
 3547 0428 5F90      		pop r5
 3548 042a 4F90      		pop r4
 3549               	.LVL237:
 3550 042c 3F90      		pop r3
 3551 042e 2F90      		pop r2
 3552 0430 0895      		ret
 3553               		.cfi_endproc
 3554               	.LFE45:
 3556               		.section	.text.matrixDet,"ax",@progbits
 3557               	.global	matrixDet
 3559               	matrixDet:
 3560               	.LFB46:
 301:../src/matrix_utils.c **** 	return ( (*A)[0][0]*((*A)[1][1]*(*A)[2][2] - (*A)[1][2]*(*A)[2][1]) +
 3561               		.loc 1 301 0
 3562               		.cfi_startproc
 3563               	.LVL238:
 3564 0000 4F92      		push r4
 3565               	.LCFI204:
 3566               		.cfi_def_cfa_offset 4
 3567               		.cfi_offset 4, -3
 3568 0002 5F92      		push r5
 3569               	.LCFI205:
 3570               		.cfi_def_cfa_offset 5
 3571               		.cfi_offset 5, -4
 3572 0004 6F92      		push r6
 3573               	.LCFI206:
 3574               		.cfi_def_cfa_offset 6
 3575               		.cfi_offset 6, -5
 3576 0006 7F92      		push r7
 3577               	.LCFI207:
 3578               		.cfi_def_cfa_offset 7
 3579               		.cfi_offset 7, -6
 3580 0008 8F92      		push r8
 3581               	.LCFI208:
 3582               		.cfi_def_cfa_offset 8
 3583               		.cfi_offset 8, -7
 3584 000a 9F92      		push r9
 3585               	.LCFI209:
 3586               		.cfi_def_cfa_offset 9
 3587               		.cfi_offset 9, -8
 3588 000c AF92      		push r10
 3589               	.LCFI210:
 3590               		.cfi_def_cfa_offset 10
 3591               		.cfi_offset 10, -9
 3592 000e BF92      		push r11
 3593               	.LCFI211:
 3594               		.cfi_def_cfa_offset 11
 3595               		.cfi_offset 11, -10
 3596 0010 CF92      		push r12
 3597               	.LCFI212:
 3598               		.cfi_def_cfa_offset 12
 3599               		.cfi_offset 12, -11
 3600 0012 DF92      		push r13
 3601               	.LCFI213:
 3602               		.cfi_def_cfa_offset 13
 3603               		.cfi_offset 13, -12
 3604 0014 EF92      		push r14
 3605               	.LCFI214:
 3606               		.cfi_def_cfa_offset 14
 3607               		.cfi_offset 14, -13
 3608 0016 FF92      		push r15
 3609               	.LCFI215:
 3610               		.cfi_def_cfa_offset 15
 3611               		.cfi_offset 15, -14
 3612 0018 CF93      		push r28
 3613               	.LCFI216:
 3614               		.cfi_def_cfa_offset 16
 3615               		.cfi_offset 28, -15
 3616 001a DF93      		push r29
 3617               	.LCFI217:
 3618               		.cfi_def_cfa_offset 17
 3619               		.cfi_offset 29, -16
 3620 001c CDB7      		in r28,__SP_L__
 3621 001e DEB7      		in r29,__SP_H__
 3622               	.LCFI218:
 3623               		.cfi_def_cfa_register 28
 3624 0020 6297      		sbiw r28,18
 3625               	.LCFI219:
 3626               		.cfi_def_cfa_offset 35
 3627 0022 CDBF      		out __SP_L__,r28
 3628 0024 DEBF      		out __SP_H__,r29
 3629               	/* prologue: function */
 3630               	/* frame size = 18 */
 3631               	/* stack size = 32 */
 3632               	.L__stack_usage = 32
 3633 0026 898B      		std Y+17,r24
 3634 0028 9A8B      		std Y+18,r25
 302:../src/matrix_utils.c **** 			 (*A)[0][1]*((*A)[1][2]*(*A)[2][0] - (*A)[1][0]*(*A)[2][2]) +
 3635               		.loc 1 302 0
 3636 002a DC01      		movw r26,r24
 3637 002c 5096      		adiw r26,16
 3638 002e 8D91      		ld r24,X+
 3639 0030 9D91      		ld r25,X+
 3640 0032 0D90      		ld __tmp_reg__,X+
 3641 0034 BC91      		ld r27,X
 3642 0036 A02D      		mov r26,__tmp_reg__
 3643               	.LVL239:
 3644 0038 8983      		std Y+1,r24
 3645 003a 9A83      		std Y+2,r25
 3646 003c AB83      		std Y+3,r26
 3647 003e BC83      		std Y+4,r27
 3648 0040 A989      		ldd r26,Y+17
 3649 0042 BA89      		ldd r27,Y+18
 3650 0044 9096      		adiw r26,32
 3651 0046 8D91      		ld r24,X+
 3652 0048 9D91      		ld r25,X+
 3653 004a 0D90      		ld __tmp_reg__,X+
 3654 004c BC91      		ld r27,X
 3655 004e A02D      		mov r26,__tmp_reg__
 3656 0050 8D83      		std Y+5,r24
 3657 0052 9E83      		std Y+6,r25
 3658 0054 AF83      		std Y+7,r26
 3659 0056 B887      		std Y+8,r27
 3660 0058 E989      		ldd r30,Y+17
 3661 005a FA89      		ldd r31,Y+18
 3662 005c 8488      		ldd r8,Z+20
 3663 005e 9588      		ldd r9,Z+21
 3664 0060 A688      		ldd r10,Z+22
 3665 0062 B788      		ldd r11,Z+23
 3666 0064 848D      		ldd r24,Z+28
 3667 0066 958D      		ldd r25,Z+29
 3668 0068 A68D      		ldd r26,Z+30
 3669 006a B78D      		ldd r27,Z+31
 3670 006c 8987      		std Y+9,r24
 3671 006e 9A87      		std Y+10,r25
 3672 0070 AB87      		std Y+11,r26
 3673 0072 BC87      		std Y+12,r27
 303:../src/matrix_utils.c **** 			 (*A)[0][2]*((*A)[1][0]*(*A)[2][1] - (*A)[1][1]*(*A)[2][0]));
 3674               		.loc 1 303 0
 3675 0074 808D      		ldd r24,Z+24
 3676 0076 918D      		ldd r25,Z+25
 3677 0078 A28D      		ldd r26,Z+26
 3678 007a B38D      		ldd r27,Z+27
 3679 007c 8D87      		std Y+13,r24
 3680 007e 9E87      		std Y+14,r25
 3681 0080 AF87      		std Y+15,r26
 3682 0082 B88B      		std Y+16,r27
 3683 0084 C484      		ldd r12,Z+12
 3684 0086 D584      		ldd r13,Z+13
 3685 0088 E684      		ldd r14,Z+14
 3686 008a F784      		ldd r15,Z+15
 302:../src/matrix_utils.c **** 			 (*A)[0][1]*((*A)[1][2]*(*A)[2][0] - (*A)[1][0]*(*A)[2][2]) +
 3687               		.loc 1 302 0
 3688 008c 2D81      		ldd r18,Y+5
 3689 008e 3E81      		ldd r19,Y+6
 3690 0090 4F81      		ldd r20,Y+7
 3691 0092 5885      		ldd r21,Y+8
 3692 0094 6981      		ldd r22,Y+1
 3693 0096 7A81      		ldd r23,Y+2
 3694 0098 8B81      		ldd r24,Y+3
 3695 009a 9C81      		ldd r25,Y+4
 3696 009c 0E94 0000 		call __mulsf3
 3697               	.LVL240:
 3698 00a0 2B01      		movw r4,r22
 3699 00a2 3C01      		movw r6,r24
 3700 00a4 2985      		ldd r18,Y+9
 3701 00a6 3A85      		ldd r19,Y+10
 3702 00a8 4B85      		ldd r20,Y+11
 3703 00aa 5C85      		ldd r21,Y+12
 3704 00ac C501      		movw r24,r10
 3705 00ae B401      		movw r22,r8
 3706 00b0 0E94 0000 		call __mulsf3
 3707               	.LVL241:
 3708 00b4 9B01      		movw r18,r22
 3709 00b6 AC01      		movw r20,r24
 3710 00b8 C301      		movw r24,r6
 3711 00ba B201      		movw r22,r4
 3712 00bc 0E94 0000 		call __subsf3
 3713               	.LVL242:
 3714 00c0 E989      		ldd r30,Y+17
 3715 00c2 FA89      		ldd r31,Y+18
 3716 00c4 2081      		ld r18,Z
 3717 00c6 3181      		ldd r19,Z+1
 3718 00c8 4281      		ldd r20,Z+2
 3719 00ca 5381      		ldd r21,Z+3
 3720 00cc 0E94 0000 		call __mulsf3
 3721               	.LVL243:
 3722 00d0 2B01      		movw r4,r22
 3723 00d2 3C01      		movw r6,r24
 3724 00d4 2D85      		ldd r18,Y+13
 3725 00d6 3E85      		ldd r19,Y+14
 3726 00d8 4F85      		ldd r20,Y+15
 3727 00da 5889      		ldd r21,Y+16
 3728 00dc C501      		movw r24,r10
 3729 00de B401      		movw r22,r8
 3730 00e0 0E94 0000 		call __mulsf3
 3731               	.LVL244:
 3732 00e4 4B01      		movw r8,r22
 3733 00e6 5C01      		movw r10,r24
 3734 00e8 A701      		movw r20,r14
 3735 00ea 9601      		movw r18,r12
 3736 00ec 6D81      		ldd r22,Y+5
 3737 00ee 7E81      		ldd r23,Y+6
 3738 00f0 8F81      		ldd r24,Y+7
 3739 00f2 9885      		ldd r25,Y+8
 3740 00f4 0E94 0000 		call __mulsf3
 3741               	.LVL245:
 3742 00f8 9B01      		movw r18,r22
 3743 00fa AC01      		movw r20,r24
 3744 00fc C501      		movw r24,r10
 3745 00fe B401      		movw r22,r8
 3746 0100 0E94 0000 		call __subsf3
 3747               	.LVL246:
 3748 0104 A989      		ldd r26,Y+17
 3749 0106 BA89      		ldd r27,Y+18
 3750 0108 1496      		adiw r26,4
 3751 010a 2D91      		ld r18,X+
 3752 010c 3D91      		ld r19,X+
 3753 010e 4D91      		ld r20,X+
 3754 0110 5C91      		ld r21,X
 3755 0112 1797      		sbiw r26,4+3
 3756 0114 0E94 0000 		call __mulsf3
 3757               	.LVL247:
 3758 0118 9B01      		movw r18,r22
 3759 011a AC01      		movw r20,r24
 3760 011c C301      		movw r24,r6
 3761 011e B201      		movw r22,r4
 3762 0120 0E94 0000 		call __addsf3
 3763               	.LVL248:
 3764 0124 4B01      		movw r8,r22
 3765 0126 5C01      		movw r10,r24
 3766 0128 A701      		movw r20,r14
 3767 012a 9601      		movw r18,r12
 3768 012c 6985      		ldd r22,Y+9
 3769 012e 7A85      		ldd r23,Y+10
 3770 0130 8B85      		ldd r24,Y+11
 3771 0132 9C85      		ldd r25,Y+12
 3772 0134 0E94 0000 		call __mulsf3
 3773               	.LVL249:
 3774 0138 6B01      		movw r12,r22
 3775 013a 7C01      		movw r14,r24
 3776 013c 2D85      		ldd r18,Y+13
 3777 013e 3E85      		ldd r19,Y+14
 3778 0140 4F85      		ldd r20,Y+15
 3779 0142 5889      		ldd r21,Y+16
 3780 0144 6981      		ldd r22,Y+1
 3781 0146 7A81      		ldd r23,Y+2
 3782 0148 8B81      		ldd r24,Y+3
 3783 014a 9C81      		ldd r25,Y+4
 3784 014c 0E94 0000 		call __mulsf3
 3785               	.LVL250:
 3786 0150 9B01      		movw r18,r22
 3787 0152 AC01      		movw r20,r24
 3788 0154 C701      		movw r24,r14
 3789 0156 B601      		movw r22,r12
 3790 0158 0E94 0000 		call __subsf3
 3791               	.LVL251:
 3792 015c E989      		ldd r30,Y+17
 3793 015e FA89      		ldd r31,Y+18
 3794 0160 2085      		ldd r18,Z+8
 3795 0162 3185      		ldd r19,Z+9
 3796 0164 4285      		ldd r20,Z+10
 3797 0166 5385      		ldd r21,Z+11
 3798 0168 0E94 0000 		call __mulsf3
 3799               	.LVL252:
 3800 016c 9B01      		movw r18,r22
 3801 016e AC01      		movw r20,r24
 3802 0170 C501      		movw r24,r10
 3803 0172 B401      		movw r22,r8
 3804 0174 0E94 0000 		call __addsf3
 3805               	.LVL253:
 3806               	/* epilogue start */
 305:../src/matrix_utils.c **** 
 3807               		.loc 1 305 0
 3808 0178 6296      		adiw r28,18
 3809 017a CDBF      		out __SP_L__,r28
 3810 017c DEBF      		out __SP_H__,r29
 3811 017e DF91      		pop r29
 3812 0180 CF91      		pop r28
 3813 0182 FF90      		pop r15
 3814 0184 EF90      		pop r14
 3815 0186 DF90      		pop r13
 3816 0188 CF90      		pop r12
 3817 018a BF90      		pop r11
 3818 018c AF90      		pop r10
 3819 018e 9F90      		pop r9
 3820 0190 8F90      		pop r8
 3821 0192 7F90      		pop r7
 3822 0194 6F90      		pop r6
 3823 0196 5F90      		pop r5
 3824 0198 4F90      		pop r4
 3825 019a 0895      		ret
 3826               		.cfi_endproc
 3827               	.LFE46:
 3829               	.global	__eqsf2
 3830               	.global	__lesf2
 3831               	.global	__gesf2
 3832               		.section	.text.eigenvalues,"ax",@progbits
 3833               	.global	eigenvalues
 3835               	eigenvalues:
 3836               	.LFB41:
 161:../src/matrix_utils.c **** 	float p1 = powf((*A)[0][1], 2) + powf((*A)[0][2], 2) + powf((*A)[1][2], 2);
 3837               		.loc 1 161 0
 3838               		.cfi_startproc
 3839               	.LVL254:
 3840 0000 2F92      		push r2
 3841               	.LCFI220:
 3842               		.cfi_def_cfa_offset 4
 3843               		.cfi_offset 2, -3
 3844 0002 3F92      		push r3
 3845               	.LCFI221:
 3846               		.cfi_def_cfa_offset 5
 3847               		.cfi_offset 3, -4
 3848 0004 4F92      		push r4
 3849               	.LCFI222:
 3850               		.cfi_def_cfa_offset 6
 3851               		.cfi_offset 4, -5
 3852 0006 5F92      		push r5
 3853               	.LCFI223:
 3854               		.cfi_def_cfa_offset 7
 3855               		.cfi_offset 5, -6
 3856 0008 6F92      		push r6
 3857               	.LCFI224:
 3858               		.cfi_def_cfa_offset 8
 3859               		.cfi_offset 6, -7
 3860 000a 7F92      		push r7
 3861               	.LCFI225:
 3862               		.cfi_def_cfa_offset 9
 3863               		.cfi_offset 7, -8
 3864 000c 8F92      		push r8
 3865               	.LCFI226:
 3866               		.cfi_def_cfa_offset 10
 3867               		.cfi_offset 8, -9
 3868 000e 9F92      		push r9
 3869               	.LCFI227:
 3870               		.cfi_def_cfa_offset 11
 3871               		.cfi_offset 9, -10
 3872 0010 AF92      		push r10
 3873               	.LCFI228:
 3874               		.cfi_def_cfa_offset 12
 3875               		.cfi_offset 10, -11
 3876 0012 BF92      		push r11
 3877               	.LCFI229:
 3878               		.cfi_def_cfa_offset 13
 3879               		.cfi_offset 11, -12
 3880 0014 CF92      		push r12
 3881               	.LCFI230:
 3882               		.cfi_def_cfa_offset 14
 3883               		.cfi_offset 12, -13
 3884 0016 DF92      		push r13
 3885               	.LCFI231:
 3886               		.cfi_def_cfa_offset 15
 3887               		.cfi_offset 13, -14
 3888 0018 EF92      		push r14
 3889               	.LCFI232:
 3890               		.cfi_def_cfa_offset 16
 3891               		.cfi_offset 14, -15
 3892 001a FF92      		push r15
 3893               	.LCFI233:
 3894               		.cfi_def_cfa_offset 17
 3895               		.cfi_offset 15, -16
 3896 001c 0F93      		push r16
 3897               	.LCFI234:
 3898               		.cfi_def_cfa_offset 18
 3899               		.cfi_offset 16, -17
 3900 001e 1F93      		push r17
 3901               	.LCFI235:
 3902               		.cfi_def_cfa_offset 19
 3903               		.cfi_offset 17, -18
 3904 0020 CF93      		push r28
 3905               	.LCFI236:
 3906               		.cfi_def_cfa_offset 20
 3907               		.cfi_offset 28, -19
 3908 0022 DF93      		push r29
 3909               	.LCFI237:
 3910               		.cfi_def_cfa_offset 21
 3911               		.cfi_offset 29, -20
 3912 0024 CDB7      		in r28,__SP_L__
 3913 0026 DEB7      		in r29,__SP_H__
 3914               	.LCFI238:
 3915               		.cfi_def_cfa_register 28
 3916 0028 E797      		sbiw r28,55
 3917               	.LCFI239:
 3918               		.cfi_def_cfa_offset 76
 3919 002a CDBF      		out __SP_L__,r28
 3920 002c DEBF      		out __SP_H__,r29
 3921               	/* prologue: function */
 3922               	/* frame size = 55 */
 3923               	/* stack size = 73 */
 3924               	.L__stack_usage = 73
 3925 002e 8EA7      		std Y+46,r24
 3926 0030 9FA7      		std Y+47,r25
 3927 0032 1B01      		movw r2,r22
 162:../src/matrix_utils.c **** 	if(p1 == 0){
 3928               		.loc 1 162 0
 3929 0034 DB01      		movw r26,r22
 3930 0036 1496      		adiw r26,4
 3931 0038 8D90      		ld r8,X+
 3932 003a 9D90      		ld r9,X+
 3933 003c AD90      		ld r10,X+
 3934 003e BC90      		ld r11,X
 3935 0040 1797      		sbiw r26,4+3
 3936 0042 1896      		adiw r26,8
 3937 0044 6D91      		ld r22,X+
 3938 0046 7D91      		ld r23,X+
 3939 0048 8D91      		ld r24,X+
 3940 004a 9C91      		ld r25,X
 3941 004c 1B97      		sbiw r26,8+3
 3942               	.LVL255:
 3943 004e 5496      		adiw r26,20
 3944 0050 CD90      		ld r12,X+
 3945 0052 DD90      		ld r13,X+
 3946 0054 ED90      		ld r14,X+
 3947 0056 FC90      		ld r15,X
 3948 0058 5797      		sbiw r26,20+3
 3949 005a 9B01      		movw r18,r22
 3950 005c AC01      		movw r20,r24
 3951 005e 0E94 0000 		call __mulsf3
 3952               	.LVL256:
 3953 0062 2B01      		movw r4,r22
 3954 0064 3C01      		movw r6,r24
 3955 0066 A501      		movw r20,r10
 3956 0068 9401      		movw r18,r8
 3957 006a C501      		movw r24,r10
 3958 006c B401      		movw r22,r8
 3959 006e 0E94 0000 		call __mulsf3
 3960               	.LVL257:
 3961 0072 9B01      		movw r18,r22
 3962 0074 AC01      		movw r20,r24
 3963 0076 C301      		movw r24,r6
 3964 0078 B201      		movw r22,r4
 3965 007a 0E94 0000 		call __addsf3
 3966               	.LVL258:
 3967 007e 4B01      		movw r8,r22
 3968 0080 5C01      		movw r10,r24
 3969 0082 A701      		movw r20,r14
 3970 0084 9601      		movw r18,r12
 3971 0086 C701      		movw r24,r14
 3972 0088 B601      		movw r22,r12
 3973 008a 0E94 0000 		call __mulsf3
 3974               	.LVL259:
 3975 008e 9B01      		movw r18,r22
 3976 0090 AC01      		movw r20,r24
 3977 0092 C501      		movw r24,r10
 3978 0094 B401      		movw r22,r8
 3979 0096 0E94 0000 		call __addsf3
 3980               	.LVL260:
 3981 009a 6AA7      		std Y+42,r22
 3982 009c 7BA7      		std Y+43,r23
 3983 009e 8CA7      		std Y+44,r24
 3984 00a0 9DA7      		std Y+45,r25
 3985               	.LVL261:
 163:../src/matrix_utils.c **** 		// A is diagonal.
 3986               		.loc 1 163 0
 3987 00a2 20E0      		ldi r18,0
 3988 00a4 30E0      		ldi r19,0
 3989 00a6 A901      		movw r20,r18
 3990 00a8 0E94 0000 		call __eqsf2
 3991               	.LVL262:
 3992 00ac 8823      		tst r24
 3993 00ae 01F4      		brne .+2
 3994 00b0 00C0      		rjmp .L121
 3995               	.LVL263:
 3996               	.LBB97:
 3997               	.LBB98:
 3998               	.LBB99:
 309:../src/matrix_utils.c **** }
 3999               		.loc 1 309 0
 4000 00b2 D101      		movw r26,r2
 4001 00b4 CD90      		ld r12,X+
 4002 00b6 DD90      		ld r13,X+
 4003 00b8 ED90      		ld r14,X+
 4004 00ba FC90      		ld r15,X
 4005 00bc 1397      		sbiw r26,3
 4006 00be 5096      		adiw r26,16
 4007 00c0 8D90      		ld r8,X+
 4008 00c2 9D90      		ld r9,X+
 4009 00c4 AD90      		ld r10,X+
 4010 00c6 BC90      		ld r11,X
 4011 00c8 5397      		sbiw r26,16+3
 4012 00ca 9096      		adiw r26,32
 4013 00cc 8D91      		ld r24,X+
 4014 00ce 9D91      		ld r25,X+
 4015 00d0 0D90      		ld __tmp_reg__,X+
 4016 00d2 BC91      		ld r27,X
 4017 00d4 A02D      		mov r26,__tmp_reg__
 4018 00d6 88AB      		std Y+48,r24
 4019 00d8 99AB      		std Y+49,r25
 4020 00da AAAB      		std Y+50,r26
 4021 00dc BBAB      		std Y+51,r27
 4022               	.LVL264:
 4023               	.LBE99:
 4024               	.LBE98:
 169:../src/matrix_utils.c **** 		float p2 = powf((*A)[0][0] - q, 2) + powf((*A)[1][1] - q, 2) + powf((*A)[2][2] - q, 2) + 2*p1;
 4025               		.loc 1 169 0
 4026 00de A501      		movw r20,r10
 4027 00e0 9401      		movw r18,r8
 4028 00e2 C701      		movw r24,r14
 4029 00e4 B601      		movw r22,r12
 4030 00e6 0E94 0000 		call __addsf3
 4031               	.LVL265:
 4032 00ea 28A9      		ldd r18,Y+48
 4033 00ec 39A9      		ldd r19,Y+49
 4034 00ee 4AA9      		ldd r20,Y+50
 4035 00f0 5BA9      		ldd r21,Y+51
 4036 00f2 0E94 0000 		call __addsf3
 4037               	.LVL266:
 4038 00f6 20E0      		ldi r18,0
 4039 00f8 30E0      		ldi r19,0
 4040 00fa 40E4      		ldi r20,lo8(64)
 4041 00fc 50E4      		ldi r21,lo8(64)
 4042 00fe 0E94 0000 		call __divsf3
 4043               	.LVL267:
 4044 0102 062F      		mov r16,r22
 4045 0104 7FA3      		std Y+39,r23
 4046 0106 88A7      		std Y+40,r24
 4047 0108 99A7      		std Y+41,r25
 4048               	.LVL268:
 170:../src/matrix_utils.c **** 		float p = sqrtf(p2/6.0);
 4049               		.loc 1 170 0
 4050 010a 262F      		mov r18,r22
 4051 010c 372F      		mov r19,r23
 4052 010e AC01      		movw r20,r24
 4053 0110 C701      		movw r24,r14
 4054 0112 B601      		movw r22,r12
 4055 0114 0E94 0000 		call __subsf3
 4056               	.LVL269:
 4057 0118 2B01      		movw r4,r22
 4058 011a 3C01      		movw r6,r24
 4059 011c 202F      		mov r18,r16
 4060 011e 3FA1      		ldd r19,Y+39
 4061 0120 48A5      		ldd r20,Y+40
 4062 0122 59A5      		ldd r21,Y+41
 4063 0124 C501      		movw r24,r10
 4064 0126 B401      		movw r22,r8
 4065 0128 0E94 0000 		call __subsf3
 4066               	.LVL270:
 4067 012c 6CAB      		std Y+52,r22
 4068 012e 7DAB      		std Y+53,r23
 4069 0130 8EAB      		std Y+54,r24
 4070 0132 9FAB      		std Y+55,r25
 4071 0134 202F      		mov r18,r16
 4072 0136 3FA1      		ldd r19,Y+39
 4073 0138 48A5      		ldd r20,Y+40
 4074 013a 59A5      		ldd r21,Y+41
 4075 013c 68A9      		ldd r22,Y+48
 4076 013e 79A9      		ldd r23,Y+49
 4077 0140 8AA9      		ldd r24,Y+50
 4078 0142 9BA9      		ldd r25,Y+51
 4079 0144 0E94 0000 		call __subsf3
 4080               	.LVL271:
 4081 0148 4B01      		movw r8,r22
 4082 014a 5C01      		movw r10,r24
 4083               	.LVL272:
 171:../src/matrix_utils.c **** 		Matrix B = {{q, 0, 0}, {0, q, 0}, {0, 0, q}};
 4084               		.loc 1 171 0
 4085 014c A301      		movw r20,r6
 4086 014e 9201      		movw r18,r4
 4087 0150 C301      		movw r24,r6
 4088 0152 B201      		movw r22,r4
 4089 0154 0E94 0000 		call __mulsf3
 4090               	.LVL273:
 4091 0158 2B01      		movw r4,r22
 4092 015a 3C01      		movw r6,r24
 4093               	.LVL274:
 4094 015c 2CA9      		ldd r18,Y+52
 4095 015e 3DA9      		ldd r19,Y+53
 4096 0160 4EA9      		ldd r20,Y+54
 4097 0162 5FA9      		ldd r21,Y+55
 4098 0164 CA01      		movw r24,r20
 4099 0166 B901      		movw r22,r18
 4100 0168 0E94 0000 		call __mulsf3
 4101               	.LVL275:
 4102 016c 9B01      		movw r18,r22
 4103 016e AC01      		movw r20,r24
 4104 0170 C301      		movw r24,r6
 4105 0172 B201      		movw r22,r4
 4106 0174 0E94 0000 		call __addsf3
 4107               	.LVL276:
 4108 0178 2B01      		movw r4,r22
 4109 017a 3C01      		movw r6,r24
 4110 017c A501      		movw r20,r10
 4111 017e 9401      		movw r18,r8
 4112 0180 C501      		movw r24,r10
 4113 0182 B401      		movw r22,r8
 4114 0184 0E94 0000 		call __mulsf3
 4115               	.LVL277:
 4116 0188 9B01      		movw r18,r22
 4117 018a AC01      		movw r20,r24
 4118 018c C301      		movw r24,r6
 4119 018e B201      		movw r22,r4
 4120 0190 0E94 0000 		call __addsf3
 4121               	.LVL278:
 4122 0194 4B01      		movw r8,r22
 4123 0196 5C01      		movw r10,r24
 4124 0198 2AA5      		ldd r18,Y+42
 4125 019a 3BA5      		ldd r19,Y+43
 4126 019c 4CA5      		ldd r20,Y+44
 4127 019e 5DA5      		ldd r21,Y+45
 4128 01a0 CA01      		movw r24,r20
 4129 01a2 B901      		movw r22,r18
 4130 01a4 0E94 0000 		call __addsf3
 4131               	.LVL279:
 4132 01a8 9B01      		movw r18,r22
 4133 01aa AC01      		movw r20,r24
 4134 01ac C501      		movw r24,r10
 4135 01ae B401      		movw r22,r8
 4136 01b0 0E94 0000 		call __addsf3
 4137               	.LVL280:
 4138 01b4 20E0      		ldi r18,0
 4139 01b6 30E0      		ldi r19,0
 4140 01b8 40EC      		ldi r20,lo8(-64)
 4141 01ba 50E4      		ldi r21,lo8(64)
 4142 01bc 0E94 0000 		call __divsf3
 4143               	.LVL281:
 4144 01c0 0E94 0000 		call sqrtf
 4145               	.LVL282:
 4146 01c4 6AA7      		std Y+42,r22
 4147 01c6 7BA7      		std Y+43,r23
 4148 01c8 8CA7      		std Y+44,r24
 4149 01ca 9DA7      		std Y+45,r25
 4150               	.LVL283:
 172:../src/matrix_utils.c **** 		matrixSubtract(&B, A, &B);
 4151               		.loc 1 172 0
 4152 01cc 802F      		mov r24,r16
 4153 01ce 9FA1      		ldd r25,Y+39
 4154 01d0 A8A5      		ldd r26,Y+40
 4155 01d2 B9A5      		ldd r27,Y+41
 4156 01d4 8983      		std Y+1,r24
 4157 01d6 9A83      		std Y+2,r25
 4158 01d8 AB83      		std Y+3,r26
 4159 01da BC83      		std Y+4,r27
 4160 01dc 1D82      		std Y+5,__zero_reg__
 4161 01de 1E82      		std Y+6,__zero_reg__
 4162 01e0 1F82      		std Y+7,__zero_reg__
 4163 01e2 1886      		std Y+8,__zero_reg__
 4164 01e4 1986      		std Y+9,__zero_reg__
 4165 01e6 1A86      		std Y+10,__zero_reg__
 4166 01e8 1B86      		std Y+11,__zero_reg__
 4167 01ea 1C86      		std Y+12,__zero_reg__
 4168 01ec 1D86      		std Y+13,__zero_reg__
 4169 01ee 1E86      		std Y+14,__zero_reg__
 4170 01f0 1F86      		std Y+15,__zero_reg__
 4171 01f2 188A      		std Y+16,__zero_reg__
 4172 01f4 898B      		std Y+17,r24
 4173 01f6 9A8B      		std Y+18,r25
 4174 01f8 AB8B      		std Y+19,r26
 4175 01fa BC8B      		std Y+20,r27
 4176 01fc 1D8A      		std Y+21,__zero_reg__
 4177 01fe 1E8A      		std Y+22,__zero_reg__
 4178 0200 1F8A      		std Y+23,__zero_reg__
 4179 0202 188E      		std Y+24,__zero_reg__
 4180 0204 198E      		std Y+25,__zero_reg__
 4181 0206 1A8E      		std Y+26,__zero_reg__
 4182 0208 1B8E      		std Y+27,__zero_reg__
 4183 020a 1C8E      		std Y+28,__zero_reg__
 4184 020c 1D8E      		std Y+29,__zero_reg__
 4185 020e 1E8E      		std Y+30,__zero_reg__
 4186 0210 1F8E      		std Y+31,__zero_reg__
 4187 0212 18A2      		std Y+32,__zero_reg__
 4188 0214 89A3      		std Y+33,r24
 4189 0216 9AA3      		std Y+34,r25
 4190 0218 ABA3      		std Y+35,r26
 4191 021a BCA3      		std Y+36,r27
 4192               	.LVL284:
 4193 021c FE01      		movw r30,r28
 4194 021e 3196      		adiw r30,1
 4195 0220 2F01      		movw r4,r30
 4196 0222 F4E0      		ldi r31,4
 4197 0224 2F0E      		add r2,r31
 4198 0226 311C      		adc r3,__zero_reg__
 4199               	.LVL285:
 4200 0228 CE01      		movw r24,r28
 4201 022a 8596      		adiw r24,37
 4202 022c 8DA3      		std Y+37,r24
 4203 022e 9EA3      		std Y+38,r25
 4204 0230 3201      		movw r6,r4
 4205 0232 702F      		mov r23,r16
 4206 0234 6FA1      		ldd r22,Y+39
 4207               	.LVL286:
 4208 0236 98A5      		ldd r25,Y+40
 4209 0238 89A5      		ldd r24,Y+41
 4210               	.LVL287:
 4211               	.L108:
 4212               	.LBE97:
 161:../src/matrix_utils.c **** 	float p1 = powf((*A)[0][1], 2) + powf((*A)[0][2], 2) + powf((*A)[1][2], 2);
 4213               		.loc 1 161 0
 4214 023a 4101      		movw r8,r2
 4215 023c 5301      		movw r10,r6
 4216 023e 10E0      		ldi r17,0
 4217               	.LVL288:
 4218               	.L111:
 4219               	.LBB106:
 4220               	.LBB100:
 4221               	.LBB101:
 4222               	.LBB102:
  51:../src/matrix_utils.c **** 		}
 4223               		.loc 1 51 0
 4224 0240 272F      		mov r18,r23
 4225 0242 362F      		mov r19,r22
 4226 0244 492F      		mov r20,r25
 4227 0246 582F      		mov r21,r24
 4228 0248 C701      		movw r24,r14
 4229 024a B601      		movw r22,r12
 4230 024c 0E94 0000 		call __subsf3
 4231               	.LVL289:
 4232 0250 F501      		movw r30,r10
 4233 0252 6193      		st Z+,r22
 4234 0254 7193      		st Z+,r23
 4235 0256 8193      		st Z+,r24
 4236 0258 9193      		st Z+,r25
 4237 025a 5F01      		movw r10,r30
  50:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] - (*B)[i][j];
 4238               		.loc 1 50 0
 4239 025c 1F5F      		subi r17,lo8(-(1))
 4240               	.LVL290:
 4241 025e 1330      		cpi r17,lo8(3)
 4242 0260 01F0      		breq .L122
 4243 0262 F401      		movw r30,r8
 4244 0264 C190      		ld r12,Z+
 4245 0266 D190      		ld r13,Z+
 4246 0268 E190      		ld r14,Z+
 4247 026a F190      		ld r15,Z+
 4248 026c 4F01      		movw r8,r30
 4249 026e D501      		movw r26,r10
 4250 0270 7C91      		ld r23,X
 4251 0272 1196      		adiw r26,1
 4252 0274 6C91      		ld r22,X
 4253 0276 1197      		sbiw r26,1
 4254 0278 1296      		adiw r26,2
 4255 027a 9C91      		ld r25,X
 4256 027c 1297      		sbiw r26,2
 4257 027e 1396      		adiw r26,3
 4258 0280 8C91      		ld r24,X
 4259 0282 00C0      		rjmp .L111
 4260               	.L122:
 4261 0284 FCE0      		ldi r31,12
 4262 0286 6F0E      		add r6,r31
 4263 0288 711C      		adc r7,__zero_reg__
 4264               	.LBE102:
  49:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 4265               		.loc 1 49 0
 4266 028a 8DA1      		ldd r24,Y+37
 4267 028c 9EA1      		ldd r25,Y+38
 4268 028e 8615      		cp r24,r6
 4269 0290 9705      		cpc r25,r7
 4270 0292 01F0      		breq .L110
 4271 0294 D101      		movw r26,r2
 4272 0296 1896      		adiw r26,8
 4273 0298 CD90      		ld r12,X+
 4274 029a DD90      		ld r13,X+
 4275 029c ED90      		ld r14,X+
 4276 029e FC90      		ld r15,X
 4277 02a0 1B97      		sbiw r26,8+3
 4278 02a2 F301      		movw r30,r6
 4279 02a4 7081      		ld r23,Z
 4280 02a6 6181      		ldd r22,Z+1
 4281 02a8 9281      		ldd r25,Z+2
 4282 02aa 8381      		ldd r24,Z+3
 4283 02ac FCE0      		ldi r31,12
 4284 02ae 2F0E      		add r2,r31
 4285 02b0 311C      		adc r3,__zero_reg__
 4286 02b2 00C0      		rjmp .L108
 4287               	.L110:
 4288               	.LVL291:
 4289               	.LBE101:
 4290               	.LBE100:
 174:../src/matrix_utils.c **** 		float r = matrixDet(&B)/2;
 4291               		.loc 1 174 0
 4292 02b4 2AA5      		ldd r18,Y+42
 4293 02b6 3BA5      		ldd r19,Y+43
 4294 02b8 4CA5      		ldd r20,Y+44
 4295 02ba 5DA5      		ldd r21,Y+45
 4296 02bc 60E0      		ldi r22,0
 4297 02be 70E0      		ldi r23,0
 4298 02c0 80E8      		ldi r24,lo8(-128)
 4299 02c2 9FE3      		ldi r25,lo8(63)
 4300 02c4 0E94 0000 		call __divsf3
 4301               	.LVL292:
 4302 02c8 4B01      		movw r8,r22
 4303 02ca 5C01      		movw r10,r24
 4304               	.LVL293:
 4305               	.L112:
 172:../src/matrix_utils.c **** 		matrixSubtract(&B, A, &B);
 4306               		.loc 1 172 0
 4307 02cc 7201      		movw r14,r4
 4308 02ce 13E0      		ldi r17,lo8(3)
 4309               	.LVL294:
 4310               	.L113:
 4311               	.LBB103:
 4312               	.LBB104:
 4313               	.LBB105:
  26:../src/matrix_utils.c **** 		}
 4314               		.loc 1 26 0
 4315 02d0 A501      		movw r20,r10
 4316 02d2 9401      		movw r18,r8
 4317 02d4 D701      		movw r26,r14
 4318 02d6 6D91      		ld r22,X+
 4319 02d8 7D91      		ld r23,X+
 4320 02da 8D91      		ld r24,X+
 4321 02dc 9C91      		ld r25,X
 4322 02de 0E94 0000 		call __mulsf3
 4323               	.LVL295:
 4324 02e2 F701      		movw r30,r14
 4325 02e4 6193      		st Z+,r22
 4326 02e6 7193      		st Z+,r23
 4327 02e8 8193      		st Z+,r24
 4328 02ea 9193      		st Z+,r25
 4329 02ec 7F01      		movw r14,r30
 4330               	.LVL296:
 4331 02ee 1150      		subi r17,lo8(-(-1))
 4332               	.LVL297:
  25:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]*s;
 4333               		.loc 1 25 0
 4334 02f0 01F4      		brne .L113
 4335 02f2 FCE0      		ldi r31,12
 4336 02f4 4F0E      		add r4,r31
 4337 02f6 511C      		adc r5,__zero_reg__
 4338               	.LBE105:
  24:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 4339               		.loc 1 24 0
 4340 02f8 8DA1      		ldd r24,Y+37
 4341 02fa 9EA1      		ldd r25,Y+38
 4342 02fc 4816      		cp r4,r24
 4343 02fe 5906      		cpc r5,r25
 4344 0300 01F4      		brne .L112
 4345               	.LVL298:
 4346               	.LBE104:
 4347               	.LBE103:
 175:../src/matrix_utils.c **** 		float phi;
 4348               		.loc 1 175 0
 4349 0302 CE01      		movw r24,r28
 4350 0304 0196      		adiw r24,1
 4351 0306 0E94 0000 		call matrixDet
 4352               	.LVL299:
 4353 030a 20E0      		ldi r18,0
 4354 030c 30E0      		ldi r19,0
 4355 030e 40E0      		ldi r20,0
 4356 0310 5FE3      		ldi r21,lo8(63)
 4357 0312 0E94 0000 		call __mulsf3
 4358               	.LVL300:
 4359 0316 6B01      		movw r12,r22
 4360 0318 7C01      		movw r14,r24
 4361               	.LVL301:
 177:../src/matrix_utils.c **** 			phi = M_PI/3;
 4362               		.loc 1 177 0
 4363 031a 20E0      		ldi r18,0
 4364 031c 30E0      		ldi r19,0
 4365 031e 40E8      		ldi r20,lo8(-128)
 4366 0320 5FEB      		ldi r21,lo8(-65)
 4367 0322 0E94 0000 		call __lesf2
 4368               	.LVL302:
 4369 0326 1816      		cp __zero_reg__,r24
 4370 0328 04F0      		brlt .+2
 4371 032a 00C0      		rjmp .L116
 179:../src/matrix_utils.c **** 			phi = 0;
 4372               		.loc 1 179 0
 4373 032c 20E0      		ldi r18,0
 4374 032e 30E0      		ldi r19,0
 4375 0330 40E8      		ldi r20,lo8(-128)
 4376 0332 5FE3      		ldi r21,lo8(63)
 4377 0334 C701      		movw r24,r14
 4378 0336 B601      		movw r22,r12
 4379 0338 0E94 0000 		call __gesf2
 4380               	.LVL303:
 4381 033c 87FD      		sbrc r24,7
 4382 033e 00C0      		rjmp .L123
 4383 0340 CC24      		clr r12
 4384 0342 C394      		inc r12
 4385 0344 D12C      		mov r13,__zero_reg__
 4386 0346 E12C      		mov r14,__zero_reg__
 4387 0348 8FEB      		ldi r24,lo8(-65)
 4388 034a F82E      		mov r15,r24
 4389               	.LVL304:
 4390 034c 812C      		mov r8,__zero_reg__
 4391 034e 912C      		mov r9,__zero_reg__
 4392 0350 90E8      		ldi r25,lo8(-128)
 4393 0352 A92E      		mov r10,r25
 4394 0354 9FE3      		ldi r25,lo8(63)
 4395 0356 B92E      		mov r11,r25
 4396               	.L115:
 184:../src/matrix_utils.c **** 		(*eigVals)[2] = q + 2*p*cosf(phi + (2*M_PI/3));
 4397               		.loc 1 184 0
 4398 0358 2AA5      		ldd r18,Y+42
 4399 035a 3BA5      		ldd r19,Y+43
 4400 035c 4CA5      		ldd r20,Y+44
 4401 035e 5DA5      		ldd r21,Y+45
 4402 0360 CA01      		movw r24,r20
 4403 0362 B901      		movw r22,r18
 4404 0364 0E94 0000 		call __addsf3
 4405               	.LVL305:
 4406 0368 2B01      		movw r4,r22
 4407 036a 3C01      		movw r6,r24
 4408 036c A501      		movw r20,r10
 4409 036e 9401      		movw r18,r8
 4410 0370 0E94 0000 		call __mulsf3
 4411               	.LVL306:
 4412 0374 202F      		mov r18,r16
 4413 0376 3FA1      		ldd r19,Y+39
 4414 0378 48A5      		ldd r20,Y+40
 4415 037a 59A5      		ldd r21,Y+41
 4416 037c 0E94 0000 		call __addsf3
 4417               	.LVL307:
 4418 0380 4B01      		movw r8,r22
 4419 0382 5C01      		movw r10,r24
 4420 0384 AEA5      		ldd r26,Y+46
 4421 0386 BFA5      		ldd r27,Y+47
 4422 0388 6D93      		st X+,r22
 4423 038a 7D93      		st X+,r23
 4424 038c 8D93      		st X+,r24
 4425 038e 9C93      		st X,r25
 4426 0390 1397      		sbiw r26,3
 185:../src/matrix_utils.c **** 		(*eigVals)[1] = 3*q - (*eigVals)[0] - (*eigVals)[2];
 4427               		.loc 1 185 0
 4428 0392 A701      		movw r20,r14
 4429 0394 9601      		movw r18,r12
 4430 0396 C301      		movw r24,r6
 4431 0398 B201      		movw r22,r4
 4432 039a 0E94 0000 		call __mulsf3
 4433               	.LVL308:
 4434 039e 202F      		mov r18,r16
 4435 03a0 3FA1      		ldd r19,Y+39
 4436 03a2 48A5      		ldd r20,Y+40
 4437 03a4 59A5      		ldd r21,Y+41
 4438 03a6 0E94 0000 		call __addsf3
 4439               	.LVL309:
 4440 03aa 6B01      		movw r12,r22
 4441 03ac 7C01      		movw r14,r24
 4442 03ae EEA5      		ldd r30,Y+46
 4443 03b0 FFA5      		ldd r31,Y+47
 4444 03b2 6087      		std Z+8,r22
 4445 03b4 7187      		std Z+9,r23
 4446 03b6 8287      		std Z+10,r24
 4447 03b8 9387      		std Z+11,r25
 186:../src/matrix_utils.c **** 	}
 4448               		.loc 1 186 0
 4449 03ba 20E0      		ldi r18,0
 4450 03bc 30E0      		ldi r19,0
 4451 03be 40E4      		ldi r20,lo8(64)
 4452 03c0 50E4      		ldi r21,lo8(64)
 4453 03c2 602F      		mov r22,r16
 4454 03c4 7FA1      		ldd r23,Y+39
 4455 03c6 88A5      		ldd r24,Y+40
 4456 03c8 99A5      		ldd r25,Y+41
 4457 03ca 0E94 0000 		call __mulsf3
 4458               	.LVL310:
 4459 03ce A501      		movw r20,r10
 4460 03d0 9401      		movw r18,r8
 4461 03d2 0E94 0000 		call __subsf3
 4462               	.LVL311:
 4463 03d6 A701      		movw r20,r14
 4464 03d8 9601      		movw r18,r12
 4465 03da 0E94 0000 		call __subsf3
 4466               	.LVL312:
 4467 03de AEA5      		ldd r26,Y+46
 4468 03e0 BFA5      		ldd r27,Y+47
 4469 03e2 1496      		adiw r26,4
 4470 03e4 6D93      		st X+,r22
 4471 03e6 7D93      		st X+,r23
 4472 03e8 8D93      		st X+,r24
 4473 03ea 9C93      		st X,r25
 4474 03ec 1797      		sbiw r26,4+3
 4475               	.LVL313:
 4476               	.L104:
 4477               	/* epilogue start */
 4478               	.LBE106:
 188:../src/matrix_utils.c **** 
 4479               		.loc 1 188 0
 4480 03ee E796      		adiw r28,55
 4481 03f0 CDBF      		out __SP_L__,r28
 4482 03f2 DEBF      		out __SP_H__,r29
 4483 03f4 DF91      		pop r29
 4484 03f6 CF91      		pop r28
 4485 03f8 1F91      		pop r17
 4486 03fa 0F91      		pop r16
 4487 03fc FF90      		pop r15
 4488 03fe EF90      		pop r14
 4489 0400 DF90      		pop r13
 4490 0402 CF90      		pop r12
 4491 0404 BF90      		pop r11
 4492 0406 AF90      		pop r10
 4493 0408 9F90      		pop r9
 4494 040a 8F90      		pop r8
 4495 040c 7F90      		pop r7
 4496 040e 6F90      		pop r6
 4497 0410 5F90      		pop r5
 4498 0412 4F90      		pop r4
 4499 0414 3F90      		pop r3
 4500 0416 2F90      		pop r2
 4501 0418 0895      		ret
 4502               	.LVL314:
 4503               	.L121:
 165:../src/matrix_utils.c **** 		(*eigVals)[1] = (*A)[1][1];
 4504               		.loc 1 165 0
 4505 041a F101      		movw r30,r2
 4506 041c 8081      		ld r24,Z
 4507 041e 9181      		ldd r25,Z+1
 4508 0420 A281      		ldd r26,Z+2
 4509 0422 B381      		ldd r27,Z+3
 4510 0424 EEA5      		ldd r30,Y+46
 4511 0426 FFA5      		ldd r31,Y+47
 4512 0428 8083      		st Z,r24
 4513 042a 9183      		std Z+1,r25
 4514 042c A283      		std Z+2,r26
 4515 042e B383      		std Z+3,r27
 166:../src/matrix_utils.c **** 		(*eigVals)[2] = (*A)[2][2];
 4516               		.loc 1 166 0
 4517 0430 F101      		movw r30,r2
 4518 0432 8089      		ldd r24,Z+16
 4519 0434 9189      		ldd r25,Z+17
 4520 0436 A289      		ldd r26,Z+18
 4521 0438 B389      		ldd r27,Z+19
 4522 043a EEA5      		ldd r30,Y+46
 4523 043c FFA5      		ldd r31,Y+47
 4524 043e 8483      		std Z+4,r24
 4525 0440 9583      		std Z+5,r25
 4526 0442 A683      		std Z+6,r26
 4527 0444 B783      		std Z+7,r27
 167:../src/matrix_utils.c **** 	}else{
 4528               		.loc 1 167 0
 4529 0446 F101      		movw r30,r2
 4530 0448 80A1      		ldd r24,Z+32
 4531 044a 91A1      		ldd r25,Z+33
 4532 044c A2A1      		ldd r26,Z+34
 4533 044e B3A1      		ldd r27,Z+35
 4534 0450 EEA5      		ldd r30,Y+46
 4535 0452 FFA5      		ldd r31,Y+47
 4536 0454 8087      		std Z+8,r24
 4537 0456 9187      		std Z+9,r25
 4538 0458 A287      		std Z+10,r26
 4539 045a B387      		std Z+11,r27
 4540 045c 00C0      		rjmp .L104
 4541               	.LVL315:
 4542               	.L116:
 4543               	.LBB107:
 4544 045e C12C      		mov r12,__zero_reg__
 4545 0460 D12C      		mov r13,__zero_reg__
 4546 0462 20E8      		ldi r18,lo8(-128)
 4547 0464 E22E      		mov r14,r18
 4548 0466 2FEB      		ldi r18,lo8(-65)
 4549 0468 F22E      		mov r15,r18
 4550               	.LVL316:
 4551 046a 8824      		clr r8
 4552 046c 8A94      		dec r8
 4553 046e 982C      		mov r9,r8
 4554 0470 A82C      		mov r10,r8
 4555 0472 3EE3      		ldi r19,lo8(62)
 4556 0474 B32E      		mov r11,r19
 4557 0476 00C0      		rjmp .L115
 4558               	.LVL317:
 4559               	.L123:
 182:../src/matrix_utils.c **** 		}
 4560               		.loc 1 182 0
 4561 0478 C701      		movw r24,r14
 4562 047a B601      		movw r22,r12
 4563 047c 0E94 0000 		call acos
 4564               	.LVL318:
 4565 0480 20E0      		ldi r18,0
 4566 0482 30E0      		ldi r19,0
 4567 0484 40E4      		ldi r20,lo8(64)
 4568 0486 50E4      		ldi r21,lo8(64)
 4569 0488 0E94 0000 		call __divsf3
 4570               	.LVL319:
 4571 048c 6B01      		movw r12,r22
 4572 048e 7C01      		movw r14,r24
 4573               	.LVL320:
 4574 0490 0E94 0000 		call cos
 4575               	.LVL321:
 4576 0494 4B01      		movw r8,r22
 4577 0496 5C01      		movw r10,r24
 4578 0498 22E9      		ldi r18,lo8(-110)
 4579 049a 3AE0      		ldi r19,lo8(10)
 4580 049c 46E0      		ldi r20,lo8(6)
 4581 049e 50E4      		ldi r21,lo8(64)
 4582 04a0 C701      		movw r24,r14
 4583 04a2 B601      		movw r22,r12
 4584 04a4 0E94 0000 		call __addsf3
 4585               	.LVL322:
 4586 04a8 0E94 0000 		call cos
 4587               	.LVL323:
 4588 04ac 6B01      		movw r12,r22
 4589 04ae 7C01      		movw r14,r24
 4590               	.LVL324:
 4591 04b0 00C0      		rjmp .L115
 4592               	.LBE107:
 4593               		.cfi_endproc
 4594               	.LFE41:
 4596               		.section	.rodata.str1.1,"aMS",@progbits,1
 4597               	.LC1:
 4598 0000 5741 524E 		.string	"WARNING! Input Matrix A has nondistinct eigenvalues.\r\nI couldn't find a non-trivial exa
 4598      494E 4721 
 4598      2049 6E70 
 4598      7574 204D 
 4598      6174 7269 
 4599               		.section	.rodata
 4600               	.LC0:
 4601 0000 00        		.byte	0
 4602 0001 00        		.byte	0
 4603 0002 80        		.byte	-128
 4604 0003 3F        		.byte	63
 4605 0004 00        		.byte	0
 4606 0005 00        		.byte	0
 4607 0006 00        		.byte	0
 4608 0007 00        		.byte	0
 4609 0008 00        		.byte	0
 4610 0009 00        		.byte	0
 4611 000a 00        		.byte	0
 4612 000b 00        		.byte	0
 4613 000c 00        		.byte	0
 4614 000d 00        		.byte	0
 4615 000e 00        		.byte	0
 4616 000f 00        		.byte	0
 4617 0010 00        		.byte	0
 4618 0011 00        		.byte	0
 4619 0012 80        		.byte	-128
 4620 0013 3F        		.byte	63
 4621 0014 00        		.byte	0
 4622 0015 00        		.byte	0
 4623 0016 00        		.byte	0
 4624 0017 00        		.byte	0
 4625 0018 00        		.byte	0
 4626 0019 00        		.byte	0
 4627 001a 00        		.byte	0
 4628 001b 00        		.byte	0
 4629 001c 00        		.byte	0
 4630 001d 00        		.byte	0
 4631 001e 00        		.byte	0
 4632 001f 00        		.byte	0
 4633 0020 00        		.byte	0
 4634 0021 00        		.byte	0
 4635 0022 80        		.byte	-128
 4636 0023 3F        		.byte	63
 4637 0024 00        		.byte	0
 4638 0025 00        		.byte	0
 4639 0026 80        		.byte	-128
 4640 0027 3F        		.byte	63
 4641 0028 00        		.byte	0
 4642 0029 00        		.byte	0
 4643 002a 00        		.byte	0
 4644 002b 00        		.byte	0
 4645 002c 00        		.byte	0
 4646 002d 00        		.byte	0
 4647 002e 00        		.byte	0
 4648 002f 00        		.byte	0
 4649 0030 00        		.byte	0
 4650 0031 00        		.byte	0
 4651 0032 00        		.byte	0
 4652 0033 00        		.byte	0
 4653 0034 00        		.byte	0
 4654 0035 00        		.byte	0
 4655 0036 80        		.byte	-128
 4656 0037 3F        		.byte	63
 4657 0038 00        		.byte	0
 4658 0039 00        		.byte	0
 4659 003a 00        		.byte	0
 4660 003b 00        		.byte	0
 4661 003c 00        		.byte	0
 4662 003d 00        		.byte	0
 4663 003e 00        		.byte	0
 4664 003f 00        		.byte	0
 4665 0040 00        		.byte	0
 4666 0041 00        		.byte	0
 4667 0042 00        		.byte	0
 4668 0043 00        		.byte	0
 4669 0044 00        		.byte	0
 4670 0045 00        		.byte	0
 4671 0046 80        		.byte	-128
 4672 0047 3F        		.byte	63
 4673 0048 00        		.byte	0
 4674 0049 00        		.byte	0
 4675 004a 80        		.byte	-128
 4676 004b 3F        		.byte	63
 4677 004c 00        		.byte	0
 4678 004d 00        		.byte	0
 4679 004e 00        		.byte	0
 4680 004f 00        		.byte	0
 4681 0050 00        		.byte	0
 4682 0051 00        		.byte	0
 4683 0052 00        		.byte	0
 4684 0053 00        		.byte	0
 4685 0054 00        		.byte	0
 4686 0055 00        		.byte	0
 4687 0056 00        		.byte	0
 4688 0057 00        		.byte	0
 4689 0058 00        		.byte	0
 4690 0059 00        		.byte	0
 4691 005a 80        		.byte	-128
 4692 005b 3F        		.byte	63
 4693 005c 00        		.byte	0
 4694 005d 00        		.byte	0
 4695 005e 00        		.byte	0
 4696 005f 00        		.byte	0
 4697 0060 00        		.byte	0
 4698 0061 00        		.byte	0
 4699 0062 00        		.byte	0
 4700 0063 00        		.byte	0
 4701 0064 00        		.byte	0
 4702 0065 00        		.byte	0
 4703 0066 00        		.byte	0
 4704 0067 00        		.byte	0
 4705 0068 00        		.byte	0
 4706 0069 00        		.byte	0
 4707 006a 80        		.byte	-128
 4708 006b 3F        		.byte	63
 4709               		.section	.text.eigensystem,"ax",@progbits
 4710               	.global	eigensystem
 4712               	eigensystem:
 4713               	.LFB43:
 215:../src/matrix_utils.c **** 	eigenvalues(eigVals, A);
 4714               		.loc 1 215 0
 4715               		.cfi_startproc
 4716               	.LVL325:
 4717 0000 2F92      		push r2
 4718               	.LCFI240:
 4719               		.cfi_def_cfa_offset 4
 4720               		.cfi_offset 2, -3
 4721 0002 3F92      		push r3
 4722               	.LCFI241:
 4723               		.cfi_def_cfa_offset 5
 4724               		.cfi_offset 3, -4
 4725 0004 4F92      		push r4
 4726               	.LCFI242:
 4727               		.cfi_def_cfa_offset 6
 4728               		.cfi_offset 4, -5
 4729 0006 5F92      		push r5
 4730               	.LCFI243:
 4731               		.cfi_def_cfa_offset 7
 4732               		.cfi_offset 5, -6
 4733 0008 6F92      		push r6
 4734               	.LCFI244:
 4735               		.cfi_def_cfa_offset 8
 4736               		.cfi_offset 6, -7
 4737 000a 7F92      		push r7
 4738               	.LCFI245:
 4739               		.cfi_def_cfa_offset 9
 4740               		.cfi_offset 7, -8
 4741 000c 8F92      		push r8
 4742               	.LCFI246:
 4743               		.cfi_def_cfa_offset 10
 4744               		.cfi_offset 8, -9
 4745 000e 9F92      		push r9
 4746               	.LCFI247:
 4747               		.cfi_def_cfa_offset 11
 4748               		.cfi_offset 9, -10
 4749 0010 AF92      		push r10
 4750               	.LCFI248:
 4751               		.cfi_def_cfa_offset 12
 4752               		.cfi_offset 10, -11
 4753 0012 BF92      		push r11
 4754               	.LCFI249:
 4755               		.cfi_def_cfa_offset 13
 4756               		.cfi_offset 11, -12
 4757 0014 CF92      		push r12
 4758               	.LCFI250:
 4759               		.cfi_def_cfa_offset 14
 4760               		.cfi_offset 12, -13
 4761 0016 DF92      		push r13
 4762               	.LCFI251:
 4763               		.cfi_def_cfa_offset 15
 4764               		.cfi_offset 13, -14
 4765 0018 EF92      		push r14
 4766               	.LCFI252:
 4767               		.cfi_def_cfa_offset 16
 4768               		.cfi_offset 14, -15
 4769 001a FF92      		push r15
 4770               	.LCFI253:
 4771               		.cfi_def_cfa_offset 17
 4772               		.cfi_offset 15, -16
 4773 001c 0F93      		push r16
 4774               	.LCFI254:
 4775               		.cfi_def_cfa_offset 18
 4776               		.cfi_offset 16, -17
 4777 001e 1F93      		push r17
 4778               	.LCFI255:
 4779               		.cfi_def_cfa_offset 19
 4780               		.cfi_offset 17, -18
 4781 0020 CF93      		push r28
 4782               	.LCFI256:
 4783               		.cfi_def_cfa_offset 20
 4784               		.cfi_offset 28, -19
 4785 0022 DF93      		push r29
 4786               	.LCFI257:
 4787               		.cfi_def_cfa_offset 21
 4788               		.cfi_offset 29, -20
 4789 0024 CDB7      		in r28,__SP_L__
 4790 0026 DEB7      		in r29,__SP_H__
 4791               	.LCFI258:
 4792               		.cfi_def_cfa_register 28
 4793 0028 C25A      		subi r28,-94
 4794 002a D109      		sbc r29,__zero_reg__
 4795               	.LCFI259:
 4796               		.cfi_def_cfa_offset 183
 4797 002c CDBF      		out __SP_L__,r28
 4798 002e DEBF      		out __SP_H__,r29
 4799               	/* prologue: function */
 4800               	/* frame size = 162 */
 4801               	/* stack size = 180 */
 4802               	.L__stack_usage = 180
 4803 0030 8C01      		movw r16,r24
 4804 0032 CF55      		subi r28,lo8(-161)
 4805 0034 DF4F      		sbci r29,hi8(-161)
 4806 0036 6883      		st Y,r22
 4807 0038 7983      		std Y+1,r23
 4808 003a C15A      		subi r28,lo8(161)
 4809 003c D040      		sbci r29,hi8(161)
 4810 003e 2A01      		movw r4,r20
 216:../src/matrix_utils.c **** 	if( (*eigVals)[0]==(*eigVals)[1] || (*eigVals)[0]==(*eigVals)[2] || (*eigVals)[1]==(*eigVals)[2] )
 4811               		.loc 1 216 0
 4812 0040 BA01      		movw r22,r20
 4813               	.LVL326:
 4814 0042 0E94 0000 		call eigenvalues
 4815               	.LVL327:
 217:../src/matrix_utils.c **** 		printf_P("WARNING! Input Matrix A has nondistinct eigenvalues.\r\nI couldn't find a non-trivial e
 4816               		.loc 1 217 0
 4817 0046 D801      		movw r26,r16
 4818 0048 AD90      		ld r10,X+
 4819 004a BD90      		ld r11,X+
 4820 004c CD90      		ld r12,X+
 4821 004e DC90      		ld r13,X
 4822 0050 1397      		sbiw r26,3
 4823 0052 1496      		adiw r26,4
 4824 0054 6D90      		ld r6,X+
 4825 0056 7D90      		ld r7,X+
 4826 0058 8D90      		ld r8,X+
 4827 005a 9C90      		ld r9,X
 4828 005c 1797      		sbiw r26,4+3
 4829 005e A401      		movw r20,r8
 4830 0060 9301      		movw r18,r6
 4831 0062 C601      		movw r24,r12
 4832 0064 B501      		movw r22,r10
 4833 0066 0E94 0000 		call __eqsf2
 4834               	.LVL328:
 4835 006a 8823      		tst r24
 4836 006c 01F0      		breq .L125
 217:../src/matrix_utils.c **** 		printf_P("WARNING! Input Matrix A has nondistinct eigenvalues.\r\nI couldn't find a non-trivial e
 4837               		.loc 1 217 0 is_stmt 0 discriminator 1
 4838 006e D801      		movw r26,r16
 4839 0070 1896      		adiw r26,8
 4840 0072 8D91      		ld r24,X+
 4841 0074 9D91      		ld r25,X+
 4842 0076 0D90      		ld __tmp_reg__,X+
 4843 0078 BC91      		ld r27,X
 4844 007a A02D      		mov r26,__tmp_reg__
 4845 007c C956      		subi r28,lo8(-151)
 4846 007e DF4F      		sbci r29,hi8(-151)
 4847 0080 8883      		st Y,r24
 4848 0082 9983      		std Y+1,r25
 4849 0084 AA83      		std Y+2,r26
 4850 0086 BB83      		std Y+3,r27
 4851 0088 C759      		subi r28,lo8(151)
 4852 008a D040      		sbci r29,hi8(151)
 4853 008c 9C01      		movw r18,r24
 4854 008e AD01      		movw r20,r26
 4855 0090 C601      		movw r24,r12
 4856 0092 B501      		movw r22,r10
 4857 0094 0E94 0000 		call __eqsf2
 4858               	.LVL329:
 4859 0098 8111      		cpse r24,__zero_reg__
 4860 009a 00C0      		rjmp .L178
 4861               	.L125:
 218:../src/matrix_utils.c **** 	}
 4862               		.loc 1 218 0 is_stmt 1
 4863 009c 80E0      		ldi r24,lo8(.LC1)
 4864 009e 90E0      		ldi r25,hi8(.LC1)
 4865 00a0 9F93      		push r25
 4866 00a2 8F93      		push r24
 4867 00a4 0E94 0000 		call printf_P
 4868               	.LVL330:
 4869 00a8 F801      		movw r30,r16
 4870 00aa A080      		ld r10,Z
 4871 00ac B180      		ldd r11,Z+1
 4872 00ae C280      		ldd r12,Z+2
 4873 00b0 D380      		ldd r13,Z+3
 4874 00b2 0F90      		pop __tmp_reg__
 4875 00b4 0F90      		pop __tmp_reg__
 4876               	.L126:
 220:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 4877               		.loc 1 220 0
 4878 00b6 8CE6      		ldi r24,lo8(108)
 4879 00b8 E0E0      		ldi r30,lo8(.LC0)
 4880 00ba F0E0      		ldi r31,hi8(.LC0)
 4881 00bc DE01      		movw r26,r28
 4882 00be 1196      		adiw r26,1
 4883               		0:
 4884 00c0 0190      		ld r0,Z+
 4885 00c2 0D92      		st X+,r0
 4886 00c4 8A95      		dec r24
 4887 00c6 01F4      		brne 0b
 4888               	.LVL331:
 4889 00c8 C801      		movw r24,r16
 4890 00ca 0496      		adiw r24,4
 4891 00cc C956      		subi r28,lo8(-151)
 4892 00ce DF4F      		sbci r29,hi8(-151)
 4893 00d0 8883      		st Y,r24
 4894 00d2 9983      		std Y+1,r25
 4895 00d4 C759      		subi r28,lo8(151)
 4896 00d6 D040      		sbci r29,hi8(151)
 4897 00d8 DE01      		movw r26,r28
 4898 00da A359      		subi r26,-109
 4899 00dc BF4F      		sbci r27,-1
 4900 00de CB56      		subi r28,lo8(-149)
 4901 00e0 DF4F      		sbci r29,hi8(-149)
 4902 00e2 A883      		st Y,r26
 4903 00e4 B983      		std Y+1,r27
 4904 00e6 C559      		subi r28,lo8(149)
 4905 00e8 D040      		sbci r29,hi8(149)
 4906 00ea FE01      		movw r30,r28
 4907 00ec 3196      		adiw r30,1
 4908 00ee 4F01      		movw r8,r30
 4909 00f0 C201      		movw r24,r4
 4910 00f2 8496      		adiw r24,36
 4911 00f4 3C01      		movw r6,r24
 4912               	.LVL332:
 4913               	.L135:
 220:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 4914               		.loc 1 220 0 is_stmt 0 discriminator 3
 4915 00f6 7401      		movw r14,r8
 4916 00f8 93E0      		ldi r25,lo8(3)
 4917 00fa 392E      		mov r3,r25
 4918               	.LVL333:
 4919               	.L128:
 220:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 4920               		.loc 1 220 0
 4921 00fc 8701      		movw r16,r14
 4922 00fe 212C      		mov r2,__zero_reg__
 4923               	.LVL334:
 4924               	.L129:
 4925               	.LBB108:
 4926               	.LBB109:
 4927               	.LBB110:
 4928               	.LBB111:
  26:../src/matrix_utils.c **** 		}
 4929               		.loc 1 26 0 is_stmt 1
 4930 0100 A601      		movw r20,r12
 4931 0102 9501      		movw r18,r10
 4932 0104 D801      		movw r26,r16
 4933 0106 6D91      		ld r22,X+
 4934 0108 7D91      		ld r23,X+
 4935 010a 8D91      		ld r24,X+
 4936 010c 9C91      		ld r25,X
 4937 010e 0E94 0000 		call __mulsf3
 4938               	.LVL335:
 4939 0112 F801      		movw r30,r16
 4940 0114 6193      		st Z+,r22
 4941 0116 7193      		st Z+,r23
 4942 0118 8193      		st Z+,r24
 4943 011a 9193      		st Z+,r25
 4944 011c 8F01      		movw r16,r30
  25:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]*s;
 4945               		.loc 1 25 0
 4946 011e 2394      		inc r2
 4947               	.LVL336:
 4948 0120 F3E0      		ldi r31,lo8(3)
 4949 0122 2F12      		cpse r2,r31
 4950 0124 00C0      		rjmp .L129
 4951               	.LVL337:
 4952 0126 3A94      		dec r3
 4953               	.LVL338:
 4954 0128 8CE0      		ldi r24,12
 4955 012a E80E      		add r14,r24
 4956 012c F11C      		adc r15,__zero_reg__
 4957               	.LBE111:
  24:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 4958               		.loc 1 24 0
 4959 012e 3110      		cpse r3,__zero_reg__
 4960 0130 00C0      		rjmp .L128
 4961 0132 6201      		movw r12,r4
 4962 0134 5401      		movw r10,r8
 4963               	.LVL339:
 4964               	.L132:
 4965               	.LBE110:
 4966               	.LBE109:
 4967               	.LBE108:
 220:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 4968               		.loc 1 220 0
 4969 0136 8501      		movw r16,r10
 4970 0138 7601      		movw r14,r12
 4971 013a 312C      		mov r3,__zero_reg__
 4972               	.LVL340:
 4973               	.L131:
 4974               	.LBB119:
 4975               	.LBB114:
 4976               	.LBB115:
 4977               	.LBB116:
  51:../src/matrix_utils.c **** 		}
 4978               		.loc 1 51 0
 4979 013c D701      		movw r26,r14
 4980 013e 6D91      		ld r22,X+
 4981 0140 7D91      		ld r23,X+
 4982 0142 8D91      		ld r24,X+
 4983 0144 9D91      		ld r25,X+
 4984 0146 7D01      		movw r14,r26
 4985 0148 F801      		movw r30,r16
 4986 014a 2081      		ld r18,Z
 4987 014c 3181      		ldd r19,Z+1
 4988 014e 4281      		ldd r20,Z+2
 4989 0150 5381      		ldd r21,Z+3
 4990 0152 0E94 0000 		call __subsf3
 4991               	.LVL341:
 4992 0156 D801      		movw r26,r16
 4993 0158 6D93      		st X+,r22
 4994 015a 7D93      		st X+,r23
 4995 015c 8D93      		st X+,r24
 4996 015e 9D93      		st X+,r25
 4997 0160 8D01      		movw r16,r26
  50:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j] - (*B)[i][j];
 4998               		.loc 1 50 0
 4999 0162 3394      		inc r3
 5000               	.LVL342:
 5001 0164 B3E0      		ldi r27,lo8(3)
 5002 0166 3B12      		cpse r3,r27
 5003 0168 00C0      		rjmp .L131
 5004               	.LVL343:
 5005 016a ECE0      		ldi r30,12
 5006 016c CE0E      		add r12,r30
 5007 016e D11C      		adc r13,__zero_reg__
 5008 0170 FCE0      		ldi r31,12
 5009 0172 AF0E      		add r10,r31
 5010 0174 B11C      		adc r11,__zero_reg__
 5011               	.LBE116:
  49:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5012               		.loc 1 49 0
 5013 0176 C614      		cp r12,r6
 5014 0178 D704      		cpc r13,r7
 5015 017a 01F4      		brne .L132
 5016               	.LVL344:
 5017 017c 84E2      		ldi r24,36
 5018 017e 880E      		add r8,r24
 5019 0180 911C      		adc r9,__zero_reg__
 5020               	.LBE115:
 5021               	.LBE114:
 221:../src/matrix_utils.c **** 		matrixScale(&(charEqn[i]), (*eigVals)[i]);
 5022               		.loc 1 221 0 discriminator 3
 5023 0182 CB56      		subi r28,lo8(-149)
 5024 0184 DF4F      		sbci r29,hi8(-149)
 5025 0186 A881      		ld r26,Y
 5026 0188 B981      		ldd r27,Y+1
 5027 018a C559      		subi r28,lo8(149)
 5028 018c D040      		sbci r29,hi8(149)
 5029 018e A815      		cp r26,r8
 5030 0190 B905      		cpc r27,r9
 5031 0192 01F0      		breq .L134
 5032 0194 C956      		subi r28,lo8(-151)
 5033 0196 DF4F      		sbci r29,hi8(-151)
 5034 0198 E881      		ld r30,Y
 5035 019a F981      		ldd r31,Y+1
 5036 019c C759      		subi r28,lo8(151)
 5037 019e D040      		sbci r29,hi8(151)
 5038 01a0 A190      		ld r10,Z+
 5039 01a2 B190      		ld r11,Z+
 5040 01a4 C190      		ld r12,Z+
 5041 01a6 D190      		ld r13,Z+
 5042 01a8 C956      		subi r28,lo8(-151)
 5043 01aa DF4F      		sbci r29,hi8(-151)
 5044 01ac E883      		st Y,r30
 5045 01ae F983      		std Y+1,r31
 5046 01b0 C759      		subi r28,lo8(151)
 5047 01b2 D040      		sbci r29,hi8(151)
 5048 01b4 00C0      		rjmp .L135
 5049               	.L134:
 5050 01b6 CF55      		subi r28,lo8(-161)
 5051 01b8 DF4F      		sbci r29,hi8(-161)
 5052 01ba E880      		ld r14,Y
 5053 01bc F980      		ldd r15,Y+1
 5054 01be C15A      		subi r28,lo8(161)
 5055 01c0 D040      		sbci r29,hi8(161)
 5056 01c2 6701      		movw r12,r14
 5057 01c4 84E2      		ldi r24,36
 5058 01c6 C80E      		add r12,r24
 5059 01c8 D11C      		adc r13,__zero_reg__
 5060               	.L137:
 5061               	.LVL345:
 5062               	.LBB117:
 5063               	.LBB112:
  24:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5064               		.loc 1 24 0
 5065 01ca 5701      		movw r10,r14
 5066 01cc 13E0      		ldi r17,lo8(3)
 5067               	.LVL346:
 5068               	.L136:
 5069               	.LBE112:
 5070               	.LBE117:
 5071               	.LBE119:
 5072               	.LBB120:
 5073               	.LBB121:
 5074               	.LBB122:
  26:../src/matrix_utils.c **** 		}
 5075               		.loc 1 26 0
 5076 01ce 20E0      		ldi r18,0
 5077 01d0 30E0      		ldi r19,0
 5078 01d2 A901      		movw r20,r18
 5079 01d4 D501      		movw r26,r10
 5080 01d6 6D91      		ld r22,X+
 5081 01d8 7D91      		ld r23,X+
 5082 01da 8D91      		ld r24,X+
 5083 01dc 9C91      		ld r25,X
 5084 01de 0E94 0000 		call __mulsf3
 5085               	.LVL347:
 5086 01e2 F501      		movw r30,r10
 5087 01e4 6193      		st Z+,r22
 5088 01e6 7193      		st Z+,r23
 5089 01e8 8193      		st Z+,r24
 5090 01ea 9193      		st Z+,r25
 5091 01ec 5F01      		movw r10,r30
 5092               	.LVL348:
 5093 01ee 1150      		subi r17,lo8(-(-1))
 5094               	.LVL349:
  25:../src/matrix_utils.c **** 			(*A)[i][j] = (*A)[i][j]*s;
 5095               		.loc 1 25 0
 5096 01f0 01F4      		brne .L136
 5097               	.LVL350:
 5098 01f2 FCE0      		ldi r31,12
 5099 01f4 EF0E      		add r14,r31
 5100 01f6 F11C      		adc r15,__zero_reg__
 5101               	.LBE122:
  24:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5102               		.loc 1 24 0
 5103 01f8 EC14      		cp r14,r12
 5104 01fa FD04      		cpc r15,r13
 5105 01fc 01F4      		brne .L137
 5106 01fe DE01      		movw r26,r28
 5107 0200 9596      		adiw r26,37
 5108 0202 CF56      		subi r28,lo8(-145)
 5109 0204 DF4F      		sbci r29,hi8(-145)
 5110 0206 A883      		st Y,r26
 5111 0208 B983      		std Y+1,r27
 5112 020a C159      		subi r28,lo8(145)
 5113 020c D040      		sbci r29,hi8(145)
 5114 020e FE01      		movw r30,r28
 5115 0210 E359      		subi r30,-109
 5116 0212 FF4F      		sbci r31,-1
 5117 0214 C556      		subi r28,lo8(-155)
 5118 0216 DF4F      		sbci r29,hi8(-155)
 5119 0218 E883      		st Y,r30
 5120 021a F983      		std Y+1,r31
 5121 021c CB59      		subi r28,lo8(155)
 5122 021e D040      		sbci r29,hi8(155)
 5123 0220 1F01      		movw r2,r30
 5124               	.LVL351:
 5125 0222 F4E2      		ldi r31,36
 5126 0224 2F0E      		add r2,r31
 5127 0226 311C      		adc r3,__zero_reg__
 5128 0228 CE01      		movw r24,r28
 5129 022a 8359      		subi r24,-109
 5130 022c 9F4F      		sbci r25,-1
 5131 022e 5C01      		movw r10,r24
 5132 0230 FE01      		movw r30,r28
 5133 0232 EB5A      		subi r30,-85
 5134 0234 FF4F      		sbci r31,-1
 5135 0236 CD56      		subi r28,lo8(-147)
 5136 0238 DF4F      		sbci r29,hi8(-147)
 5137 023a E883      		st Y,r30
 5138 023c F983      		std Y+1,r31
 5139 023e C359      		subi r28,lo8(147)
 5140 0240 D040      		sbci r29,hi8(147)
 5141 0242 C356      		subi r28,lo8(-157)
 5142 0244 DF4F      		sbci r29,hi8(-157)
 5143 0246 A883      		st Y,r26
 5144 0248 B983      		std Y+1,r27
 5145 024a CD59      		subi r28,lo8(157)
 5146 024c D040      		sbci r29,hi8(157)
 5147               	.L141:
 5148               	.LVL352:
 5149               	.LBE121:
 5150               	.LBE120:
 5151               	.LBB124:
 5152               	.LBB118:
 5153               	.LBB113:
 5154 024e CE01      		movw r24,r28
 5155 0250 875B      		subi r24,-73
 5156 0252 9F4F      		sbci r25,-1
 5157 0254 6C01      		movw r12,r24
 5158 0256 C956      		subi r28,lo8(-151)
 5159 0258 DF4F      		sbci r29,hi8(-151)
 5160 025a A882      		st Y,r10
 5161 025c B982      		std Y+1,r11
 5162 025e C759      		subi r28,lo8(151)
 5163 0260 D040      		sbci r29,hi8(151)
 5164 0262 C356      		subi r28,lo8(-157)
 5165 0264 DF4F      		sbci r29,hi8(-157)
 5166 0266 6880      		ld r6,Y
 5167 0268 7980      		ldd r7,Y+1
 5168 026a CD59      		subi r28,lo8(157)
 5169 026c D040      		sbci r29,hi8(157)
 5170 026e C156      		subi r28,lo8(-159)
 5171 0270 DF4F      		sbci r29,hi8(-159)
 5172 0272 A882      		st Y,r10
 5173 0274 B982      		std Y+1,r11
 5174 0276 CF59      		subi r28,lo8(159)
 5175 0278 D040      		sbci r29,hi8(159)
 5176               	.LVL353:
 5177               	.L140:
 5178 027a 8601      		movw r16,r12
 5179 027c 7301      		movw r14,r6
 5180 027e 83E0      		ldi r24,lo8(3)
 5181 0280 582E      		mov r5,r24
 5182 0282 812C      		mov r8,__zero_reg__
 5183 0284 912C      		mov r9,__zero_reg__
 5184 0286 5401      		movw r10,r8
 5185               	.LVL354:
 5186               	.L139:
 5187               	.LBE113:
 5188               	.LBE118:
 5189               	.LBE124:
 5190               	.LBB125:
 5191               	.LBB126:
 5192               	.LBB127:
 5193               	.LBB128:
  61:../src/matrix_utils.c **** 			}
 5194               		.loc 1 61 0
 5195 0288 D701      		movw r26,r14
 5196 028a 6D91      		ld r22,X+
 5197 028c 7D91      		ld r23,X+
 5198 028e 8D91      		ld r24,X+
 5199 0290 9D91      		ld r25,X+
 5200 0292 7D01      		movw r14,r26
 5201 0294 F801      		movw r30,r16
 5202 0296 2081      		ld r18,Z
 5203 0298 3181      		ldd r19,Z+1
 5204 029a 4281      		ldd r20,Z+2
 5205 029c 5381      		ldd r21,Z+3
 5206 029e 0E94 0000 		call __mulsf3
 5207               	.LVL355:
 5208 02a2 9B01      		movw r18,r22
 5209 02a4 AC01      		movw r20,r24
 5210 02a6 C501      		movw r24,r10
 5211 02a8 B401      		movw r22,r8
 5212 02aa 0E94 0000 		call __addsf3
 5213               	.LVL356:
 5214 02ae 4B01      		movw r8,r22
 5215 02b0 5C01      		movw r10,r24
 5216               	.LVL357:
 5217 02b2 5A94      		dec r5
 5218               	.LVL358:
 5219 02b4 045F      		subi r16,-12
 5220 02b6 1F4F      		sbci r17,-1
  60:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 5221               		.loc 1 60 0
 5222 02b8 5110      		cpse r5,__zero_reg__
 5223 02ba 00C0      		rjmp .L139
 5224 02bc C956      		subi r28,lo8(-151)
 5225 02be DF4F      		sbci r29,hi8(-151)
 5226 02c0 A881      		ld r26,Y
 5227 02c2 B981      		ldd r27,Y+1
 5228 02c4 C759      		subi r28,lo8(151)
 5229 02c6 D040      		sbci r29,hi8(151)
 5230 02c8 6D93      		st X+,r22
 5231 02ca 7D93      		st X+,r23
 5232 02cc 8D93      		st X+,r24
 5233 02ce 9D93      		st X+,r25
 5234 02d0 C956      		subi r28,lo8(-151)
 5235 02d2 DF4F      		sbci r29,hi8(-151)
 5236 02d4 A883      		st Y,r26
 5237 02d6 B983      		std Y+1,r27
 5238 02d8 C759      		subi r28,lo8(151)
 5239 02da D040      		sbci r29,hi8(151)
 5240 02dc B4E0      		ldi r27,4
 5241 02de CB0E      		add r12,r27
 5242 02e0 D11C      		adc r13,__zero_reg__
 5243               	.LBE128:
  58:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 5244               		.loc 1 58 0
 5245 02e2 CD56      		subi r28,lo8(-147)
 5246 02e4 DF4F      		sbci r29,hi8(-147)
 5247 02e6 E881      		ld r30,Y
 5248 02e8 F981      		ldd r31,Y+1
 5249 02ea C359      		subi r28,lo8(147)
 5250 02ec D040      		sbci r29,hi8(147)
 5251 02ee EC15      		cp r30,r12
 5252 02f0 FD05      		cpc r31,r13
 5253 02f2 01F4      		brne .L140
 5254 02f4 C156      		subi r28,lo8(-159)
 5255 02f6 DF4F      		sbci r29,hi8(-159)
 5256 02f8 A880      		ld r10,Y
 5257 02fa B980      		ldd r11,Y+1
 5258 02fc CF59      		subi r28,lo8(159)
 5259 02fe D040      		sbci r29,hi8(159)
 5260               	.LVL359:
 5261 0300 C356      		subi r28,lo8(-157)
 5262 0302 DF4F      		sbci r29,hi8(-157)
 5263 0304 8881      		ld r24,Y
 5264 0306 9981      		ldd r25,Y+1
 5265 0308 CD59      		subi r28,lo8(157)
 5266 030a D040      		sbci r29,hi8(157)
 5267 030c 0C96      		adiw r24,12
 5268 030e C356      		subi r28,lo8(-157)
 5269 0310 DF4F      		sbci r29,hi8(-157)
 5270 0312 8883      		st Y,r24
 5271 0314 9983      		std Y+1,r25
 5272 0316 CD59      		subi r28,lo8(157)
 5273 0318 D040      		sbci r29,hi8(157)
 5274 031a 9CE0      		ldi r25,12
 5275 031c A90E      		add r10,r25
 5276 031e B11C      		adc r11,__zero_reg__
 5277               	.LBE127:
  57:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5278               		.loc 1 57 0
 5279 0320 2A14      		cp r2,r10
 5280 0322 3B04      		cpc r3,r11
 5281 0324 01F0      		breq .+2
 5282 0326 00C0      		rjmp .L141
 5283               	.LVL360:
 5284               	.LBE126:
 5285               	.LBE125:
 228:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[0]), &(charEqn[2]));
 5286               		.loc 1 228 0
 5287 0328 BE01      		movw r22,r28
 5288 032a 6359      		subi r22,-109
 5289 032c 7F4F      		sbci r23,-1
 5290 032e CF55      		subi r28,lo8(-161)
 5291 0330 DF4F      		sbci r29,hi8(-161)
 5292 0332 8881      		ld r24,Y
 5293 0334 9981      		ldd r25,Y+1
 5294 0336 C15A      		subi r28,lo8(161)
 5295 0338 D040      		sbci r29,hi8(161)
 5296 033a 0E94 0000 		call getEigenvector
 5297               	.LVL361:
 5298 033e DE01      		movw r26,r28
 5299 0340 A359      		subi r26,-109
 5300 0342 BF4F      		sbci r27,-1
 5301 0344 C956      		subi r28,lo8(-151)
 5302 0346 DF4F      		sbci r29,hi8(-151)
 5303 0348 A883      		st Y,r26
 5304 034a B983      		std Y+1,r27
 5305 034c C759      		subi r28,lo8(151)
 5306 034e D040      		sbci r29,hi8(151)
 5307 0350 FE01      		movw r30,r28
 5308 0352 3196      		adiw r30,1
 5309 0354 4F01      		movw r8,r30
 5310               	.LVL362:
 5311               	.L143:
 5312               	.LBB129:
 5313               	.LBB123:
  24:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5314               		.loc 1 24 0
 5315 0356 FE01      		movw r30,r28
 5316 0358 E75B      		subi r30,-73
 5317 035a FF4F      		sbci r31,-1
 5318 035c 7F01      		movw r14,r30
 5319 035e C956      		subi r28,lo8(-151)
 5320 0360 DF4F      		sbci r29,hi8(-151)
 5321 0362 C880      		ld r12,Y
 5322 0364 D980      		ldd r13,Y+1
 5323 0366 C759      		subi r28,lo8(151)
 5324 0368 D040      		sbci r29,hi8(151)
 5325               	.LVL363:
 5326               	.L145:
 5327 036a 5701      		movw r10,r14
 5328 036c 3401      		movw r6,r8
 5329 036e 212C      		mov r2,__zero_reg__
 5330 0370 312C      		mov r3,__zero_reg__
 5331 0372 2101      		movw r4,r2
 5332               	.LBE123:
 5333               	.LBE129:
 5334               	.LBB130:
 5335               	.LBB131:
 5336               	.LBB132:
 5337               	.LBB133:
  60:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 5338               		.loc 1 60 0
 5339 0374 10E0      		ldi r17,0
 5340               	.LVL364:
 5341               	.L144:
  61:../src/matrix_utils.c **** 			}
 5342               		.loc 1 61 0
 5343 0376 D301      		movw r26,r6
 5344 0378 6D91      		ld r22,X+
 5345 037a 7D91      		ld r23,X+
 5346 037c 8D91      		ld r24,X+
 5347 037e 9D91      		ld r25,X+
 5348 0380 3D01      		movw r6,r26
 5349 0382 F501      		movw r30,r10
 5350 0384 2081      		ld r18,Z
 5351 0386 3181      		ldd r19,Z+1
 5352 0388 4281      		ldd r20,Z+2
 5353 038a 5381      		ldd r21,Z+3
 5354 038c 0E94 0000 		call __mulsf3
 5355               	.LVL365:
 5356 0390 9B01      		movw r18,r22
 5357 0392 AC01      		movw r20,r24
 5358 0394 C201      		movw r24,r4
 5359 0396 B101      		movw r22,r2
 5360 0398 0E94 0000 		call __addsf3
 5361               	.LVL366:
 5362 039c 1B01      		movw r2,r22
 5363 039e 2C01      		movw r4,r24
  60:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 5364               		.loc 1 60 0
 5365 03a0 1F5F      		subi r17,lo8(-(1))
 5366               	.LVL367:
 5367 03a2 FCE0      		ldi r31,12
 5368 03a4 AF0E      		add r10,r31
 5369 03a6 B11C      		adc r11,__zero_reg__
 5370 03a8 1330      		cpi r17,lo8(3)
 5371 03aa 01F4      		brne .L144
 5372 03ac D601      		movw r26,r12
 5373 03ae 6D93      		st X+,r22
 5374 03b0 7D93      		st X+,r23
 5375 03b2 8D93      		st X+,r24
 5376 03b4 9D93      		st X+,r25
 5377 03b6 6D01      		movw r12,r26
 5378 03b8 B4E0      		ldi r27,4
 5379 03ba EB0E      		add r14,r27
 5380 03bc F11C      		adc r15,__zero_reg__
 5381               	.LBE133:
  58:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 5382               		.loc 1 58 0
 5383 03be CD56      		subi r28,lo8(-147)
 5384 03c0 DF4F      		sbci r29,hi8(-147)
 5385 03c2 E881      		ld r30,Y
 5386 03c4 F981      		ldd r31,Y+1
 5387 03c6 C359      		subi r28,lo8(147)
 5388 03c8 D040      		sbci r29,hi8(147)
 5389 03ca EE16      		cp r14,r30
 5390 03cc FF06      		cpc r15,r31
 5391 03ce 01F4      		brne .L145
 5392 03d0 FCE0      		ldi r31,12
 5393 03d2 8F0E      		add r8,r31
 5394 03d4 911C      		adc r9,__zero_reg__
 5395 03d6 C956      		subi r28,lo8(-151)
 5396 03d8 DF4F      		sbci r29,hi8(-151)
 5397 03da 8881      		ld r24,Y
 5398 03dc 9981      		ldd r25,Y+1
 5399 03de C759      		subi r28,lo8(151)
 5400 03e0 D040      		sbci r29,hi8(151)
 5401 03e2 0C96      		adiw r24,12
 5402 03e4 C956      		subi r28,lo8(-151)
 5403 03e6 DF4F      		sbci r29,hi8(-151)
 5404 03e8 8883      		st Y,r24
 5405 03ea 9983      		std Y+1,r25
 5406 03ec C759      		subi r28,lo8(151)
 5407 03ee D040      		sbci r29,hi8(151)
 5408               	.LBE132:
  57:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5409               		.loc 1 57 0
 5410 03f0 CF56      		subi r28,lo8(-145)
 5411 03f2 DF4F      		sbci r29,hi8(-145)
 5412 03f4 A881      		ld r26,Y
 5413 03f6 B981      		ldd r27,Y+1
 5414 03f8 C159      		subi r28,lo8(145)
 5415 03fa D040      		sbci r29,hi8(145)
 5416 03fc A815      		cp r26,r8
 5417 03fe B905      		cpc r27,r9
 5418 0400 01F0      		breq .+2
 5419 0402 00C0      		rjmp .L143
 5420               	.LVL368:
 5421               	.LBE131:
 5422               	.LBE130:
 230:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[0]), &(charEqn[1]));
 5423               		.loc 1 230 0
 5424 0404 BE01      		movw r22,r28
 5425 0406 6359      		subi r22,-109
 5426 0408 7F4F      		sbci r23,-1
 5427 040a CF55      		subi r28,lo8(-161)
 5428 040c DF4F      		sbci r29,hi8(-161)
 5429 040e 8881      		ld r24,Y
 5430 0410 9981      		ldd r25,Y+1
 5431 0412 C15A      		subi r28,lo8(161)
 5432 0414 D040      		sbci r29,hi8(161)
 5433 0416 0C96      		adiw r24,12
 5434 0418 0E94 0000 		call getEigenvector
 5435               	.LVL369:
 5436 041c CE01      		movw r24,r28
 5437 041e 0196      		adiw r24,1
 5438 0420 4C01      		movw r8,r24
 5439 0422 DE01      		movw r26,r28
 5440 0424 1D96      		adiw r26,13
 5441 0426 CD56      		subi r28,lo8(-147)
 5442 0428 DF4F      		sbci r29,hi8(-147)
 5443 042a A883      		st Y,r26
 5444 042c B983      		std Y+1,r27
 5445 042e C359      		subi r28,lo8(147)
 5446 0430 D040      		sbci r29,hi8(147)
 5447               	.LVL370:
 5448               	.L147:
 228:../src/matrix_utils.c **** 	matrixMultiply(&TMP, &(charEqn[0]), &(charEqn[2]));
 5449               		.loc 1 228 0
 5450 0432 CE01      		movw r24,r28
 5451 0434 0196      		adiw r24,1
 5452 0436 7C01      		movw r14,r24
 5453 0438 C556      		subi r28,lo8(-155)
 5454 043a DF4F      		sbci r29,hi8(-155)
 5455 043c C880      		ld r12,Y
 5456 043e D980      		ldd r13,Y+1
 5457 0440 CB59      		subi r28,lo8(155)
 5458 0442 D040      		sbci r29,hi8(155)
 5459               	.LVL371:
 5460               	.L149:
 5461 0444 5701      		movw r10,r14
 5462 0446 3401      		movw r6,r8
 5463 0448 212C      		mov r2,__zero_reg__
 5464 044a 312C      		mov r3,__zero_reg__
 5465 044c 2101      		movw r4,r2
 5466               	.LBB134:
 5467               	.LBB135:
 5468               	.LBB136:
 5469               	.LBB137:
  60:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 5470               		.loc 1 60 0
 5471 044e 10E0      		ldi r17,0
 5472               	.LVL372:
 5473               	.L148:
  61:../src/matrix_utils.c **** 			}
 5474               		.loc 1 61 0
 5475 0450 F301      		movw r30,r6
 5476 0452 6191      		ld r22,Z+
 5477 0454 7191      		ld r23,Z+
 5478 0456 8191      		ld r24,Z+
 5479 0458 9191      		ld r25,Z+
 5480 045a 3F01      		movw r6,r30
 5481 045c D501      		movw r26,r10
 5482 045e 9496      		adiw r26,36
 5483 0460 2D91      		ld r18,X+
 5484 0462 3D91      		ld r19,X+
 5485 0464 4D91      		ld r20,X+
 5486 0466 5C91      		ld r21,X
 5487 0468 9797      		sbiw r26,36+3
 5488 046a 0E94 0000 		call __mulsf3
 5489               	.LVL373:
 5490 046e 9B01      		movw r18,r22
 5491 0470 AC01      		movw r20,r24
 5492 0472 C201      		movw r24,r4
 5493 0474 B101      		movw r22,r2
 5494 0476 0E94 0000 		call __addsf3
 5495               	.LVL374:
 5496 047a 1B01      		movw r2,r22
 5497 047c 2C01      		movw r4,r24
  60:../src/matrix_utils.c **** 				(*DST)[i][j] += (*A)[i][k] * (*B)[k][j];
 5498               		.loc 1 60 0
 5499 047e 1F5F      		subi r17,lo8(-(1))
 5500               	.LVL375:
 5501 0480 BCE0      		ldi r27,12
 5502 0482 AB0E      		add r10,r27
 5503 0484 B11C      		adc r11,__zero_reg__
 5504 0486 1330      		cpi r17,lo8(3)
 5505 0488 01F4      		brne .L148
 5506 048a F601      		movw r30,r12
 5507 048c 6193      		st Z+,r22
 5508 048e 7193      		st Z+,r23
 5509 0490 8193      		st Z+,r24
 5510 0492 9193      		st Z+,r25
 5511 0494 6F01      		movw r12,r30
 5512 0496 F4E0      		ldi r31,4
 5513 0498 EF0E      		add r14,r31
 5514 049a F11C      		adc r15,__zero_reg__
 5515               	.LBE137:
  58:../src/matrix_utils.c **** 			(*DST)[i][j] = 0;
 5516               		.loc 1 58 0
 5517 049c CD56      		subi r28,lo8(-147)
 5518 049e DF4F      		sbci r29,hi8(-147)
 5519 04a0 8881      		ld r24,Y
 5520 04a2 9981      		ldd r25,Y+1
 5521 04a4 C359      		subi r28,lo8(147)
 5522 04a6 D040      		sbci r29,hi8(147)
 5523 04a8 8E15      		cp r24,r14
 5524 04aa 9F05      		cpc r25,r15
 5525 04ac 01F4      		brne .L149
 5526 04ae 9CE0      		ldi r25,12
 5527 04b0 890E      		add r8,r25
 5528 04b2 911C      		adc r9,__zero_reg__
 5529 04b4 C556      		subi r28,lo8(-155)
 5530 04b6 DF4F      		sbci r29,hi8(-155)
 5531 04b8 A881      		ld r26,Y
 5532 04ba B981      		ldd r27,Y+1
 5533 04bc CB59      		subi r28,lo8(155)
 5534 04be D040      		sbci r29,hi8(155)
 5535 04c0 1C96      		adiw r26,12
 5536 04c2 C556      		subi r28,lo8(-155)
 5537 04c4 DF4F      		sbci r29,hi8(-155)
 5538 04c6 A883      		st Y,r26
 5539 04c8 B983      		std Y+1,r27
 5540 04ca CB59      		subi r28,lo8(155)
 5541 04cc D040      		sbci r29,hi8(155)
 5542               	.LBE136:
  57:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5543               		.loc 1 57 0
 5544 04ce CF56      		subi r28,lo8(-145)
 5545 04d0 DF4F      		sbci r29,hi8(-145)
 5546 04d2 E881      		ld r30,Y
 5547 04d4 F981      		ldd r31,Y+1
 5548 04d6 C159      		subi r28,lo8(145)
 5549 04d8 D040      		sbci r29,hi8(145)
 5550 04da E815      		cp r30,r8
 5551 04dc F905      		cpc r31,r9
 5552 04de 01F0      		breq .+2
 5553 04e0 00C0      		rjmp .L147
 5554               	.LVL376:
 5555               	.LBE135:
 5556               	.LBE134:
 232:../src/matrix_utils.c **** }
 5557               		.loc 1 232 0
 5558 04e2 BE01      		movw r22,r28
 5559 04e4 6359      		subi r22,-109
 5560 04e6 7F4F      		sbci r23,-1
 5561 04e8 CF55      		subi r28,lo8(-161)
 5562 04ea DF4F      		sbci r29,hi8(-161)
 5563 04ec 8881      		ld r24,Y
 5564 04ee 9981      		ldd r25,Y+1
 5565 04f0 C15A      		subi r28,lo8(161)
 5566 04f2 D040      		sbci r29,hi8(161)
 5567 04f4 4896      		adiw r24,24
 5568 04f6 0E94 0000 		call getEigenvector
 5569               	.LVL377:
 5570               	/* epilogue start */
 233:../src/matrix_utils.c **** 
 5571               		.loc 1 233 0
 5572 04fa CE55      		subi r28,94
 5573 04fc DF4F      		sbci r29,-1
 5574 04fe CDBF      		out __SP_L__,r28
 5575 0500 DEBF      		out __SP_H__,r29
 5576 0502 DF91      		pop r29
 5577 0504 CF91      		pop r28
 5578 0506 1F91      		pop r17
 5579 0508 0F91      		pop r16
 5580 050a FF90      		pop r15
 5581 050c EF90      		pop r14
 5582 050e DF90      		pop r13
 5583 0510 CF90      		pop r12
 5584 0512 BF90      		pop r11
 5585 0514 AF90      		pop r10
 5586 0516 9F90      		pop r9
 5587 0518 8F90      		pop r8
 5588 051a 7F90      		pop r7
 5589 051c 6F90      		pop r6
 5590 051e 5F90      		pop r5
 5591 0520 4F90      		pop r4
 5592               	.LVL378:
 5593 0522 3F90      		pop r3
 5594 0524 2F90      		pop r2
 5595 0526 0895      		ret
 5596               	.LVL379:
 5597               	.L178:
 217:../src/matrix_utils.c **** 		printf_P("WARNING! Input Matrix A has nondistinct eigenvalues.\r\nI couldn't find a non-trivial e
 5598               		.loc 1 217 0 discriminator 2
 5599 0528 C956      		subi r28,lo8(-151)
 5600 052a DF4F      		sbci r29,hi8(-151)
 5601 052c 2881      		ld r18,Y
 5602 052e 3981      		ldd r19,Y+1
 5603 0530 4A81      		ldd r20,Y+2
 5604 0532 5B81      		ldd r21,Y+3
 5605 0534 C759      		subi r28,lo8(151)
 5606 0536 D040      		sbci r29,hi8(151)
 5607 0538 C401      		movw r24,r8
 5608 053a B301      		movw r22,r6
 5609 053c 0E94 0000 		call __eqsf2
 5610               	.LVL380:
 5611 0540 8111      		cpse r24,__zero_reg__
 5612 0542 00C0      		rjmp .L126
 5613 0544 00C0      		rjmp .L125
 5614               		.cfi_endproc
 5615               	.LFE43:
 5617               		.section	.text.matrixTrace,"ax",@progbits
 5618               	.global	matrixTrace
 5620               	matrixTrace:
 5621               	.LFB47:
 308:../src/matrix_utils.c **** 	return ( (*A)[0][0] + (*A)[1][1] + (*A)[2][2] );
 5622               		.loc 1 308 0
 5623               		.cfi_startproc
 5624               	.LVL381:
 5625 0000 CF93      		push r28
 5626               	.LCFI260:
 5627               		.cfi_def_cfa_offset 4
 5628               		.cfi_offset 28, -3
 5629 0002 DF93      		push r29
 5630               	.LCFI261:
 5631               		.cfi_def_cfa_offset 5
 5632               		.cfi_offset 29, -4
 5633               	/* prologue: function */
 5634               	/* frame size = 0 */
 5635               	/* stack size = 2 */
 5636               	.L__stack_usage = 2
 5637 0004 EC01      		movw r28,r24
 309:../src/matrix_utils.c **** }
 5638               		.loc 1 309 0
 5639 0006 2889      		ldd r18,Y+16
 5640 0008 3989      		ldd r19,Y+17
 5641 000a 4A89      		ldd r20,Y+18
 5642 000c 5B89      		ldd r21,Y+19
 5643 000e 6881      		ld r22,Y
 5644 0010 7981      		ldd r23,Y+1
 5645 0012 8A81      		ldd r24,Y+2
 5646 0014 9B81      		ldd r25,Y+3
 5647 0016 0E94 0000 		call __addsf3
 5648               	.LVL382:
 5649 001a 28A1      		ldd r18,Y+32
 5650 001c 39A1      		ldd r19,Y+33
 5651 001e 4AA1      		ldd r20,Y+34
 5652 0020 5BA1      		ldd r21,Y+35
 5653 0022 0E94 0000 		call __addsf3
 5654               	.LVL383:
 5655               	/* epilogue start */
 310:../src/matrix_utils.c **** 
 5656               		.loc 1 310 0
 5657 0026 DF91      		pop r29
 5658 0028 CF91      		pop r28
 5659               	.LVL384:
 5660 002a 0895      		ret
 5661               		.cfi_endproc
 5662               	.LFE47:
 5664               		.section	.text.matrixCopy,"ax",@progbits
 5665               	.global	matrixCopy
 5667               	matrixCopy:
 5668               	.LFB48:
 312:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 5669               		.loc 1 312 0
 5670               		.cfi_startproc
 5671               	.LVL385:
 5672 0000 0F93      		push r16
 5673               	.LCFI262:
 5674               		.cfi_def_cfa_offset 4
 5675               		.cfi_offset 16, -3
 5676 0002 1F93      		push r17
 5677               	.LCFI263:
 5678               		.cfi_def_cfa_offset 5
 5679               		.cfi_offset 17, -4
 5680 0004 CF93      		push r28
 5681               	.LCFI264:
 5682               		.cfi_def_cfa_offset 6
 5683               		.cfi_offset 28, -5
 5684 0006 DF93      		push r29
 5685               	.LCFI265:
 5686               		.cfi_def_cfa_offset 7
 5687               		.cfi_offset 29, -6
 5688               	/* prologue: function */
 5689               	/* frame size = 0 */
 5690               	/* stack size = 4 */
 5691               	.L__stack_usage = 4
 5692 0008 9B01      		movw r18,r22
 5693               	.LVL386:
 5694 000a EC01      		movw r28,r24
 5695 000c 8B01      		movw r16,r22
 5696 000e 0C5D      		subi r16,-36
 5697 0010 1F4F      		sbci r17,-1
 5698               	.LVL387:
 5699               	.L181:
 312:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 5700               		.loc 1 312 0
 5701 0012 DE01      		movw r26,r28
 5702 0014 F901      		movw r30,r18
 5703 0016 90E0      		ldi r25,0
 5704               	.LVL388:
 5705               	.L182:
 5706               	.LBB138:
 5707               	.LBB139:
 5708               		.loc 1 315 0 discriminator 3
 5709 0018 4191      		ld r20,Z+
 5710 001a 5191      		ld r21,Z+
 5711 001c 6191      		ld r22,Z+
 5712 001e 7191      		ld r23,Z+
 5713 0020 4D93      		st X+,r20
 5714 0022 5D93      		st X+,r21
 5715 0024 6D93      		st X+,r22
 5716 0026 7D93      		st X+,r23
 314:../src/matrix_utils.c **** 			(*DST)[i][j] = (*A)[i][j];
 5717               		.loc 1 314 0 discriminator 3
 5718 0028 9F5F      		subi r25,lo8(-(1))
 5719               	.LVL389:
 5720 002a 9330      		cpi r25,lo8(3)
 5721 002c 01F4      		brne .L182
 5722 002e 245F      		subi r18,-12
 5723 0030 3F4F      		sbci r19,-1
 5724 0032 2C96      		adiw r28,12
 5725               	.LBE139:
 313:../src/matrix_utils.c **** 		for(uint8_t j=0;j<3;j++){
 5726               		.loc 1 313 0 discriminator 2
 5727 0034 2017      		cp r18,r16
 5728 0036 3107      		cpc r19,r17
 5729 0038 01F4      		brne .L181
 5730               	/* epilogue start */
 5731               	.LBE138:
 316:../src/matrix_utils.c **** 		}
 317:../src/matrix_utils.c **** 	}
 318:../src/matrix_utils.c **** }
 5732               		.loc 1 318 0
 5733 003a DF91      		pop r29
 5734 003c CF91      		pop r28
 5735 003e 1F91      		pop r17
 5736 0040 0F91      		pop r16
 5737 0042 0895      		ret
 5738               		.cfi_endproc
 5739               	.LFE48:
 5741               		.section	.text.printMatrix,"ax",@progbits
 5742               	.global	printMatrix
 5744               	printMatrix:
 5745               	.LFB49:
 319:../src/matrix_utils.c **** 
 320:../src/matrix_utils.c **** const char matrix3str[] PROGMEM = "| %7.1f %7.1f %7.1f |\r\n";
 321:../src/matrix_utils.c **** void printMatrix(Matrix* A){
 5746               		.loc 1 321 0
 5747               		.cfi_startproc
 5748               	.LVL390:
 5749 0000 0F93      		push r16
 5750               	.LCFI266:
 5751               		.cfi_def_cfa_offset 4
 5752               		.cfi_offset 16, -3
 5753 0002 1F93      		push r17
 5754               	.LCFI267:
 5755               		.cfi_def_cfa_offset 5
 5756               		.cfi_offset 17, -4
 5757 0004 CF93      		push r28
 5758               	.LCFI268:
 5759               		.cfi_def_cfa_offset 6
 5760               		.cfi_offset 28, -5
 5761 0006 DF93      		push r29
 5762               	.LCFI269:
 5763               		.cfi_def_cfa_offset 7
 5764               		.cfi_offset 29, -6
 5765               	/* prologue: function */
 5766               	/* frame size = 0 */
 5767               	/* stack size = 4 */
 5768               	.L__stack_usage = 4
 5769 0008 EC01      		movw r28,r24
 322:../src/matrix_utils.c **** 	printf_P(matrix3str, (*A)[0][0], (*A)[0][1], (*A)[0][2]);
 5770               		.loc 1 322 0
 5771 000a 8B85      		ldd r24,Y+11
 5772               	.LVL391:
 5773 000c 8F93      		push r24
 5774               	.LCFI270:
 5775               		.cfi_def_cfa_offset 8
 5776 000e 8A85      		ldd r24,Y+10
 5777 0010 8F93      		push r24
 5778               	.LCFI271:
 5779               		.cfi_def_cfa_offset 9
 5780 0012 8985      		ldd r24,Y+9
 5781 0014 8F93      		push r24
 5782               	.LCFI272:
 5783               		.cfi_def_cfa_offset 10
 5784 0016 8885      		ldd r24,Y+8
 5785 0018 8F93      		push r24
 5786               	.LCFI273:
 5787               		.cfi_def_cfa_offset 11
 5788 001a 8F81      		ldd r24,Y+7
 5789 001c 8F93      		push r24
 5790               	.LCFI274:
 5791               		.cfi_def_cfa_offset 12
 5792 001e 8E81      		ldd r24,Y+6
 5793 0020 8F93      		push r24
 5794               	.LCFI275:
 5795               		.cfi_def_cfa_offset 13
 5796 0022 8D81      		ldd r24,Y+5
 5797 0024 8F93      		push r24
 5798               	.LCFI276:
 5799               		.cfi_def_cfa_offset 14
 5800 0026 8C81      		ldd r24,Y+4
 5801 0028 8F93      		push r24
 5802               	.LCFI277:
 5803               		.cfi_def_cfa_offset 15
 5804 002a 8B81      		ldd r24,Y+3
 5805 002c 8F93      		push r24
 5806               	.LCFI278:
 5807               		.cfi_def_cfa_offset 16
 5808 002e 8A81      		ldd r24,Y+2
 5809 0030 8F93      		push r24
 5810               	.LCFI279:
 5811               		.cfi_def_cfa_offset 17
 5812 0032 8981      		ldd r24,Y+1
 5813 0034 8F93      		push r24
 5814               	.LCFI280:
 5815               		.cfi_def_cfa_offset 18
 5816 0036 8881      		ld r24,Y
 5817 0038 8F93      		push r24
 5818               	.LCFI281:
 5819               		.cfi_def_cfa_offset 19
 5820 003a 00E0      		ldi r16,lo8(matrix3str)
 5821 003c 10E0      		ldi r17,hi8(matrix3str)
 5822 003e 1F93      		push r17
 5823               	.LCFI282:
 5824               		.cfi_def_cfa_offset 20
 5825 0040 0F93      		push r16
 5826               	.LCFI283:
 5827               		.cfi_def_cfa_offset 21
 5828 0042 0E94 0000 		call printf_P
 5829               	.LVL392:
 323:../src/matrix_utils.c **** 	printf_P(matrix3str, (*A)[1][0], (*A)[1][1], (*A)[1][2]);
 5830               		.loc 1 323 0
 5831 0046 8F89      		ldd r24,Y+23
 5832 0048 8F93      		push r24
 5833               	.LCFI284:
 5834               		.cfi_def_cfa_offset 22
 5835 004a 8E89      		ldd r24,Y+22
 5836 004c 8F93      		push r24
 5837               	.LCFI285:
 5838               		.cfi_def_cfa_offset 23
 5839 004e 8D89      		ldd r24,Y+21
 5840 0050 8F93      		push r24
 5841               	.LCFI286:
 5842               		.cfi_def_cfa_offset 24
 5843 0052 8C89      		ldd r24,Y+20
 5844 0054 8F93      		push r24
 5845               	.LCFI287:
 5846               		.cfi_def_cfa_offset 25
 5847 0056 8B89      		ldd r24,Y+19
 5848 0058 8F93      		push r24
 5849               	.LCFI288:
 5850               		.cfi_def_cfa_offset 26
 5851 005a 8A89      		ldd r24,Y+18
 5852 005c 8F93      		push r24
 5853               	.LCFI289:
 5854               		.cfi_def_cfa_offset 27
 5855 005e 8989      		ldd r24,Y+17
 5856 0060 8F93      		push r24
 5857               	.LCFI290:
 5858               		.cfi_def_cfa_offset 28
 5859 0062 8889      		ldd r24,Y+16
 5860 0064 8F93      		push r24
 5861               	.LCFI291:
 5862               		.cfi_def_cfa_offset 29
 5863 0066 8F85      		ldd r24,Y+15
 5864 0068 8F93      		push r24
 5865               	.LCFI292:
 5866               		.cfi_def_cfa_offset 30
 5867 006a 8E85      		ldd r24,Y+14
 5868 006c 8F93      		push r24
 5869               	.LCFI293:
 5870               		.cfi_def_cfa_offset 31
 5871 006e 8D85      		ldd r24,Y+13
 5872 0070 8F93      		push r24
 5873               	.LCFI294:
 5874               		.cfi_def_cfa_offset 32
 5875 0072 8C85      		ldd r24,Y+12
 5876 0074 8F93      		push r24
 5877               	.LCFI295:
 5878               		.cfi_def_cfa_offset 33
 5879 0076 1F93      		push r17
 5880               	.LCFI296:
 5881               		.cfi_def_cfa_offset 34
 5882 0078 0F93      		push r16
 5883               	.LCFI297:
 5884               		.cfi_def_cfa_offset 35
 5885 007a 0E94 0000 		call printf_P
 5886               	.LVL393:
 324:../src/matrix_utils.c **** 	printf_P(matrix3str, (*A)[2][0], (*A)[2][1], (*A)[2][2]);
 5887               		.loc 1 324 0
 5888 007e 8BA1      		ldd r24,Y+35
 5889 0080 8F93      		push r24
 5890               	.LCFI298:
 5891               		.cfi_def_cfa_offset 36
 5892 0082 8AA1      		ldd r24,Y+34
 5893 0084 8F93      		push r24
 5894               	.LCFI299:
 5895               		.cfi_def_cfa_offset 37
 5896 0086 89A1      		ldd r24,Y+33
 5897 0088 8F93      		push r24
 5898               	.LCFI300:
 5899               		.cfi_def_cfa_offset 38
 5900 008a 88A1      		ldd r24,Y+32
 5901 008c 8F93      		push r24
 5902               	.LCFI301:
 5903               		.cfi_def_cfa_offset 39
 5904 008e 8F8D      		ldd r24,Y+31
 5905 0090 8F93      		push r24
 5906               	.LCFI302:
 5907               		.cfi_def_cfa_offset 40
 5908 0092 8E8D      		ldd r24,Y+30
 5909 0094 8F93      		push r24
 5910               	.LCFI303:
 5911               		.cfi_def_cfa_offset 41
 5912 0096 8D8D      		ldd r24,Y+29
 5913 0098 8F93      		push r24
 5914               	.LCFI304:
 5915               		.cfi_def_cfa_offset 42
 5916 009a 8C8D      		ldd r24,Y+28
 5917 009c 8F93      		push r24
 5918               	.LCFI305:
 5919               		.cfi_def_cfa_offset 43
 5920 009e 8B8D      		ldd r24,Y+27
 5921 00a0 8F93      		push r24
 5922               	.LCFI306:
 5923               		.cfi_def_cfa_offset 44
 5924 00a2 8A8D      		ldd r24,Y+26
 5925 00a4 8F93      		push r24
 5926               	.LCFI307:
 5927               		.cfi_def_cfa_offset 45
 5928 00a6 898D      		ldd r24,Y+25
 5929 00a8 8F93      		push r24
 5930               	.LCFI308:
 5931               		.cfi_def_cfa_offset 46
 5932 00aa 888D      		ldd r24,Y+24
 5933 00ac 8F93      		push r24
 5934               	.LCFI309:
 5935               		.cfi_def_cfa_offset 47
 5936 00ae 1F93      		push r17
 5937               	.LCFI310:
 5938               		.cfi_def_cfa_offset 48
 5939 00b0 0F93      		push r16
 5940               	.LCFI311:
 5941               		.cfi_def_cfa_offset 49
 5942 00b2 0E94 0000 		call printf_P
 5943               	.LVL394:
 325:../src/matrix_utils.c **** }
 5944               		.loc 1 325 0
 5945 00b6 8DB7      		in r24,__SP_L__
 5946 00b8 9EB7      		in r25,__SP_H__
 5947 00ba 8A96      		adiw r24,42
 5948 00bc 8DBF      		out __SP_L__,r24
 5949 00be 9EBF      		out __SP_H__,r25
 5950               	.LCFI312:
 5951               		.cfi_def_cfa_offset 7
 5952               	/* epilogue start */
 5953 00c0 DF91      		pop r29
 5954 00c2 CF91      		pop r28
 5955               	.LVL395:
 5956 00c4 1F91      		pop r17
 5957 00c6 0F91      		pop r16
 5958 00c8 0895      		ret
 5959               		.cfi_endproc
 5960               	.LFE49:
 5962               		.section	.text.printMatrixMathematica,"ax",@progbits
 5963               	.global	printMatrixMathematica
 5965               	printMatrixMathematica:
 5966               	.LFB50:
 326:../src/matrix_utils.c **** 
 327:../src/matrix_utils.c **** const char matrix3mathStartStr[] PROGMEM = "{\r\n  {%9.4f, %9.4f, %9.4f},\r\n";
 328:../src/matrix_utils.c **** const char matrix3mathStr[] PROGMEM = "  {%9.4f, %9.4f, %9.4f},\r\n";
 329:../src/matrix_utils.c **** const char matrix3mathEndStr[] PROGMEM = "  {%9.4f, %9.4f, %9.4f}\r\n};\r\n";
 330:../src/matrix_utils.c **** void printMatrixMathematica(Matrix* A){
 5967               		.loc 1 330 0
 5968               		.cfi_startproc
 5969               	.LVL396:
 5970 0000 CF93      		push r28
 5971               	.LCFI313:
 5972               		.cfi_def_cfa_offset 4
 5973               		.cfi_offset 28, -3
 5974 0002 DF93      		push r29
 5975               	.LCFI314:
 5976               		.cfi_def_cfa_offset 5
 5977               		.cfi_offset 29, -4
 5978               	/* prologue: function */
 5979               	/* frame size = 0 */
 5980               	/* stack size = 2 */
 5981               	.L__stack_usage = 2
 5982 0004 EC01      		movw r28,r24
 331:../src/matrix_utils.c **** 	printf_P(matrix3mathStartStr, (*A)[0][0], (*A)[0][1], (*A)[0][2]);
 5983               		.loc 1 331 0
 5984 0006 8B85      		ldd r24,Y+11
 5985               	.LVL397:
 5986 0008 8F93      		push r24
 5987               	.LCFI315:
 5988               		.cfi_def_cfa_offset 6
 5989 000a 8A85      		ldd r24,Y+10
 5990 000c 8F93      		push r24
 5991               	.LCFI316:
 5992               		.cfi_def_cfa_offset 7
 5993 000e 8985      		ldd r24,Y+9
 5994 0010 8F93      		push r24
 5995               	.LCFI317:
 5996               		.cfi_def_cfa_offset 8
 5997 0012 8885      		ldd r24,Y+8
 5998 0014 8F93      		push r24
 5999               	.LCFI318:
 6000               		.cfi_def_cfa_offset 9
 6001 0016 8F81      		ldd r24,Y+7
 6002 0018 8F93      		push r24
 6003               	.LCFI319:
 6004               		.cfi_def_cfa_offset 10
 6005 001a 8E81      		ldd r24,Y+6
 6006 001c 8F93      		push r24
 6007               	.LCFI320:
 6008               		.cfi_def_cfa_offset 11
 6009 001e 8D81      		ldd r24,Y+5
 6010 0020 8F93      		push r24
 6011               	.LCFI321:
 6012               		.cfi_def_cfa_offset 12
 6013 0022 8C81      		ldd r24,Y+4
 6014 0024 8F93      		push r24
 6015               	.LCFI322:
 6016               		.cfi_def_cfa_offset 13
 6017 0026 8B81      		ldd r24,Y+3
 6018 0028 8F93      		push r24
 6019               	.LCFI323:
 6020               		.cfi_def_cfa_offset 14
 6021 002a 8A81      		ldd r24,Y+2
 6022 002c 8F93      		push r24
 6023               	.LCFI324:
 6024               		.cfi_def_cfa_offset 15
 6025 002e 8981      		ldd r24,Y+1
 6026 0030 8F93      		push r24
 6027               	.LCFI325:
 6028               		.cfi_def_cfa_offset 16
 6029 0032 8881      		ld r24,Y
 6030 0034 8F93      		push r24
 6031               	.LCFI326:
 6032               		.cfi_def_cfa_offset 17
 6033 0036 80E0      		ldi r24,lo8(matrix3mathStartStr)
 6034 0038 90E0      		ldi r25,hi8(matrix3mathStartStr)
 6035 003a 9F93      		push r25
 6036               	.LCFI327:
 6037               		.cfi_def_cfa_offset 18
 6038 003c 8F93      		push r24
 6039               	.LCFI328:
 6040               		.cfi_def_cfa_offset 19
 6041 003e 0E94 0000 		call printf_P
 6042               	.LVL398:
 332:../src/matrix_utils.c **** 	printf_P(matrix3mathStr,	  (*A)[1][0], (*A)[1][1], (*A)[1][2]);
 6043               		.loc 1 332 0
 6044 0042 8F89      		ldd r24,Y+23
 6045 0044 8F93      		push r24
 6046               	.LCFI329:
 6047               		.cfi_def_cfa_offset 20
 6048 0046 8E89      		ldd r24,Y+22
 6049 0048 8F93      		push r24
 6050               	.LCFI330:
 6051               		.cfi_def_cfa_offset 21
 6052 004a 8D89      		ldd r24,Y+21
 6053 004c 8F93      		push r24
 6054               	.LCFI331:
 6055               		.cfi_def_cfa_offset 22
 6056 004e 8C89      		ldd r24,Y+20
 6057 0050 8F93      		push r24
 6058               	.LCFI332:
 6059               		.cfi_def_cfa_offset 23
 6060 0052 8B89      		ldd r24,Y+19
 6061 0054 8F93      		push r24
 6062               	.LCFI333:
 6063               		.cfi_def_cfa_offset 24
 6064 0056 8A89      		ldd r24,Y+18
 6065 0058 8F93      		push r24
 6066               	.LCFI334:
 6067               		.cfi_def_cfa_offset 25
 6068 005a 8989      		ldd r24,Y+17
 6069 005c 8F93      		push r24
 6070               	.LCFI335:
 6071               		.cfi_def_cfa_offset 26
 6072 005e 8889      		ldd r24,Y+16
 6073 0060 8F93      		push r24
 6074               	.LCFI336:
 6075               		.cfi_def_cfa_offset 27
 6076 0062 8F85      		ldd r24,Y+15
 6077 0064 8F93      		push r24
 6078               	.LCFI337:
 6079               		.cfi_def_cfa_offset 28
 6080 0066 8E85      		ldd r24,Y+14
 6081 0068 8F93      		push r24
 6082               	.LCFI338:
 6083               		.cfi_def_cfa_offset 29
 6084 006a 8D85      		ldd r24,Y+13
 6085 006c 8F93      		push r24
 6086               	.LCFI339:
 6087               		.cfi_def_cfa_offset 30
 6088 006e 8C85      		ldd r24,Y+12
 6089 0070 8F93      		push r24
 6090               	.LCFI340:
 6091               		.cfi_def_cfa_offset 31
 6092 0072 80E0      		ldi r24,lo8(matrix3mathStr)
 6093 0074 90E0      		ldi r25,hi8(matrix3mathStr)
 6094 0076 9F93      		push r25
 6095               	.LCFI341:
 6096               		.cfi_def_cfa_offset 32
 6097 0078 8F93      		push r24
 6098               	.LCFI342:
 6099               		.cfi_def_cfa_offset 33
 6100 007a 0E94 0000 		call printf_P
 6101               	.LVL399:
 333:../src/matrix_utils.c **** 	printf_P(matrix3mathEndStr,   (*A)[2][0], (*A)[2][1], (*A)[2][2]);
 6102               		.loc 1 333 0
 6103 007e 8BA1      		ldd r24,Y+35
 6104 0080 8F93      		push r24
 6105               	.LCFI343:
 6106               		.cfi_def_cfa_offset 34
 6107 0082 8AA1      		ldd r24,Y+34
 6108 0084 8F93      		push r24
 6109               	.LCFI344:
 6110               		.cfi_def_cfa_offset 35
 6111 0086 89A1      		ldd r24,Y+33
 6112 0088 8F93      		push r24
 6113               	.LCFI345:
 6114               		.cfi_def_cfa_offset 36
 6115 008a 88A1      		ldd r24,Y+32
 6116 008c 8F93      		push r24
 6117               	.LCFI346:
 6118               		.cfi_def_cfa_offset 37
 6119 008e 8F8D      		ldd r24,Y+31
 6120 0090 8F93      		push r24
 6121               	.LCFI347:
 6122               		.cfi_def_cfa_offset 38
 6123 0092 8E8D      		ldd r24,Y+30
 6124 0094 8F93      		push r24
 6125               	.LCFI348:
 6126               		.cfi_def_cfa_offset 39
 6127 0096 8D8D      		ldd r24,Y+29
 6128 0098 8F93      		push r24
 6129               	.LCFI349:
 6130               		.cfi_def_cfa_offset 40
 6131 009a 8C8D      		ldd r24,Y+28
 6132 009c 8F93      		push r24
 6133               	.LCFI350:
 6134               		.cfi_def_cfa_offset 41
 6135 009e 8B8D      		ldd r24,Y+27
 6136 00a0 8F93      		push r24
 6137               	.LCFI351:
 6138               		.cfi_def_cfa_offset 42
 6139 00a2 8A8D      		ldd r24,Y+26
 6140 00a4 8F93      		push r24
 6141               	.LCFI352:
 6142               		.cfi_def_cfa_offset 43
 6143 00a6 898D      		ldd r24,Y+25
 6144 00a8 8F93      		push r24
 6145               	.LCFI353:
 6146               		.cfi_def_cfa_offset 44
 6147 00aa 888D      		ldd r24,Y+24
 6148 00ac 8F93      		push r24
 6149               	.LCFI354:
 6150               		.cfi_def_cfa_offset 45
 6151 00ae 80E0      		ldi r24,lo8(matrix3mathEndStr)
 6152 00b0 90E0      		ldi r25,hi8(matrix3mathEndStr)
 6153 00b2 9F93      		push r25
 6154               	.LCFI355:
 6155               		.cfi_def_cfa_offset 46
 6156 00b4 8F93      		push r24
 6157               	.LCFI356:
 6158               		.cfi_def_cfa_offset 47
 6159 00b6 0E94 0000 		call printf_P
 6160               	.LVL400:
 334:../src/matrix_utils.c **** }...
 6161               		.loc 1 334 0
 6162 00ba 8DB7      		in r24,__SP_L__
 6163 00bc 9EB7      		in r25,__SP_H__
 6164 00be 8A96      		adiw r24,42
 6165 00c0 8DBF      		out __SP_L__,r24
 6166 00c2 9EBF      		out __SP_H__,r25
 6167               	.LCFI357:
 6168               		.cfi_def_cfa_offset 5
 6169               	/* epilogue start */
 6170 00c4 DF91      		pop r29
 6171 00c6 CF91      		pop r28
 6172               	.LVL401:
 6173 00c8 0895      		ret
 6174               		.cfi_endproc
 6175               	.LFE50:
 6177               	.global	__unordsf2
 6178               		.section	.rodata.str1.1
 6179               	.LC2:
 6180 00b5 4E6F 6E2D 		.string	"Non-Positive Definite Matrix Detected!\r"
 6180      506F 7369 
 6180      7469 7665 
 6180      2044 6566 
 6180      696E 6974 
 6181               	.LC3:
 6182 00dd 4368 6F6C 		.string	"Cholesky Decomposition:\r"
 6182      6573 6B79 
 6182      2044 6563 
 6182      6F6D 706F 
 6182      7369 7469 
 6183               		.section	.text.positiveDefiniteQ,"ax",@progbits
 6184               	.global	positiveDefiniteQ
 6186               	positiveDefiniteQ:
 6187               	.LFB39:
 113:../src/matrix_utils.c **** uint8_t positiveDefiniteQ(Matrix* A){
 6188               		.loc 1 113 0
 6189               		.cfi_startproc
 6190               	.LVL402:
 6191 0000 2F92      		push r2
 6192               	.LCFI358:
 6193               		.cfi_def_cfa_offset 4
 6194               		.cfi_offset 2, -3
 6195 0002 3F92      		push r3
 6196               	.LCFI359:
 6197               		.cfi_def_cfa_offset 5
 6198               		.cfi_offset 3, -4
 6199 0004 4F92      		push r4
 6200               	.LCFI360:
 6201               		.cfi_def_cfa_offset 6
 6202               		.cfi_offset 4, -5
 6203 0006 5F92      		push r5
 6204               	.LCFI361:
 6205               		.cfi_def_cfa_offset 7
 6206               		.cfi_offset 5, -6
 6207 0008 6F92      		push r6
 6208               	.LCFI362:
 6209               		.cfi_def_cfa_offset 8
 6210               		.cfi_offset 6, -7
 6211 000a 7F92      		push r7
 6212               	.LCFI363:
 6213               		.cfi_def_cfa_offset 9
 6214               		.cfi_offset 7, -8
 6215 000c 8F92      		push r8
 6216               	.LCFI364:
 6217               		.cfi_def_cfa_offset 10
 6218               		.cfi_offset 8, -9
 6219 000e 9F92      		push r9
 6220               	.LCFI365:
 6221               		.cfi_def_cfa_offset 11
 6222               		.cfi_offset 9, -10
 6223 0010 AF92      		push r10
 6224               	.LCFI366:
 6225               		.cfi_def_cfa_offset 12
 6226               		.cfi_offset 10, -11
 6227 0012 BF92      		push r11
 6228               	.LCFI367:
 6229               		.cfi_def_cfa_offset 13
 6230               		.cfi_offset 11, -12
 6231 0014 CF92      		push r12
 6232               	.LCFI368:
 6233               		.cfi_def_cfa_offset 14
 6234               		.cfi_offset 12, -13
 6235 0016 DF92      		push r13
 6236               	.LCFI369:
 6237               		.cfi_def_cfa_offset 15
 6238               		.cfi_offset 13, -14
 6239 0018 EF92      		push r14
 6240               	.LCFI370:
 6241               		.cfi_def_cfa_offset 16
 6242               		.cfi_offset 14, -15
 6243 001a FF92      		push r15
 6244               	.LCFI371:
 6245               		.cfi_def_cfa_offset 17
 6246               		.cfi_offset 15, -16
 6247 001c 0F93      		push r16
 6248               	.LCFI372:
 6249               		.cfi_def_cfa_offset 18
 6250               		.cfi_offset 16, -17
 6251 001e 1F93      		push r17
 6252               	.LCFI373:
 6253               		.cfi_def_cfa_offset 19
 6254               		.cfi_offset 17, -18
 6255 0020 CF93      		push r28
 6256               	.LCFI374:
 6257               		.cfi_def_cfa_offset 20
 6258               		.cfi_offset 28, -19
 6259 0022 DF93      		push r29
 6260               	.LCFI375:
 6261               		.cfi_def_cfa_offset 21
 6262               		.cfi_offset 29, -20
 6263 0024 CDB7      		in r28,__SP_L__
 6264 0026 DEB7      		in r29,__SP_H__
 6265               	.LCFI376:
 6266               		.cfi_def_cfa_register 28
 6267 0028 AE97      		sbiw r28,46
 6268               	.LCFI377:
 6269               		.cfi_def_cfa_offset 67
 6270 002a CDBF      		out __SP_L__,r28
 6271 002c DEBF      		out __SP_H__,r29
 6272               	/* prologue: function */
 6273               	/* frame size = 46 */
 6274               	/* stack size = 64 */
 6275               	.L__stack_usage = 64
 6276 002e 5C01      		movw r10,r24
 6277               	.LVL403:
 6278 0030 9E01      		movw r18,r28
 6279 0032 2F5F      		subi r18,-1
 6280 0034 3F4F      		sbci r19,-1
 6281 0036 2CA7      		std Y+44,r18
 6282 0038 3DA7      		std Y+45,r19
 6283 003a CE01      		movw r24,r28
 6284               	.LVL404:
 6285 003c 8596      		adiw r24,37
 113:../src/matrix_utils.c **** uint8_t positiveDefiniteQ(Matrix* A){
 6286               		.loc 1 113 0
 6287 003e F901      		movw r30,r18
 6288               	.LVL405:
 6289               	.L188:
 6290               	.LBB140:
 6291               	.LBB141:
 118:../src/matrix_utils.c **** 			L[i][j] = 0;
 6292               		.loc 1 118 0
 6293 0040 1082      		st Z,__zero_reg__
 6294 0042 1182      		std Z+1,__zero_reg__
 6295 0044 1282      		std Z+2,__zero_reg__
 6296 0046 1382      		std Z+3,__zero_reg__
 6297               	.LVL406:
 6298 0048 1482      		std Z+4,__zero_reg__
 6299 004a 1582      		std Z+5,__zero_reg__
 6300 004c 1682      		std Z+6,__zero_reg__
 6301 004e 1782      		std Z+7,__zero_reg__
 6302               	.LVL407:
 6303 0050 1086      		std Z+8,__zero_reg__
 6304 0052 1186      		std Z+9,__zero_reg__
 6305 0054 1286      		std Z+10,__zero_reg__
 6306 0056 1386      		std Z+11,__zero_reg__
 6307               	.LVL408:
 6308 0058 3C96      		adiw r30,12
 6309               	.LBE141:
 116:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 6310               		.loc 1 116 0
 6311 005a 8E17      		cp r24,r30
 6312 005c 9F07      		cpc r25,r31
 6313 005e 01F4      		brne .L188
 6314 0060 212C      		mov r2,__zero_reg__
 6315 0062 312C      		mov r3,__zero_reg__
 6316 0064 1EA6      		std Y+46,__zero_reg__
 6317               	.LVL409:
 6318               	.L189:
 6319 0066 2BA6      		std Y+43,r2
 6320               	.LVL410:
 6321               	.LBE140:
 6322               	.LBB142:
 6323               	.LBB143:
 122:../src/matrix_utils.c **** 		for(uint8_t j=0;j<(i+1);j++){
 6324               		.loc 1 122 0
 6325 0068 00E0      		ldi r16,0
 6326 006a 10E0      		ldi r17,0
 6327 006c 912C      		mov r9,__zero_reg__
 6328 006e 412C      		mov r4,__zero_reg__
 6329 0070 512C      		mov r5,__zero_reg__
 6330 0072 3201      		movw r6,r4
 6331 0074 C101      		movw r24,r2
 6332 0076 880F      		lsl r24
 6333 0078 991F      		rol r25
 6334               	.LBB144:
 132:../src/matrix_utils.c **** 				L[i][j] = (1.0/ L[j][j] * ( (*A)[i][j] - s ));
 6335               		.loc 1 132 0
 6336 007a FC01      		movw r30,r24
 6337 007c E20D      		add r30,r2
 6338 007e F31D      		adc r31,r3
 6339 0080 E9A7      		std Y+41,r30
 6340 0082 FAA7      		std Y+42,r31
 127:../src/matrix_utils.c **** 			if(i==j){
 6341               		.loc 1 127 0
 6342 0084 FBA5      		ldd r31,Y+43
 6343 0086 F915      		cp r31,r9
 6344 0088 01F4      		brne .+2
 6345 008a 00C0      		rjmp .L208
 6346               	.LVL411:
 6347               	.L191:
 132:../src/matrix_utils.c **** 				L[i][j] = (1.0/ L[j][j] * ( (*A)[i][j] - s ));
 6348               		.loc 1 132 0
 6349 008c E9A4      		ldd r14,Y+41
 6350 008e FAA4      		ldd r15,Y+42
 6351 0090 E00E      		add r14,r16
 6352 0092 F11E      		adc r15,r17
 6353 0094 EE0C      		lsl r14
 6354 0096 FF1C      		rol r15
 6355 0098 EE0C      		lsl r14
 6356 009a FF1C      		rol r15
 6357 009c CC24      		clr r12
 6358 009e C394      		inc r12
 6359 00a0 D12C      		mov r13,__zero_reg__
 6360 00a2 CC0E      		add r12,r28
 6361 00a4 DD1E      		adc r13,r29
 6362 00a6 CE0C      		add r12,r14
 6363 00a8 DF1C      		adc r13,r15
 6364 00aa 0295      		swap r16
 6365 00ac 1295      		swap r17
 6366 00ae 107F      		andi r17,0xf0
 6367 00b0 1027      		eor r17,r16
 6368 00b2 007F      		andi r16,0xf0
 6369 00b4 1027      		eor r17,r16
 6370 00b6 E1E0      		ldi r30,lo8(1)
 6371 00b8 F0E0      		ldi r31,0
 6372 00ba EC0F      		add r30,r28
 6373 00bc FD1F      		adc r31,r29
 6374 00be E00F      		add r30,r16
 6375 00c0 F11F      		adc r31,r17
 6376 00c2 2081      		ld r18,Z
 6377 00c4 3181      		ldd r19,Z+1
 6378 00c6 4281      		ldd r20,Z+2
 6379 00c8 5381      		ldd r21,Z+3
 6380 00ca 60E0      		ldi r22,0
 6381 00cc 70E0      		ldi r23,0
 6382 00ce 80E8      		ldi r24,lo8(-128)
 6383 00d0 9FE3      		ldi r25,lo8(63)
 6384 00d2 0E94 0000 		call __divsf3
 6385               	.LVL412:
 6386 00d6 6DA3      		std Y+37,r22
 6387 00d8 7EA3      		std Y+38,r23
 6388 00da 8FA3      		std Y+39,r24
 6389 00dc 98A7      		std Y+40,r25
 6390 00de F501      		movw r30,r10
 6391 00e0 EE0D      		add r30,r14
 6392 00e2 FF1D      		adc r31,r15
 6393 00e4 A301      		movw r20,r6
 6394 00e6 9201      		movw r18,r4
 6395 00e8 6081      		ld r22,Z
 6396 00ea 7181      		ldd r23,Z+1
 6397 00ec 8281      		ldd r24,Z+2
 6398 00ee 9381      		ldd r25,Z+3
 6399 00f0 0E94 0000 		call __subsf3
 6400               	.LVL413:
 6401 00f4 9B01      		movw r18,r22
 6402 00f6 AC01      		movw r20,r24
 6403 00f8 6DA1      		ldd r22,Y+37
 6404 00fa 7EA1      		ldd r23,Y+38
 6405 00fc 8FA1      		ldd r24,Y+39
 6406 00fe 98A5      		ldd r25,Y+40
 6407 0100 0E94 0000 		call __mulsf3
 6408               	.LVL414:
 6409 0104 F601      		movw r30,r12
 6410 0106 6083      		st Z,r22
 6411 0108 7183      		std Z+1,r23
 6412 010a 8283      		std Z+2,r24
 6413 010c 9383      		std Z+3,r25
 6414               	.LBE144:
 122:../src/matrix_utils.c **** 		for(uint8_t j=0;j<(i+1);j++){
 6415               		.loc 1 122 0
 6416 010e 9394      		inc r9
 6417               	.LVL415:
 6418 0110 092D      		mov r16,r9
 6419 0112 10E0      		ldi r17,0
 6420 0114 2016      		cp r2,r16
 6421 0116 3106      		cpc r3,r17
 6422 0118 04F4      		brge .+2
 6423 011a 00C0      		rjmp .L209
 6424               	.L197:
 6425               	.LVL416:
 6426 011c CC24      		clr r12
 6427 011e C394      		inc r12
 6428 0120 D12C      		mov r13,__zero_reg__
 6429 0122 CC0E      		add r12,r28
 6430 0124 DD1E      		adc r13,r29
 6431 0126 FCE0      		ldi r31,lo8(12)
 6432 0128 9F9E      		mul r9,r31
 6433 012a C00C      		add r12,r0
 6434 012c D11C      		adc r13,r1
 6435 012e 1124      		clr __zero_reg__
 6436 0130 ECA4      		ldd r14,Y+44
 6437 0132 FDA4      		ldd r15,Y+45
 6438 0134 812C      		mov r8,__zero_reg__
 6439 0136 412C      		mov r4,__zero_reg__
 6440 0138 512C      		mov r5,__zero_reg__
 6441 013a 3201      		movw r6,r4
 6442               	.LVL417:
 6443               	.L190:
 6444               	.LBB148:
 6445               	.LBB145:
 125:../src/matrix_utils.c **** 				s += L[i][k] * L[j][k];
 6446               		.loc 1 125 0 discriminator 3
 6447 013c F701      		movw r30,r14
 6448 013e 6191      		ld r22,Z+
 6449 0140 7191      		ld r23,Z+
 6450 0142 8191      		ld r24,Z+
 6451 0144 9191      		ld r25,Z+
 6452 0146 7F01      		movw r14,r30
 6453 0148 F601      		movw r30,r12
 6454 014a 2191      		ld r18,Z+
 6455 014c 3191      		ld r19,Z+
 6456 014e 4191      		ld r20,Z+
 6457 0150 5191      		ld r21,Z+
 6458 0152 6F01      		movw r12,r30
 6459 0154 0E94 0000 		call __mulsf3
 6460               	.LVL418:
 6461 0158 9B01      		movw r18,r22
 6462 015a AC01      		movw r20,r24
 6463 015c C301      		movw r24,r6
 6464 015e B201      		movw r22,r4
 6465 0160 0E94 0000 		call __addsf3
 6466               	.LVL419:
 6467 0164 2B01      		movw r4,r22
 6468 0166 3C01      		movw r6,r24
 6469               	.LVL420:
 124:../src/matrix_utils.c **** 			for(uint8_t k=0; k<j; k++){
 6470               		.loc 1 124 0 discriminator 3
 6471 0168 8394      		inc r8
 6472               	.LVL421:
 6473 016a 8914      		cp r8,r9
 6474 016c 00F0      		brlo .L190
 6475               	.LBE145:
 127:../src/matrix_utils.c **** 			if(i==j){
 6476               		.loc 1 127 0
 6477 016e FBA5      		ldd r31,Y+43
 6478 0170 F911      		cpse r31,r9
 6479 0172 00C0      		rjmp .L191
 6480               	.LVL422:
 6481               	.L208:
 6482               	.LBB146:
 128:../src/matrix_utils.c **** 				float tmp = (*A)[i][j]-s;
 6483               		.loc 1 128 0
 6484 0174 E9A5      		ldd r30,Y+41
 6485 0176 FAA5      		ldd r31,Y+42
 6486 0178 E00F      		add r30,r16
 6487 017a F11F      		adc r31,r17
 6488 017c EE0F      		lsl r30
 6489 017e FF1F      		rol r31
 6490 0180 EE0F      		lsl r30
 6491 0182 FF1F      		rol r31
 6492 0184 EA0D      		add r30,r10
 6493 0186 FB1D      		adc r31,r11
 6494 0188 A301      		movw r20,r6
 6495 018a 9201      		movw r18,r4
 6496 018c 6081      		ld r22,Z
 6497 018e 7181      		ldd r23,Z+1
 6498 0190 8281      		ldd r24,Z+2
 6499 0192 9381      		ldd r25,Z+3
 6500 0194 0E94 0000 		call __subsf3
 6501               	.LVL423:
 6502 0198 6B01      		movw r12,r22
 6503 019a 7C01      		movw r14,r24
 6504               	.LVL424:
 129:../src/matrix_utils.c **** 				if(tmp<=0 || isnan(tmp)) flag=1;
 6505               		.loc 1 129 0
 6506 019c 20E0      		ldi r18,0
 6507 019e 30E0      		ldi r19,0
 6508 01a0 A901      		movw r20,r18
 6509 01a2 0E94 0000 		call __lesf2
 6510               	.LVL425:
 6511 01a6 1816      		cp __zero_reg__,r24
 6512 01a8 04F0      		brlt .+2
 6513 01aa 00C0      		rjmp .L199
 129:../src/matrix_utils.c **** 				if(tmp<=0 || isnan(tmp)) flag=1;
 6514               		.loc 1 129 0 is_stmt 0 discriminator 2
 6515 01ac A701      		movw r20,r14
 6516 01ae 9601      		movw r18,r12
 6517 01b0 C701      		movw r24,r14
 6518 01b2 B601      		movw r22,r12
 6519 01b4 0E94 0000 		call __unordsf2
 6520               	.LVL426:
 6521 01b8 8111      		cpse r24,__zero_reg__
 6522 01ba 00C0      		rjmp .L210
 6523               	.L192:
 130:../src/matrix_utils.c **** 				L[i][j] = sqrtf(tmp);
 6524               		.loc 1 130 0 is_stmt 1
 6525 01bc C701      		movw r24,r14
 6526 01be B601      		movw r22,r12
 6527 01c0 0E94 0000 		call sqrtf
 6528               	.LVL427:
 6529 01c4 E9A5      		ldd r30,Y+41
 6530 01c6 FAA5      		ldd r31,Y+42
 6531 01c8 E00F      		add r30,r16
 6532 01ca F11F      		adc r31,r17
 6533 01cc EE0F      		lsl r30
 6534 01ce FF1F      		rol r31
 6535 01d0 EE0F      		lsl r30
 6536 01d2 FF1F      		rol r31
 6537 01d4 21E0      		ldi r18,lo8(1)
 6538 01d6 30E0      		ldi r19,0
 6539 01d8 2C0F      		add r18,r28
 6540 01da 3D1F      		adc r19,r29
 6541 01dc E20F      		add r30,r18
 6542 01de F31F      		adc r31,r19
 6543 01e0 6083      		st Z,r22
 6544 01e2 7183      		std Z+1,r23
 6545 01e4 8283      		std Z+2,r24
 6546 01e6 9383      		std Z+3,r25
 6547               	.LBE146:
 6548               	.LBE148:
 122:../src/matrix_utils.c **** 		for(uint8_t j=0;j<(i+1);j++){
 6549               		.loc 1 122 0
 6550 01e8 9394      		inc r9
 6551               	.LVL428:
 6552 01ea 092D      		mov r16,r9
 6553 01ec 10E0      		ldi r17,0
 6554 01ee 2016      		cp r2,r16
 6555 01f0 3106      		cpc r3,r17
 6556 01f2 04F0      		brlt .+2
 6557 01f4 00C0      		rjmp .L197
 6558               	.LVL429:
 6559               	.L209:
 6560 01f6 2FEF      		ldi r18,-1
 6561 01f8 221A      		sub r2,r18
 6562 01fa 320A      		sbc r3,r18
 6563               	.LVL430:
 6564 01fc 8CA5      		ldd r24,Y+44
 6565 01fe 9DA5      		ldd r25,Y+45
 6566 0200 0C96      		adiw r24,12
 6567 0202 8CA7      		std Y+44,r24
 6568 0204 9DA7      		std Y+45,r25
 6569               	.LBE143:
 121:../src/matrix_utils.c **** 	for(uint8_t i=0;i<3;i++){
 6570               		.loc 1 121 0
 6571 0206 93E0      		ldi r25,3
 6572 0208 2916      		cp r2,r25
 6573 020a 3104      		cpc r3,__zero_reg__
 6574 020c 01F0      		breq .+2
 6575 020e 00C0      		rjmp .L189
 6576               	.LBE142:
 136:../src/matrix_utils.c **** 	if(flag){
 6577               		.loc 1 136 0
 6578 0210 FEA5      		ldd r31,Y+46
 6579 0212 F111      		cpse r31,__zero_reg__
 6580 0214 00C0      		rjmp .L211
 143:../src/matrix_utils.c **** 	return 1;
 6581               		.loc 1 143 0
 6582 0216 81E0      		ldi r24,lo8(1)
 6583               	.L204:
 6584               	/* epilogue start */
 144:../src/matrix_utils.c **** }
 6585               		.loc 1 144 0
 6586 0218 AE96      		adiw r28,46
 6587               	.LVL431:
 6588 021a CDBF      		out __SP_L__,r28
 6589 021c DEBF      		out __SP_H__,r29
 6590 021e DF91      		pop r29
 6591 0220 CF91      		pop r28
 6592               	.LVL432:
 6593 0222 1F91      		pop r17
 6594 0224 0F91      		pop r16
 6595 0226 FF90      		pop r15
 6596 0228 EF90      		pop r14
 6597 022a DF90      		pop r13
 6598 022c CF90      		pop r12
 6599 022e BF90      		pop r11
 6600 0230 AF90      		pop r10
 6601               	.LVL433:
 6602 0232 9F90      		pop r9
 6603               	.LVL434:
 6604 0234 8F90      		pop r8
 6605 0236 7F90      		pop r7
 6606 0238 6F90      		pop r6
 6607 023a 5F90      		pop r5
 6608 023c 4F90      		pop r4
 6609 023e 3F90      		pop r3
 6610 0240 2F90      		pop r2
 6611               	.LVL435:
 6612 0242 0895      		ret
 6613               	.LVL436:
 6614               	.L199:
 6615               	.LBB151:
 6616               	.LBB150:
 6617               	.LBB149:
 6618               	.LBB147:
 129:../src/matrix_utils.c **** 				if(tmp<=0 || isnan(tmp)) flag=1;
 6619               		.loc 1 129 0
 6620 0244 21E0      		ldi r18,lo8(1)
 6621 0246 2EA7      		std Y+46,r18
 6622 0248 00C0      		rjmp .L192
 6623               	.L210:
 6624 024a 31E0      		ldi r19,lo8(1)
 6625 024c 3EA7      		std Y+46,r19
 6626 024e 00C0      		rjmp .L192
 6627               	.LVL437:
 6628               	.L211:
 6629               	.LBE147:
 6630               	.LBE149:
 6631               	.LBE150:
 6632               	.LBE151:
 137:../src/matrix_utils.c **** 		printf("Non-Positive Definite Matrix Detected!\r\n");
 6633               		.loc 1 137 0
 6634 0250 80E0      		ldi r24,lo8(.LC2)
 6635 0252 90E0      		ldi r25,hi8(.LC2)
 6636 0254 0E94 0000 		call puts
 6637               	.LVL438:
 138:../src/matrix_utils.c **** 		printMatrixMathematica(A);
 6638               		.loc 1 138 0
 6639 0258 C501      		movw r24,r10
 6640 025a 0E94 0000 		call printMatrixMathematica
 6641               	.LVL439:
 139:../src/matrix_utils.c **** 		printf("Cholesky Decomposition:\r\n");
 6642               		.loc 1 139 0
 6643 025e 80E0      		ldi r24,lo8(.LC3)
 6644 0260 90E0      		ldi r25,hi8(.LC3)
 6645 0262 0E94 0000 		call puts
 6646               	.LVL440:
 140:../src/matrix_utils.c **** 		printMatrixMathematica(&L);
 6647               		.loc 1 140 0
 6648 0266 CE01      		movw r24,r28
 6649 0268 0196      		adiw r24,1
 6650 026a 0E94 0000 		call printMatrixMathematica
 6651               	.LVL441:
 141:../src/matrix_utils.c **** 		return 0;
 6652               		.loc 1 141 0
 6653 026e 80E0      		ldi r24,0
 6654 0270 00C0      		rjmp .L204
 6655               		.cfi_endproc
 6656               	.LFE39:
 6658               	.global	matrix3mathEndStr
 6659               		.section	.progmem.data.matrix3mathEndStr,"a",@progbits
 6662               	matrix3mathEndStr:
 6663 0000 2020 7B25 		.string	"  {%9.4f, %9.4f, %9.4f}\r\n};\r\n"
 6663      392E 3466 
 6663      2C20 2539 
 6663      2E34 662C 
 6663      2025 392E 
 6664               	.global	matrix3mathStr
 6665               		.section	.progmem.data.matrix3mathStr,"a",@progbits
 6668               	matrix3mathStr:
 6669 0000 2020 7B25 		.string	"  {%9.4f, %9.4f, %9.4f},\r\n"
 6669      392E 3466 
 6669      2C20 2539 
 6669      2E34 662C 
 6669      2025 392E 
 6670               	.global	matrix3mathStartStr
 6671               		.section	.progmem.data.matrix3mathStartStr,"a",@progbits
 6674               	matrix3mathStartStr:
 6675 0000 7B0D 0A20 		.string	"{\r\n  {%9.4f, %9.4f, %9.4f},\r\n"
 6675      207B 2539 
 6675      2E34 662C 
 6675      2025 392E 
 6675      3466 2C20 
 6676               	.global	matrix3str
 6677               		.section	.progmem.data.matrix3str,"a",@progbits
 6680               	matrix3str:
 6681 0000 7C20 2537 		.string	"| %7.1f %7.1f %7.1f |\r\n"
 6681      2E31 6620 
 6681      2537 2E31 
 6681      6620 2537 
 6681      2E31 6620 
 6682               		.comm	rtc_epoch,2,1
 6683               		.comm	droplet_ID,2,1
 6684               		.text
 6685               	.Letext0:
 6686               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 6687               		.file 3 "../include/droplet_base.h"
 6688               		.file 4 "../include/matrix_utils.h"
 6689               		.file 5 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 6690               		.file 6 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 6691               		.file 7 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 matrix_utils.c
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:2      *ABS*:0000003e __SP_H__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:3      *ABS*:0000003d __SP_L__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:4      *ABS*:0000003f __SREG__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6      *ABS*:00000034 __CCP__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:7      *ABS*:00000000 __tmp_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:8      *ABS*:00000001 __zero_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:16     .text.vectorAdd:00000000 vectorAdd
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:124    .text.vectorSubtract:00000000 vectorSubtract
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:231    .text.vectorSquare:00000000 vectorSquare
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:362    .text.matrixScale:00000000 matrixScale
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:485    .text.matrixTimesVector:00000000 matrixTimesVector
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:666    .text.matrixAdd:00000000 matrixAdd
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:820    .text.matrixSubtract:00000000 matrixSubtract
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:974    .text.matrixMultiply:00000000 matrixMultiply
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:1208   .text.matrixInplaceMultiply:00000000 matrixInplaceMultiply
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:1564   .text.matrixTranspose:00000000 matrixTranspose
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:1642   .text.matrixInplaceTranspose:00000000 matrixInplaceTranspose
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:1784   .text.choleskyDecomposition:00000000 choleskyDecomposition
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:2035   .text.getEigenvector:00000000 getEigenvector
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:2256   .text.matrixInverse:00000000 matrixInverse
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:2900   .text.matrixInplaceInverse:00000000 matrixInplaceInverse
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:3559   .text.matrixDet:00000000 matrixDet
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:3835   .text.eigenvalues:00000000 eigenvalues
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:4712   .text.eigensystem:00000000 eigensystem
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:5620   .text.matrixTrace:00000000 matrixTrace
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:5667   .text.matrixCopy:00000000 matrixCopy
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:5744   .text.printMatrix:00000000 printMatrix
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6680   .progmem.data.matrix3str:00000000 matrix3str
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:5965   .text.printMatrixMathematica:00000000 printMatrixMathematica
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6674   .progmem.data.matrix3mathStartStr:00000000 matrix3mathStartStr
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6668   .progmem.data.matrix3mathStr:00000000 matrix3mathStr
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6662   .progmem.data.matrix3mathEndStr:00000000 matrix3mathEndStr
C:\Users\JOHNK~1\AppData\Local\Temp\ccQou5Pb.s:6186   .text.positiveDefiniteQ:00000000 positiveDefiniteQ
                            *COM*:00000002 rtc_epoch
                            *COM*:00000002 droplet_ID

UNDEFINED SYMBOLS
__addsf3
__subsf3
__mulsf3
__divsf3
sqrtf
__gtsf2
__eqsf2
__lesf2
__gesf2
acos
cos
printf_P
__unordsf2
puts
__do_copy_data
__do_clear_bss
