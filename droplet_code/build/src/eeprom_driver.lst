   1               		.file	"eeprom_driver.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               		.section	.text.wait_for_nvm,"ax",@progbits
  13               	.global	wait_for_nvm
  15               	wait_for_nvm:
  16               	.LFB1:
  17               		.file 1 "../src/eeprom_driver.c"
   1:../src/eeprom_driver.c **** /************************************************************************/
   2:../src/eeprom_driver.c **** /* XMEGA EEPROM Driver                                                  */
   3:../src/eeprom_driver.c **** /*                                                                      */
   4:../src/eeprom_driver.c **** /* eeprom.c                                                             */
   5:../src/eeprom_driver.c **** /*                                                                      */
   6:../src/eeprom_driver.c **** /* Alex Forencich <alex@alexforencich.com>                              */
   7:../src/eeprom_driver.c **** /*                                                                      */
   8:../src/eeprom_driver.c **** /* Copyright (c) 2011 Alex Forencich                                    */
   9:../src/eeprom_driver.c **** /*                                                                      */
  10:../src/eeprom_driver.c **** /* Permission is hereby granted, free of charge, to any person          */
  11:../src/eeprom_driver.c **** /* obtaining a copy of this software and associated documentation       */
  12:../src/eeprom_driver.c **** /* files(the "Software"), to deal in the Software without restriction,  */
  13:../src/eeprom_driver.c **** /* including without limitation the rights to use, copy, modify, merge, */
  14:../src/eeprom_driver.c **** /* publish, distribute, sublicense, and/or sell copies of the Software, */
  15:../src/eeprom_driver.c **** /* and to permit persons to whom the Software is furnished to do so,    */
  16:../src/eeprom_driver.c **** /* subject to the following conditions:                                 */
  17:../src/eeprom_driver.c **** /*                                                                      */
  18:../src/eeprom_driver.c **** /* The above copyright notice and this permission notice shall be       */
  19:../src/eeprom_driver.c **** /* included in all copies or substantial portions of the Software.      */
  20:../src/eeprom_driver.c **** /*                                                                      */
  21:../src/eeprom_driver.c **** /* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,      */
  22:../src/eeprom_driver.c **** /* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF   */
  23:../src/eeprom_driver.c **** /* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND                */
  24:../src/eeprom_driver.c **** /* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS  */
  25:../src/eeprom_driver.c **** /* BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN   */
  26:../src/eeprom_driver.c **** /* ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN    */
  27:../src/eeprom_driver.c **** /* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE     */
  28:../src/eeprom_driver.c **** /* SOFTWARE.                                                            */
  29:../src/eeprom_driver.c **** /*                                                                      */
  30:../src/eeprom_driver.c **** /************************************************************************/
  31:../src/eeprom_driver.c **** 
  32:../src/eeprom_driver.c **** #include "eeprom_driver.h"
  33:../src/eeprom_driver.c **** #include "string.h"
  34:../src/eeprom_driver.c **** 
  35:../src/eeprom_driver.c **** #ifdef __AVR_XMEGA__
  36:../src/eeprom_driver.c **** #ifdef USE_AVR1008_EEPROM
  37:../src/eeprom_driver.c **** 
  38:../src/eeprom_driver.c **** #include <avr/sleep.h>
  39:../src/eeprom_driver.c **** 
  40:../src/eeprom_driver.c **** #endif // USE_AVR1008_EEPROM
  41:../src/eeprom_driver.c **** #endif // __AVR_XMEGA__
  42:../src/eeprom_driver.c **** 
  43:../src/eeprom_driver.c **** #ifdef __AVR_XMEGA__
  44:../src/eeprom_driver.c **** 
  45:../src/eeprom_driver.c **** // NVM call
  46:../src/eeprom_driver.c **** static inline void NVM_EXEC(void)
  47:../src/eeprom_driver.c **** {
  48:../src/eeprom_driver.c ****         void *z = (void *)&NVM_CTRLA;
  49:../src/eeprom_driver.c ****         
  50:../src/eeprom_driver.c ****         __asm__ volatile("out %[ccp], %[ioreg]"  "\n\t"
  51:../src/eeprom_driver.c ****         "st z, %[cmdex]"
  52:../src/eeprom_driver.c ****         :
  53:../src/eeprom_driver.c ****         : [ccp] "I" (_SFR_IO_ADDR(CCP)),
  54:../src/eeprom_driver.c ****         [ioreg] "d" (CCP_IOREG_gc),
  55:../src/eeprom_driver.c ****                      [cmdex] "r" (NVM_CMDEX_bm),
  56:../src/eeprom_driver.c ****                      [z] "z" (z)
  57:../src/eeprom_driver.c ****                      );
  58:../src/eeprom_driver.c **** }
  59:../src/eeprom_driver.c **** 
  60:../src/eeprom_driver.c **** #ifdef USE_AVR1008_EEPROM
  61:../src/eeprom_driver.c **** 
  62:../src/eeprom_driver.c **** // Interrupt handler for the EEPROM write "done" interrupt
  63:../src/eeprom_driver.c **** ISR(NVM_EE_vect)
  64:../src/eeprom_driver.c **** {
  65:../src/eeprom_driver.c ****         // Disable the EEPROM interrupt
  66:../src/eeprom_driver.c ****         NVM.INTCTRL = (NVM.INTCTRL & ~NVM_EELVL_gm);
  67:../src/eeprom_driver.c **** }
  68:../src/eeprom_driver.c **** 
  69:../src/eeprom_driver.c **** // AVR1008 fix
  70:../src/eeprom_driver.c **** static inline void NVM_EXEC_WRAPPER(void)
  71:../src/eeprom_driver.c **** {
  72:../src/eeprom_driver.c ****         // Save the Sleep register
  73:../src/eeprom_driver.c ****         uint8_t sleepCtr = SLEEP.CTRL;
  74:../src/eeprom_driver.c ****         // Set sleep mode to IDLE
  75:../src/eeprom_driver.c ****         SLEEP.CTRL = (SLEEP.CTRL & ~SLEEP.CTRL) | SLEEP_SMODE_IDLE_gc;
  76:../src/eeprom_driver.c ****         // Save the PMIC Status and control registers
  77:../src/eeprom_driver.c ****         uint8_t statusStore = PMIC.STATUS;
  78:../src/eeprom_driver.c ****         uint8_t pmicStore = PMIC.CTRL;
  79:../src/eeprom_driver.c ****         
  80:../src/eeprom_driver.c ****         // Enable only the highest level of interrupts
  81:../src/eeprom_driver.c ****         PMIC.CTRL = (PMIC.CTRL & ~(PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm)) | PMIC_HILVLEN_bm;
  82:../src/eeprom_driver.c ****         // Save SREG for later use
  83:../src/eeprom_driver.c ****         uint8_t globalInt = SREG;
  84:../src/eeprom_driver.c ****         // Enable global interrupts
  85:../src/eeprom_driver.c ****         sei();
  86:../src/eeprom_driver.c ****         // Set sleep enabled
  87:../src/eeprom_driver.c ****         SLEEP.CTRL |= SLEEP_SEN_bm;
  88:../src/eeprom_driver.c ****         // Save eeprom interrupt settings for later
  89:../src/eeprom_driver.c ****         uint8_t eepromintStore = NVM.INTCTRL;
  90:../src/eeprom_driver.c ****         NVM_EXEC();
  91:../src/eeprom_driver.c ****         // Enable EEPROM interrupt
  92:../src/eeprom_driver.c ****         NVM.INTCTRL =  NVM_EELVL0_bm | NVM_EELVL1_bm;
  93:../src/eeprom_driver.c ****         // Sleep before 2.5uS has passed
  94:../src/eeprom_driver.c ****         sleep_cpu();
  95:../src/eeprom_driver.c ****         // Restore sleep settings
  96:../src/eeprom_driver.c ****         SLEEP.CTRL = sleepCtr;
  97:../src/eeprom_driver.c ****         // Restore PMIC status and control registers
  98:../src/eeprom_driver.c ****         PMIC.STATUS = statusStore;
  99:../src/eeprom_driver.c ****         PMIC.CTRL = pmicStore;
 100:../src/eeprom_driver.c ****         // Restore EEPROM interruptsettings
 101:../src/eeprom_driver.c ****         NVM.INTCTRL = eepromintStore;
 102:../src/eeprom_driver.c ****         // Restore global interrupt settings
 103:../src/eeprom_driver.c ****         SREG = globalInt;
 104:../src/eeprom_driver.c **** }
 105:../src/eeprom_driver.c **** 
 106:../src/eeprom_driver.c **** #else
 107:../src/eeprom_driver.c **** 
 108:../src/eeprom_driver.c **** #define NVM_EXEC_WRAPPER NVM_EXEC
 109:../src/eeprom_driver.c **** 
 110:../src/eeprom_driver.c **** #endif // USE_AVR1008_EEPROM
 111:../src/eeprom_driver.c **** 
 112:../src/eeprom_driver.c **** 
 113:../src/eeprom_driver.c **** void wait_for_nvm(void)
 114:../src/eeprom_driver.c **** {
  18               		.loc 1 114 0
  19               		.cfi_startproc
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  24               	.L2:
 115:../src/eeprom_driver.c ****         while (NVM.STATUS & NVM_NVMBUSY_bm) { };
  25               		.loc 1 115 0 discriminator 1
  26 0000 8091 CF01 		lds r24,463
  27 0004 87FD      		sbrc r24,7
  28 0006 00C0      		rjmp .L2
  29               	/* epilogue start */
 116:../src/eeprom_driver.c **** }
  30               		.loc 1 116 0
  31 0008 0895      		ret
  32               		.cfi_endproc
  33               	.LFE1:
  35               		.section	.text.flush_buffer,"ax",@progbits
  36               	.global	flush_buffer
  38               	flush_buffer:
  39               	.LFB2:
 117:../src/eeprom_driver.c **** 
 118:../src/eeprom_driver.c **** void flush_buffer(void)
 119:../src/eeprom_driver.c **** {
  40               		.loc 1 119 0
  41               		.cfi_startproc
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  46               	.L6:
  47               	.LBB50:
  48               	.LBB51:
 115:../src/eeprom_driver.c **** }
  49               		.loc 1 115 0
  50 0000 8091 CF01 		lds r24,463
  51 0004 87FD      		sbrc r24,7
  52 0006 00C0      		rjmp .L6
  53               	.LBE51:
  54               	.LBE50:
 120:../src/eeprom_driver.c ****         wait_for_nvm();
 121:../src/eeprom_driver.c ****         
 122:../src/eeprom_driver.c ****         if ((NVM.STATUS & NVM_EELOAD_bm) != 0) {
  55               		.loc 1 122 0
  56 0008 8091 CF01 		lds r24,463
  57 000c 81FF      		sbrs r24,1
  58 000e 00C0      		rjmp .L5
  59               	.LBB52:
  60               	.LBB53:
 123:../src/eeprom_driver.c ****                 NVM.CMD = NVM_CMD_ERASE_EEPROM_BUFFER_gc;
  61               		.loc 1 123 0
  62 0010 86E3      		ldi r24,lo8(54)
  63 0012 8093 CA01 		sts 458,r24
  64               	.LVL0:
  65               	.LBB54:
  66               	.LBB55:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
  67               		.loc 1 50 0
  68 0016 EBEC      		ldi r30,lo8(-53)
  69 0018 F1E0      		ldi r31,lo8(1)
  70 001a 21E0      		ldi r18,lo8(1)
  71 001c 30E0      		ldi r19,0
  72 001e 88ED      		ldi r24,lo8(-40)
  73 0020 90E0      		ldi r25,0
  74               	/* #APP */
  75               	 ;  50 "../src/eeprom_driver.c" 1
  76 0022 84BF      		out 52, r24
  77 0024 2083      		st z, r18
  78               	 ;  0 "" 2
  79               	.LVL1:
  80               	/* #NOAPP */
  81               	.L5:
  82 0026 0895      		ret
  83               	.LBE55:
  84               	.LBE54:
  85               	.LBE53:
  86               	.LBE52:
  87               		.cfi_endproc
  88               	.LFE2:
  90               		.section	.text.EEPROM_read_byte,"ax",@progbits
  91               	.global	EEPROM_read_byte
  93               	EEPROM_read_byte:
  94               	.LFB3:
 124:../src/eeprom_driver.c ****                 NVM_EXEC();
 125:../src/eeprom_driver.c ****         }
 126:../src/eeprom_driver.c **** }
 127:../src/eeprom_driver.c **** 
 128:../src/eeprom_driver.c **** 
 129:../src/eeprom_driver.c **** uint8_t EEPROM_read_byte(uint16_t addr)
 130:../src/eeprom_driver.c **** {
  95               		.loc 1 130 0
  96               		.cfi_startproc
  97               	/* prologue: function */
  98               	/* frame size = 0 */
  99               	/* stack size = 0 */
 100               	.L__stack_usage = 0
 101               	.LVL2:
 102               	.L13:
 103               	.LBB56:
 104               	.LBB57:
 115:../src/eeprom_driver.c **** }
 105               		.loc 1 115 0
 106 0000 2091 CF01 		lds r18,463
 107 0004 27FD      		sbrc r18,7
 108 0006 00C0      		rjmp .L13
 109               	.LBE57:
 110               	.LBE56:
 131:../src/eeprom_driver.c ****         wait_for_nvm();
 132:../src/eeprom_driver.c ****         
 133:../src/eeprom_driver.c ****         NVM.ADDR0 = addr & 0xFF;
 111               		.loc 1 133 0
 112 0008 8093 C001 		sts 448,r24
 134:../src/eeprom_driver.c ****         NVM.ADDR1 = (addr >> 8) & 0x1F;
 113               		.loc 1 134 0
 114 000c 9F71      		andi r25,lo8(31)
 115 000e 9093 C101 		sts 449,r25
 135:../src/eeprom_driver.c ****         NVM.ADDR2 = 0;
 116               		.loc 1 135 0
 117 0012 1092 C201 		sts 450,__zero_reg__
 136:../src/eeprom_driver.c ****         
 137:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_READ_EEPROM_gc;
 118               		.loc 1 137 0
 119 0016 86E0      		ldi r24,lo8(6)
 120               	.LVL3:
 121 0018 8093 CA01 		sts 458,r24
 122               	.LVL4:
 123               	.LBB58:
 124               	.LBB59:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 125               		.loc 1 50 0
 126 001c EBEC      		ldi r30,lo8(-53)
 127 001e F1E0      		ldi r31,lo8(1)
 128 0020 21E0      		ldi r18,lo8(1)
 129 0022 30E0      		ldi r19,0
 130 0024 88ED      		ldi r24,lo8(-40)
 131 0026 90E0      		ldi r25,0
 132               	/* #APP */
 133               	 ;  50 "../src/eeprom_driver.c" 1
 134 0028 84BF      		out 52, r24
 135 002a 2083      		st z, r18
 136               	 ;  0 "" 2
 137               	/* #NOAPP */
 138               	.LBE59:
 139               	.LBE58:
 138:../src/eeprom_driver.c ****         NVM_EXEC();
 139:../src/eeprom_driver.c ****         
 140:../src/eeprom_driver.c ****         return NVM.DATA0;
 140               		.loc 1 140 0
 141 002c 8091 C401 		lds r24,452
 141:../src/eeprom_driver.c **** }
 142               		.loc 1 141 0
 143 0030 0895      		ret
 144               		.cfi_endproc
 145               	.LFE3:
 147               		.section	.text.EEPROM_write_byte,"ax",@progbits
 148               	.global	EEPROM_write_byte
 150               	EEPROM_write_byte:
 151               	.LFB4:
 142:../src/eeprom_driver.c **** 
 143:../src/eeprom_driver.c **** 
 144:../src/eeprom_driver.c **** void EEPROM_write_byte(uint16_t addr, uint8_t byte)
 145:../src/eeprom_driver.c **** {
 152               		.loc 1 145 0
 153               		.cfi_startproc
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
 158               	.LVL5:
 159               	.L16:
 160               	.LBB72:
 161               	.LBB73:
 162               	.LBB74:
 163               	.LBB75:
 115:../src/eeprom_driver.c **** }
 164               		.loc 1 115 0
 165 0000 2091 CF01 		lds r18,463
 166 0004 27FD      		sbrc r18,7
 167 0006 00C0      		rjmp .L16
 168               	.LBE75:
 169               	.LBE74:
 122:../src/eeprom_driver.c ****                 NVM.CMD = NVM_CMD_ERASE_EEPROM_BUFFER_gc;
 170               		.loc 1 122 0
 171 0008 2091 CF01 		lds r18,463
 172 000c 21FF      		sbrs r18,1
 173 000e 00C0      		rjmp .L17
 174               	.LBB76:
 175               	.LBB77:
 123:../src/eeprom_driver.c ****                 NVM_EXEC();
 176               		.loc 1 123 0
 177 0010 26E3      		ldi r18,lo8(54)
 178 0012 2093 CA01 		sts 458,r18
 179               	.LVL6:
 180               	.LBB78:
 181               	.LBB79:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 182               		.loc 1 50 0
 183 0016 EBEC      		ldi r30,lo8(-53)
 184 0018 F1E0      		ldi r31,lo8(1)
 185 001a 41E0      		ldi r20,lo8(1)
 186 001c 50E0      		ldi r21,0
 187 001e 28ED      		ldi r18,lo8(-40)
 188 0020 30E0      		ldi r19,0
 189               	/* #APP */
 190               	 ;  50 "../src/eeprom_driver.c" 1
 191 0022 24BF      		out 52, r18
 192 0024 4083      		st z, r20
 193               	 ;  0 "" 2
 194               	.LVL7:
 195               	/* #NOAPP */
 196               	.L17:
 197               	.LBE79:
 198               	.LBE78:
 199               	.LBE77:
 200               	.LBE76:
 201               	.LBE73:
 202               	.LBE72:
 146:../src/eeprom_driver.c ****         flush_buffer();
 147:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_LOAD_EEPROM_BUFFER_gc;
 203               		.loc 1 147 0
 204 0026 23E3      		ldi r18,lo8(51)
 205 0028 2093 CA01 		sts 458,r18
 148:../src/eeprom_driver.c ****         
 149:../src/eeprom_driver.c ****         NVM.ADDR0 = addr & 0xFF;
 206               		.loc 1 149 0
 207 002c 8093 C001 		sts 448,r24
 150:../src/eeprom_driver.c ****         NVM.ADDR1 = (addr >> 8) & 0x1F;
 208               		.loc 1 150 0
 209 0030 9F71      		andi r25,lo8(31)
 210 0032 9093 C101 		sts 449,r25
 151:../src/eeprom_driver.c ****         NVM.ADDR2 = 0;
 211               		.loc 1 151 0
 212 0036 1092 C201 		sts 450,__zero_reg__
 152:../src/eeprom_driver.c ****         
 153:../src/eeprom_driver.c ****         NVM.DATA0 = byte;
 213               		.loc 1 153 0
 214 003a 6093 C401 		sts 452,r22
 154:../src/eeprom_driver.c ****         
 155:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_ERASE_WRITE_EEPROM_PAGE_gc;
 215               		.loc 1 155 0
 216 003e 85E3      		ldi r24,lo8(53)
 217               	.LVL8:
 218 0040 8093 CA01 		sts 458,r24
 219               	.LVL9:
 220               	.LBB80:
 221               	.LBB81:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 222               		.loc 1 50 0
 223 0044 EBEC      		ldi r30,lo8(-53)
 224 0046 F1E0      		ldi r31,lo8(1)
 225 0048 21E0      		ldi r18,lo8(1)
 226 004a 30E0      		ldi r19,0
 227 004c 88ED      		ldi r24,lo8(-40)
 228 004e 90E0      		ldi r25,0
 229               	/* #APP */
 230               	 ;  50 "../src/eeprom_driver.c" 1
 231 0050 84BF      		out 52, r24
 232 0052 2083      		st z, r18
 233               	 ;  0 "" 2
 234               	/* #NOAPP */
 235 0054 0895      		ret
 236               	.LBE81:
 237               	.LBE80:
 238               		.cfi_endproc
 239               	.LFE4:
 241               		.section	.text.EEPROM_read_block,"ax",@progbits
 242               	.global	EEPROM_read_block
 244               	EEPROM_read_block:
 245               	.LFB5:
 156:../src/eeprom_driver.c ****         NVM_EXEC_WRAPPER();
 157:../src/eeprom_driver.c **** }
 158:../src/eeprom_driver.c **** 
 159:../src/eeprom_driver.c **** 
 160:../src/eeprom_driver.c **** uint16_t EEPROM_read_block(uint16_t addr, uint8_t *dest, uint16_t len)
 161:../src/eeprom_driver.c **** {
 246               		.loc 1 161 0
 247               		.cfi_startproc
 248               	.LVL10:
 249 0000 0F93      		push r16
 250               	.LCFI0:
 251               		.cfi_def_cfa_offset 4
 252               		.cfi_offset 16, -3
 253 0002 1F93      		push r17
 254               	.LCFI1:
 255               		.cfi_def_cfa_offset 5
 256               		.cfi_offset 17, -4
 257 0004 CF93      		push r28
 258               	.LCFI2:
 259               		.cfi_def_cfa_offset 6
 260               		.cfi_offset 28, -5
 261 0006 DF93      		push r29
 262               	.LCFI3:
 263               		.cfi_def_cfa_offset 7
 264               		.cfi_offset 29, -6
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 4 */
 268               	.L__stack_usage = 4
 269               	.LVL11:
 162:../src/eeprom_driver.c ****         uint16_t cnt = 0;
 163:../src/eeprom_driver.c ****         
 164:../src/eeprom_driver.c ****         NVM.ADDR2 = 0;
 270               		.loc 1 164 0
 271 0008 1092 C201 		sts 450,__zero_reg__
 272               	.L23:
 273               	.LBB82:
 274               	.LBB83:
 115:../src/eeprom_driver.c **** }
 275               		.loc 1 115 0
 276 000c 2091 CF01 		lds r18,463
 277 0010 27FD      		sbrc r18,7
 278 0012 00C0      		rjmp .L23
 279               	.LBE83:
 280               	.LBE82:
 165:../src/eeprom_driver.c ****         
 166:../src/eeprom_driver.c ****         wait_for_nvm();
 167:../src/eeprom_driver.c ****         
 168:../src/eeprom_driver.c ****         while (len > 0)
 281               		.loc 1 168 0
 282 0014 4115      		cp r20,__zero_reg__
 283 0016 5105      		cpc r21,__zero_reg__
 284 0018 01F0      		breq .L24
 285 001a DB01      		movw r26,r22
 286 001c 8C01      		movw r16,r24
 287 001e 040F      		add r16,r20
 288 0020 151F      		adc r17,r21
 169:../src/eeprom_driver.c ****         {
 170:../src/eeprom_driver.c ****                 NVM.ADDR0 = addr & 0xFF;
 171:../src/eeprom_driver.c ****                 NVM.ADDR1 = (addr >> 8) & 0x1F;
 172:../src/eeprom_driver.c ****                 
 173:../src/eeprom_driver.c ****                 NVM.CMD = NVM_CMD_READ_EEPROM_gc;
 289               		.loc 1 173 0
 290 0022 36E0      		ldi r19,lo8(6)
 291               	.LBB84:
 292               	.LBB85:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 293               		.loc 1 50 0
 294 0024 C8ED      		ldi r28,lo8(-40)
 295 0026 D0E0      		ldi r29,0
 296 0028 61E0      		ldi r22,lo8(1)
 297 002a 70E0      		ldi r23,0
 298               	.LVL12:
 299 002c EBEC      		ldi r30,lo8(-53)
 300 002e F1E0      		ldi r31,lo8(1)
 301               	.LVL13:
 302               	.L25:
 303               	.LBE85:
 304               	.LBE84:
 170:../src/eeprom_driver.c ****                 NVM.ADDR1 = (addr >> 8) & 0x1F;
 305               		.loc 1 170 0
 306 0030 8093 C001 		sts 448,r24
 171:../src/eeprom_driver.c ****                 
 307               		.loc 1 171 0
 308 0034 292F      		mov r18,r25
 309 0036 2F71      		andi r18,lo8(31)
 310 0038 2093 C101 		sts 449,r18
 311               		.loc 1 173 0
 312 003c 3093 CA01 		sts 458,r19
 313               	.LVL14:
 314               	.LBB87:
 315               	.LBB86:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 316               		.loc 1 50 0
 317               	/* #APP */
 318               	 ;  50 "../src/eeprom_driver.c" 1
 319 0040 C4BF      		out 52, r28
 320 0042 6083      		st z, r22
 321               	 ;  0 "" 2
 322               	.LVL15:
 323               	/* #NOAPP */
 324               	.LBE86:
 325               	.LBE87:
 174:../src/eeprom_driver.c ****                 NVM_EXEC();
 175:../src/eeprom_driver.c ****                 
 176:../src/eeprom_driver.c ****                 *(dest++) = NVM.DATA0; addr++;
 326               		.loc 1 176 0
 327 0044 2091 C401 		lds r18,452
 328 0048 2D93      		st X+,r18
 329 004a 0196      		adiw r24,1
 330               	.LVL16:
 168:../src/eeprom_driver.c ****         {
 331               		.loc 1 168 0
 332 004c 8017      		cp r24,r16
 333 004e 9107      		cpc r25,r17
 334 0050 01F4      		brne .L25
 335               	.LVL17:
 336               	.L24:
 177:../src/eeprom_driver.c ****                 
 178:../src/eeprom_driver.c ****                 len--; cnt++;
 179:../src/eeprom_driver.c ****         }
 180:../src/eeprom_driver.c ****         return cnt;
 181:../src/eeprom_driver.c **** }
 337               		.loc 1 181 0
 338 0052 CA01      		movw r24,r20
 339               	.LVL18:
 340               	/* epilogue start */
 341 0054 DF91      		pop r29
 342 0056 CF91      		pop r28
 343 0058 1F91      		pop r17
 344 005a 0F91      		pop r16
 345 005c 0895      		ret
 346               		.cfi_endproc
 347               	.LFE5:
 349               		.section	.text.EEPROM_write_block,"ax",@progbits
 350               	.global	EEPROM_write_block
 352               	EEPROM_write_block:
 353               	.LFB6:
 182:../src/eeprom_driver.c **** 
 183:../src/eeprom_driver.c **** 
 184:../src/eeprom_driver.c **** uint16_t EEPROM_write_block(uint16_t addr, const uint8_t *src, uint16_t len)
 185:../src/eeprom_driver.c **** {
 354               		.loc 1 185 0
 355               		.cfi_startproc
 356               	.LVL19:
 357 0000 AF92      		push r10
 358               	.LCFI4:
 359               		.cfi_def_cfa_offset 4
 360               		.cfi_offset 10, -3
 361 0002 BF92      		push r11
 362               	.LCFI5:
 363               		.cfi_def_cfa_offset 5
 364               		.cfi_offset 11, -4
 365 0004 DF92      		push r13
 366               	.LCFI6:
 367               		.cfi_def_cfa_offset 6
 368               		.cfi_offset 13, -5
 369 0006 EF92      		push r14
 370               	.LCFI7:
 371               		.cfi_def_cfa_offset 7
 372               		.cfi_offset 14, -6
 373 0008 FF92      		push r15
 374               	.LCFI8:
 375               		.cfi_def_cfa_offset 8
 376               		.cfi_offset 15, -7
 377 000a 0F93      		push r16
 378               	.LCFI9:
 379               		.cfi_def_cfa_offset 9
 380               		.cfi_offset 16, -8
 381 000c 1F93      		push r17
 382               	.LCFI10:
 383               		.cfi_def_cfa_offset 10
 384               		.cfi_offset 17, -9
 385 000e CF93      		push r28
 386               	.LCFI11:
 387               		.cfi_def_cfa_offset 11
 388               		.cfi_offset 28, -10
 389 0010 DF93      		push r29
 390               	.LCFI12:
 391               		.cfi_def_cfa_offset 12
 392               		.cfi_offset 29, -11
 393               	/* prologue: function */
 394               	/* frame size = 0 */
 395               	/* stack size = 9 */
 396               	.L__stack_usage = 9
 397 0012 EC01      		movw r28,r24
 398 0014 DA01      		movw r26,r20
 186:../src/eeprom_driver.c ****         uint8_t byte_addr = addr % EEPROM_PAGE_SIZE;
 399               		.loc 1 186 0
 400 0016 982F      		mov r25,r24
 401 0018 9F71      		andi r25,lo8(31)
 402               	.LVL20:
 187:../src/eeprom_driver.c ****         uint16_t page_addr = addr - byte_addr;
 403               		.loc 1 187 0
 404 001a C91B      		sub r28,r25
 405 001c D109      		sbc r29,__zero_reg__
 406               	.LVL21:
 407               	.L32:
 408               	.LBB104:
 409               	.LBB105:
 410               	.LBB106:
 411               	.LBB107:
 115:../src/eeprom_driver.c **** }
 412               		.loc 1 115 0
 413 001e 2091 CF01 		lds r18,463
 414 0022 27FD      		sbrc r18,7
 415 0024 00C0      		rjmp .L32
 416               	.LBE107:
 417               	.LBE106:
 122:../src/eeprom_driver.c ****                 NVM.CMD = NVM_CMD_ERASE_EEPROM_BUFFER_gc;
 418               		.loc 1 122 0
 419 0026 8091 CF01 		lds r24,463
 420               	.LVL22:
 421 002a 81FD      		sbrc r24,1
 422 002c 00C0      		rjmp .L51
 423               	.LVL23:
 424               	.L34:
 425               	.LBE105:
 426               	.LBE104:
 427               	.LBB113:
 428               	.LBB114:
 115:../src/eeprom_driver.c **** }
 429               		.loc 1 115 0
 430 002e 2091 CF01 		lds r18,463
 431 0032 27FD      		sbrc r18,7
 432 0034 00C0      		rjmp .L34
 433               	.LBE114:
 434               	.LBE113:
 188:../src/eeprom_driver.c ****         uint16_t cnt = 0;
 189:../src/eeprom_driver.c ****         
 190:../src/eeprom_driver.c ****         flush_buffer();
 191:../src/eeprom_driver.c ****         wait_for_nvm();
 192:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_LOAD_EEPROM_BUFFER_gc;
 435               		.loc 1 192 0
 436 0036 83E3      		ldi r24,lo8(51)
 437 0038 8093 CA01 		sts 458,r24
 193:../src/eeprom_driver.c ****         
 194:../src/eeprom_driver.c ****         NVM.ADDR1 = 0;
 438               		.loc 1 194 0
 439 003c 1092 C101 		sts 449,__zero_reg__
 195:../src/eeprom_driver.c ****         NVM.ADDR2 = 0;
 440               		.loc 1 195 0
 441 0040 1092 C201 		sts 450,__zero_reg__
 196:../src/eeprom_driver.c ****         
 197:../src/eeprom_driver.c ****         while (len > 0)
 442               		.loc 1 197 0
 443 0044 1097      		sbiw r26,0
 444 0046 01F0      		breq .L40
 445 0048 8B01      		movw r16,r22
 446 004a 20E0      		ldi r18,0
 447 004c 30E0      		ldi r19,0
 198:../src/eeprom_driver.c ****         {
 199:../src/eeprom_driver.c ****                 NVM.ADDR0 = byte_addr;
 200:../src/eeprom_driver.c ****                 
 201:../src/eeprom_driver.c ****                 NVM.DATA0 = *(src++);
 202:../src/eeprom_driver.c ****                 
 203:../src/eeprom_driver.c ****                 byte_addr++;
 204:../src/eeprom_driver.c ****                 len--;
 205:../src/eeprom_driver.c ****                 
 206:../src/eeprom_driver.c ****                 if (len == 0 || byte_addr >= EEPROM_PAGE_SIZE)
 207:../src/eeprom_driver.c ****                 {
 208:../src/eeprom_driver.c ****                         NVM.ADDR0 = page_addr & 0xFF;
 209:../src/eeprom_driver.c ****                         NVM.ADDR1 = (page_addr >> 8) & 0x1F;
 210:../src/eeprom_driver.c ****                         
 211:../src/eeprom_driver.c ****                         NVM.CMD = NVM_CMD_ERASE_WRITE_EEPROM_PAGE_gc;
 448               		.loc 1 211 0
 449 004e 85E3      		ldi r24,lo8(53)
 450 0050 D82E      		mov r13,r24
 451               	.LBB115:
 452               	.LBB116:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 453               		.loc 1 50 0
 454 0052 48ED      		ldi r20,lo8(-40)
 455 0054 E42E      		mov r14,r20
 456 0056 F12C      		mov r15,__zero_reg__
 457 0058 61E0      		ldi r22,lo8(1)
 458 005a 70E0      		ldi r23,0
 459               	.LVL24:
 460 005c 5BEC      		ldi r21,lo8(-53)
 461 005e A52E      		mov r10,r21
 462 0060 BB24      		clr r11
 463 0062 B394      		inc r11
 464               	.LBE116:
 465               	.LBE115:
 212:../src/eeprom_driver.c ****                         NVM_EXEC();
 213:../src/eeprom_driver.c ****                         
 214:../src/eeprom_driver.c ****                         page_addr += EEPROM_PAGE_SIZE;
 215:../src/eeprom_driver.c ****                         byte_addr = 0;
 216:../src/eeprom_driver.c ****                         
 217:../src/eeprom_driver.c ****                         wait_for_nvm();
 218:../src/eeprom_driver.c ****                         
 219:../src/eeprom_driver.c ****                         NVM.CMD = NVM_CMD_LOAD_EEPROM_BUFFER_gc;
 466               		.loc 1 219 0
 467 0064 43E3      		ldi r20,lo8(51)
 468               	.LVL25:
 469               	.L36:
 199:../src/eeprom_driver.c ****                 
 470               		.loc 1 199 0
 471 0066 9093 C001 		sts 448,r25
 472               	.LVL26:
 201:../src/eeprom_driver.c ****                 
 473               		.loc 1 201 0
 474 006a F801      		movw r30,r16
 475 006c 5191      		ld r21,Z+
 476 006e 8F01      		movw r16,r30
 477 0070 2F5F      		subi r18,-1
 478 0072 3F4F      		sbci r19,-1
 479               	.LVL27:
 480 0074 5093 C401 		sts 452,r21
 481               	.LVL28:
 204:../src/eeprom_driver.c ****                 
 482               		.loc 1 204 0
 483 0078 1197      		sbiw r26,1
 484               	.LVL29:
 206:../src/eeprom_driver.c ****                 {
 485               		.loc 1 206 0
 486 007a 01F0      		breq .L37
 203:../src/eeprom_driver.c ****                 len--;
 487               		.loc 1 203 0 discriminator 1
 488 007c 9F5F      		subi r25,lo8(-(1))
 489               	.LVL30:
 206:../src/eeprom_driver.c ****                 {
 490               		.loc 1 206 0 discriminator 1
 491 007e 9032      		cpi r25,lo8(32)
 492 0080 01F4      		brne .L36
 493               	.LVL31:
 494               	.L37:
 208:../src/eeprom_driver.c ****                         NVM.ADDR1 = (page_addr >> 8) & 0x1F;
 495               		.loc 1 208 0
 496 0082 C093 C001 		sts 448,r28
 209:../src/eeprom_driver.c ****                         
 497               		.loc 1 209 0
 498 0086 8D2F      		mov r24,r29
 499 0088 8F71      		andi r24,lo8(31)
 500 008a 8093 C101 		sts 449,r24
 211:../src/eeprom_driver.c ****                         NVM_EXEC();
 501               		.loc 1 211 0
 502 008e D092 CA01 		sts 458,r13
 503               	.LVL32:
 504               	.LBB118:
 505               	.LBB117:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 506               		.loc 1 50 0
 507 0092 C701      		movw r24,r14
 508 0094 F501      		movw r30,r10
 509               	/* #APP */
 510               	 ;  50 "../src/eeprom_driver.c" 1
 511 0096 84BF      		out 52, r24
 512 0098 6083      		st z, r22
 513               	 ;  0 "" 2
 514               	/* #NOAPP */
 515               	.LBE117:
 516               	.LBE118:
 214:../src/eeprom_driver.c ****                         byte_addr = 0;
 517               		.loc 1 214 0
 518 009a A096      		adiw r28,32
 519               	.LVL33:
 520               	.L39:
 521               	.LBB119:
 522               	.LBB120:
 115:../src/eeprom_driver.c **** }
 523               		.loc 1 115 0
 524 009c 9091 CF01 		lds r25,463
 525 00a0 97FD      		sbrc r25,7
 526 00a2 00C0      		rjmp .L39
 527               	.LBE120:
 528               	.LBE119:
 529               		.loc 1 219 0
 530 00a4 4093 CA01 		sts 458,r20
 531               	.LVL34:
 197:../src/eeprom_driver.c ****         {
 532               		.loc 1 197 0
 533 00a8 1097      		sbiw r26,0
 534 00aa 01F0      		breq .L35
 215:../src/eeprom_driver.c ****                         
 535               		.loc 1 215 0
 536 00ac 90E0      		ldi r25,0
 537 00ae 00C0      		rjmp .L36
 538               	.LVL35:
 539               	.L40:
 188:../src/eeprom_driver.c ****         
 540               		.loc 1 188 0
 541 00b0 20E0      		ldi r18,0
 542 00b2 30E0      		ldi r19,0
 543               	.LVL36:
 544               	.L35:
 220:../src/eeprom_driver.c ****                 }
 221:../src/eeprom_driver.c ****                 
 222:../src/eeprom_driver.c ****                 cnt++;
 223:../src/eeprom_driver.c ****         }
 224:../src/eeprom_driver.c ****         
 225:../src/eeprom_driver.c ****         return cnt;
 226:../src/eeprom_driver.c **** }
 545               		.loc 1 226 0
 546 00b4 C901      		movw r24,r18
 547               	/* epilogue start */
 548 00b6 DF91      		pop r29
 549 00b8 CF91      		pop r28
 550               	.LVL37:
 551 00ba 1F91      		pop r17
 552 00bc 0F91      		pop r16
 553 00be FF90      		pop r15
 554 00c0 EF90      		pop r14
 555 00c2 DF90      		pop r13
 556 00c4 BF90      		pop r11
 557 00c6 AF90      		pop r10
 558 00c8 0895      		ret
 559               	.LVL38:
 560               	.L51:
 561               	.LBB121:
 562               	.LBB112:
 563               	.LBB108:
 564               	.LBB109:
 123:../src/eeprom_driver.c ****                 NVM_EXEC();
 565               		.loc 1 123 0
 566 00ca 86E3      		ldi r24,lo8(54)
 567 00cc 8093 CA01 		sts 458,r24
 568               	.LVL39:
 569               	.LBB110:
 570               	.LBB111:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 571               		.loc 1 50 0
 572 00d0 EBEC      		ldi r30,lo8(-53)
 573 00d2 F1E0      		ldi r31,lo8(1)
 574 00d4 41E0      		ldi r20,lo8(1)
 575 00d6 50E0      		ldi r21,0
 576               	.LVL40:
 577 00d8 28ED      		ldi r18,lo8(-40)
 578 00da 30E0      		ldi r19,0
 579               	/* #APP */
 580               	 ;  50 "../src/eeprom_driver.c" 1
 581 00dc 24BF      		out 52, r18
 582 00de 4083      		st z, r20
 583               	 ;  0 "" 2
 584               	/* #NOAPP */
 585 00e0 00C0      		rjmp .L34
 586               	.LBE111:
 587               	.LBE110:
 588               	.LBE109:
 589               	.LBE108:
 590               	.LBE112:
 591               	.LBE121:
 592               		.cfi_endproc
 593               	.LFE6:
 595               		.section	.text.EEPROM_erase_page,"ax",@progbits
 596               	.global	EEPROM_erase_page
 598               	EEPROM_erase_page:
 599               	.LFB7:
 227:../src/eeprom_driver.c **** 
 228:../src/eeprom_driver.c **** 
 229:../src/eeprom_driver.c **** void EEPROM_erase_page(uint16_t addr)
 230:../src/eeprom_driver.c **** {
 600               		.loc 1 230 0
 601               		.cfi_startproc
 602               	.LVL41:
 603               	/* prologue: function */
 604               	/* frame size = 0 */
 605               	/* stack size = 0 */
 606               	.L__stack_usage = 0
 231:../src/eeprom_driver.c ****         NVM.ADDR0 = addr & 0xFF;
 607               		.loc 1 231 0
 608 0000 8093 C001 		sts 448,r24
 232:../src/eeprom_driver.c ****         NVM.ADDR1 = (addr >> 8) & 0x1F;
 609               		.loc 1 232 0
 610 0004 9F71      		andi r25,lo8(31)
 611 0006 9093 C101 		sts 449,r25
 233:../src/eeprom_driver.c ****         NVM.ADDR2 = 0;
 612               		.loc 1 233 0
 613 000a 1092 C201 		sts 450,__zero_reg__
 614               	.LVL42:
 615               	.L53:
 616               	.LBB122:
 617               	.LBB123:
 115:../src/eeprom_driver.c **** }
 618               		.loc 1 115 0
 619 000e 8091 CF01 		lds r24,463
 620 0012 87FD      		sbrc r24,7
 621 0014 00C0      		rjmp .L53
 622               	.LBE123:
 623               	.LBE122:
 234:../src/eeprom_driver.c ****         
 235:../src/eeprom_driver.c ****         wait_for_nvm();
 236:../src/eeprom_driver.c ****         
 237:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_ERASE_EEPROM_PAGE_gc;
 624               		.loc 1 237 0
 625 0016 82E3      		ldi r24,lo8(50)
 626 0018 8093 CA01 		sts 458,r24
 627               	.LVL43:
 628               	.LBB124:
 629               	.LBB125:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 630               		.loc 1 50 0
 631 001c EBEC      		ldi r30,lo8(-53)
 632 001e F1E0      		ldi r31,lo8(1)
 633 0020 21E0      		ldi r18,lo8(1)
 634 0022 30E0      		ldi r19,0
 635 0024 88ED      		ldi r24,lo8(-40)
 636 0026 90E0      		ldi r25,0
 637               	/* #APP */
 638               	 ;  50 "../src/eeprom_driver.c" 1
 639 0028 84BF      		out 52, r24
 640 002a 2083      		st z, r18
 641               	 ;  0 "" 2
 642               	/* #NOAPP */
 643 002c 0895      		ret
 644               	.LBE125:
 645               	.LBE124:
 646               		.cfi_endproc
 647               	.LFE7:
 649               		.section	.text.EEPROM_erase_all,"ax",@progbits
 650               	.global	EEPROM_erase_all
 652               	EEPROM_erase_all:
 653               	.LFB8:
 238:../src/eeprom_driver.c ****         NVM_EXEC_WRAPPER();
 239:../src/eeprom_driver.c **** }
 240:../src/eeprom_driver.c **** 
 241:../src/eeprom_driver.c **** 
 242:../src/eeprom_driver.c **** void EEPROM_erase_all(void)
 243:../src/eeprom_driver.c **** {
 654               		.loc 1 243 0
 655               		.cfi_startproc
 656               	/* prologue: function */
 657               	/* frame size = 0 */
 658               	/* stack size = 0 */
 659               	.L__stack_usage = 0
 660               	.L56:
 661               	.LBB126:
 662               	.LBB127:
 115:../src/eeprom_driver.c **** }
 663               		.loc 1 115 0
 664 0000 8091 CF01 		lds r24,463
 665 0004 87FD      		sbrc r24,7
 666 0006 00C0      		rjmp .L56
 667               	.LBE127:
 668               	.LBE126:
 244:../src/eeprom_driver.c ****         wait_for_nvm();
 245:../src/eeprom_driver.c ****         
 246:../src/eeprom_driver.c ****         NVM.CMD = NVM_CMD_ERASE_EEPROM_gc;
 669               		.loc 1 246 0
 670 0008 80E3      		ldi r24,lo8(48)
 671 000a 8093 CA01 		sts 458,r24
 672               	.LVL44:
 673               	.LBB128:
 674               	.LBB129:
  50:../src/eeprom_driver.c ****         "st z, %[cmdex]"
 675               		.loc 1 50 0
 676 000e EBEC      		ldi r30,lo8(-53)
 677 0010 F1E0      		ldi r31,lo8(1)
 678 0012 21E0      		ldi r18,lo8(1)
 679 0014 30E0      		ldi r19,0
 680 0016 88ED      		ldi r24,lo8(-40)
 681 0018 90E0      		ldi r25,0
 682               	/* #APP */
 683               	 ;  50 "../src/eeprom_driver.c" 1
 684 001a 84BF      		out 52, r24
 685 001c 2083      		st z, r18
 686               	 ;  0 "" 2
 687               	/* #NOAPP */
 688 001e 0895      		ret
 689               	.LBE129:
 690               	.LBE128:
 691               		.cfi_endproc
 692               	.LFE8:
 694               		.text
 695               	.Letext0:
 696               		.file 2 "c:\\program files (x86)\\atmel\\studio\\7.0\\toolchain\\avr8\\avr8-gnu-toolchain\\avr\\in
 697               		.file 3 "C:/Program Files (x86)/Atmel/Studio/7.0/Packs/atmel/XMEGAA_DFP/1.1.68/include/avr/iox128a
DEFINED SYMBOLS
                            *ABS*:00000000 eeprom_driver.c
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:2      *ABS*:0000003e __SP_H__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:3      *ABS*:0000003d __SP_L__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:4      *ABS*:0000003f __SREG__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:5      *ABS*:0000003b __RAMPZ__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:6      *ABS*:00000034 __CCP__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:7      *ABS*:00000000 __tmp_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:8      *ABS*:00000001 __zero_reg__
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:15     .text.wait_for_nvm:00000000 wait_for_nvm
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:38     .text.flush_buffer:00000000 flush_buffer
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:93     .text.EEPROM_read_byte:00000000 EEPROM_read_byte
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:150    .text.EEPROM_write_byte:00000000 EEPROM_write_byte
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:244    .text.EEPROM_read_block:00000000 EEPROM_read_block
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:352    .text.EEPROM_write_block:00000000 EEPROM_write_block
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:598    .text.EEPROM_erase_page:00000000 EEPROM_erase_page
C:\Users\JOHNK~1\AppData\Local\Temp\ccLVElW7.s:652    .text.EEPROM_erase_all:00000000 EEPROM_erase_all

NO UNDEFINED SYMBOLS
